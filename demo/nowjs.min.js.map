{"version":3,"file":"nowjs.min.js","sources":["../src/i18n/be.js","../src/i18n/br.js","../src/i18n/bs.js","../src/i18n/cs.js","../src/i18n/de-at.js","../src/i18n/de-ch.js","../src/i18n/de.js","../src/i18n/et.js","../src/i18n/fi.js","../src/i18n/gom-latn.js","../src/i18n/hr.js","../src/i18n/hu.js","../src/i18n/is.js","../src/i18n/lb.js","../src/i18n/lt.js","../src/i18n/lv.js","../src/i18n/mr.js","../src/i18n/pl.js","../src/i18n/ro.js","../src/i18n/ru.js","../src/i18n/sk.js","../src/i18n/sl.js","../src/i18n/tlh.js","../src/i18n/tzl.js","../src/i18n/uk.js","../src/utils/index.js","../src/Format.js","../src/Locale.js","../src/config/index.js","../src/i18n/af.js","../src/i18n/ar-dz.js","../src/i18n/ar-kw.js","../src/i18n/ar-ly.js","../src/i18n/ar-ma.js","../src/i18n/ar-sa.js","../src/i18n/ar-tn.js","../src/i18n/ar.js","../src/i18n/az.js","../src/i18n/bg.js","../src/i18n/bm.js","../src/i18n/bn.js","../src/i18n/bo.js","../src/i18n/ca.js","../src/i18n/cv.js","../src/i18n/cy.js","../src/i18n/da.js","../src/i18n/dv.js","../src/i18n/el.js","../src/i18n/en-au.js","../src/i18n/en-ca.js","../src/i18n/en-gb.js","../src/i18n/en-ie.js","../src/i18n/en-nz.js","../src/i18n/eo.js","../src/i18n/es-do.js","../src/i18n/es-us.js","../src/i18n/es.js","../src/i18n/eu.js","../src/i18n/fa.js","../src/i18n/fo.js","../src/i18n/fr-ca.js","../src/i18n/fr-ch.js","../src/i18n/fr.js","../src/i18n/fy.js","../src/i18n/gd.js","../src/i18n/gl.js","../src/i18n/gu.js","../src/i18n/he.js","../src/i18n/hi.js","../src/i18n/hy-am.js","../src/i18n/id.js","../src/i18n/it.js","../src/i18n/ja.js","../src/i18n/jv.js","../src/i18n/ka.js","../src/i18n/kk.js","../src/i18n/km.js","../src/i18n/kn.js","../src/i18n/ko.js","../src/i18n/ky.js","../src/i18n/lo.js","../src/i18n/me.js","../src/i18n/mi.js","../src/i18n/mk.js","../src/i18n/ml.js","../src/i18n/ms-my.js","../src/i18n/ms.js","../src/i18n/my.js","../src/i18n/nb.js","../src/i18n/ne.js","../src/i18n/nl-be.js","../src/i18n/nl.js","../src/i18n/nn.js","../src/i18n/pa-in.js","../src/i18n/pt-br.js","../src/i18n/pt.js","../src/i18n/sd.js","../src/i18n/se.js","../src/i18n/si.js","../src/i18n/sq.js","../src/i18n/sr-cyrl.js","../src/i18n/sr.js","../src/i18n/ss.js","../src/i18n/sv.js","../src/i18n/sw.js","../src/i18n/ta.js","../src/i18n/te.js","../src/i18n/tet.js","../src/i18n/th.js","../src/i18n/tl-ph.js","../src/i18n/tr.js","../src/i18n/ur.js","../src/i18n/index.js","../src/i18n/tzm-latn.js","../src/i18n/tzm.js","../src/i18n/uz-latn.js","../src/i18n/uz.js","../src/i18n/vi.js","../src/i18n/x-pseudo.js","../src/i18n/yo.js","../src/i18n/zh-cn.js","../src/i18n/zh-hk.js","../src/i18n/zh-tw.js","../src/Now.js"],"sourcesContent":["//! now.js locale configuration\n//! locale : Belarusian [be]\n//! author : Dmitry Demidov : https://github.com/demidov91\n//! author: Praleska: http://praleska.pro/\n//! Author : Menelion Elensúle : https://github.com/Oire\n/* jshint -W100 */\n\n\n\nfunction plural(word, num) {\n  const forms = word.split('_');\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n}\n\nfunction relativeTimeWithPlural(number, withoutSuffix, key) {\n  const format = {\n    mm: withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',\n    hh: withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',\n    dd: 'дзень_дні_дзён',\n    MM: 'месяц_месяцы_месяцаў',\n    yy: 'год_гады_гадоў',\n  };\n  if (key === 'm') {\n    return withoutSuffix ? 'хвіліна' : 'хвіліну';\n  } else if (key === 'h') {\n    return withoutSuffix ? 'гадзіна' : 'гадзіну';\n  }\n  return `${number} ${plural(format[key], +number)}`;\n}\n\nexport default {\n  months: {\n    format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),\n    standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_'),\n  },\n  monthsShort: 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),\n  weekdays: {\n    format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),\n    standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),\n    isFormat: /\\[ ?[Вв] ?(?:мінулую|наступную)? ?\\] ?dddd/,\n  },\n  weekdaysShort: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n  weekdaysMin: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY г.',\n    LLL: 'D MMMM YYYY г., HH:mm',\n    LLLL: 'dddd, D MMMM YYYY г., HH:mm',\n  },\n  calendar: {\n    sameDay: '[Сёння ў] LT',\n    nextDay: '[Заўтра ў] LT',\n    lastDay: '[Учора ў] LT',\n    nextWeek() {\n      return '[У] dddd [ў] LT';\n    },\n    lastWeek() {\n      switch (this.day()) {\n        case 0:\n        case 3:\n        case 5:\n        case 6:\n          return '[У мінулую] dddd [ў] LT';\n        case 1:\n        case 2:\n        case 4:\n          return '[У мінулы] dddd [ў] LT';\n      }\n    },\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'праз %s',\n    past: '%s таму',\n    s: 'некалькі секунд',\n    m: relativeTimeWithPlural,\n    mm: relativeTimeWithPlural,\n    h: relativeTimeWithPlural,\n    hh: relativeTimeWithPlural,\n    d: 'дзень',\n    dd: relativeTimeWithPlural,\n    M: 'месяц',\n    MM: relativeTimeWithPlural,\n    y: 'год',\n    yy: relativeTimeWithPlural,\n  },\n  meridiemParse: /ночы|раніцы|дня|вечара/,\n  isPM(input) {\n    return /^(дня|вечара)$/.test(input);\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'ночы';\n    } else if (hour < 12) {\n      return 'раніцы';\n    } else if (hour < 17) {\n      return 'дня';\n    }\n    return 'вечара';\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(і|ы|га)/,\n  ordinal(number, period) {\n    switch (period) {\n      case 'M':\n      case 'd':\n      case 'DDD':\n      case 'w':\n      case 'W':\n        return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? `${number}-і` : `${number}-ы`;\n      case 'D':\n        return `${number}-га`;\n      default:\n        return number;\n    }\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Breton [br]\n//! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou\n/* jshint -W100 */\n\nfunction relativeTimeWithMutation(number, withoutSuffix, key) {\n  const format = {\n    mm: 'munutenn',\n    MM: 'miz',\n    dd: 'devezh',\n  };\n  return `${number} ${mutation(format[key], number)}`;\n}\n\nfunction specialMutationForYears(number) {\n  switch (lastNumber(number)) {\n    case 1:\n    case 3:\n    case 4:\n    case 5:\n    case 9:\n      return `${number} bloaz`;\n    default:\n      return `${number} vloaz`;\n  }\n}\n\nfunction lastNumber(number) {\n  if (number > 9) {\n    return lastNumber(number % 10);\n  }\n  return number;\n}\n\nfunction mutation(text, number) {\n  if (number === 2) {\n    return softMutation(text);\n  }\n  return text;\n}\n\nfunction softMutation(text) {\n  const mutationTable = {\n    m: 'v',\n    b: 'v',\n    d: 'z',\n  };\n  if (mutationTable[text.charAt(0)] === undefined) {\n    return text;\n  }\n  return mutationTable[text.charAt(0)] + text.substring(1);\n}\n\nexport default {\n  months: 'Genver_C\\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),\n  monthsShort: 'Gen_C\\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),\n  weekdays: 'Sul_Lun_Meurzh_Merc\\'her_Yaou_Gwener_Sadorn'.split('_'),\n  weekdaysShort: 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),\n  weekdaysMin: 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h[e]mm A',\n    LTS: 'h[e]mm:ss A',\n    L: 'DD/MM/YYYY',\n    LL: 'D [a viz] MMMM YYYY',\n    LLL: 'D [a viz] MMMM YYYY h[e]mm A',\n    LLLL: 'dddd, D [a viz] MMMM YYYY h[e]mm A',\n  },\n  calendar: {\n    sameDay: '[Hiziv da] LT',\n    nextDay: '[Warc\\'hoazh da] LT',\n    nextWeek: 'dddd [da] LT',\n    lastDay: '[Dec\\'h da] LT',\n    lastWeek: 'dddd [paset da] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'a-benn %s',\n    past: '%s \\'zo',\n    s: 'un nebeud segondennoù',\n    m: 'ur vunutenn',\n    mm: relativeTimeWithMutation,\n    h: 'un eur',\n    hh: '%d eur',\n    d: 'un devezh',\n    dd: relativeTimeWithMutation,\n    M: 'ur miz',\n    MM: relativeTimeWithMutation,\n    y: 'ur bloaz',\n    yy: specialMutationForYears,\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(añ|vet)/,\n  ordinal(number) {\n    const output = (number === 1) ? 'añ' : 'vet';\n    return number + output;\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Bosnian [bs]\n//! author : Nedim Cholich : https://github.com/frontyard\n//! based on (hr) translation by Bojan Marković\n/* jshint -W100 */\n\nfunction translate(number, withoutSuffix, key) {\n  let result = `${number} `;\n  switch (key) {\n    case 'm':\n      return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n    case 'mm':\n      if (number === 1) {\n        result += 'minuta';\n      } else if (number === 2 || number === 3 || number === 4) {\n        result += 'minute';\n      } else {\n        result += 'minuta';\n      }\n      return result;\n    case 'h':\n      return withoutSuffix ? 'jedan sat' : 'jednog sata';\n    case 'hh':\n      if (number === 1) {\n        result += 'sat';\n      } else if (number === 2 || number === 3 || number === 4) {\n        result += 'sata';\n      } else {\n        result += 'sati';\n      }\n      return result;\n    case 'dd':\n      if (number === 1) {\n        result += 'dan';\n      } else {\n        result += 'dana';\n      }\n      return result;\n    case 'MM':\n      if (number === 1) {\n        result += 'mjesec';\n      } else if (number === 2 || number === 3 || number === 4) {\n        result += 'mjeseca';\n      } else {\n        result += 'mjeseci';\n      }\n      return result;\n    case 'yy':\n      if (number === 1) {\n        result += 'godina';\n      } else if (number === 2 || number === 3 || number === 4) {\n        result += 'godine';\n      } else {\n        result += 'godina';\n      }\n      return result;\n  }\n}\n\nexport default {\n  months: 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),\n  monthsShort: 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n  weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n  weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd, D. MMMM YYYY H:mm',\n  },\n  calendar: {\n    sameDay: '[danas u] LT',\n    nextDay: '[sutra u] LT',\n    nextWeek() {\n      switch (this.day()) {\n        case 0:\n          return '[u] [nedjelju] [u] LT';\n        case 3:\n          return '[u] [srijedu] [u] LT';\n        case 6:\n          return '[u] [subotu] [u] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[u] dddd [u] LT';\n      }\n    },\n    lastDay: '[jučer u] LT',\n    lastWeek() {\n      switch (this.day()) {\n        case 0:\n        case 3:\n          return '[prošlu] dddd [u] LT';\n        case 6:\n          return '[prošle] [subote] [u] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[prošli] dddd [u] LT';\n      }\n    },\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: 'prije %s',\n    s: 'par sekundi',\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: 'dan',\n    dd: translate,\n    M: 'mjesec',\n    MM: translate,\n    y: 'godinu',\n    yy: translate,\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Czech [cs]\n//! author : petrbela : https://github.com/petrbela\n/* jshint -W100 */\n\nconst months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_');\nconst monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');\n\nfunction plural(n) {\n  return (n > 1) && (n < 5) && (~~(n / 10) !== 1);\n}\n\nfunction translate(number, withoutSuffix, key, isFuture) {\n  const result = `${number} `;\n  switch (key) {\n    case 's': // a few seconds / in a few seconds / a few seconds ago\n      return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';\n    case 'm': // a minute / in a minute / a minute ago\n      return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');\n    case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(number) ? 'minuty' : 'minut');\n      }\n      return `${result}minutami`;\n\n      break;\n    case 'h': // an hour / in an hour / an hour ago\n      return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n    case 'hh': // 9 hours / in 9 hours / 9 hours ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(number) ? 'hodiny' : 'hodin');\n      }\n      return `${result}hodinami`;\n\n      break;\n    case 'd': // a day / in a day / a day ago\n      return (withoutSuffix || isFuture) ? 'den' : 'dnem';\n    case 'dd': // 9 days / in 9 days / 9 days ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(number) ? 'dny' : 'dní');\n      }\n      return `${result}dny`;\n\n      break;\n    case 'M': // a month / in a month / a month ago\n      return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';\n    case 'MM': // 9 months / in 9 months / 9 months ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(number) ? 'měsíce' : 'měsíců');\n      }\n      return `${result}měsíci`;\n\n      break;\n    case 'y': // a year / in a year / a year ago\n      return (withoutSuffix || isFuture) ? 'rok' : 'rokem';\n    case 'yy': // 9 years / in 9 years / 9 years ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(number) ? 'roky' : 'let');\n      }\n      return `${result}lety`;\n\n      break;\n  }\n}\n\nexport default {\n  months,\n  monthsShort,\n  monthsParse: (function(months, monthsShort) {\n    let i;\n    const _monthsParse = [];\n    for (i = 0; i < 12; i++) {\n      // use custom parser to solve problem with July (červenec)\n      _monthsParse[i] = new RegExp(`^${months[i]}$|^${monthsShort[i]}$`, 'i');\n    }\n    return _monthsParse;\n  }(months, monthsShort)),\n  shortMonthsParse: (function(monthsShort) {\n    let i;\n    const _shortMonthsParse = [];\n    for (i = 0; i < 12; i++) {\n      _shortMonthsParse[i] = new RegExp(`^${monthsShort[i]}$`, 'i');\n    }\n    return _shortMonthsParse;\n  }(monthsShort)),\n  longMonthsParse: (function(months) {\n    let i;\n    const _longMonthsParse = [];\n    for (i = 0; i < 12; i++) {\n      _longMonthsParse[i] = new RegExp(`^${months[i]}$`, 'i');\n    }\n    return _longMonthsParse;\n  }(months)),\n  weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n  weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),\n  weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd D. MMMM YYYY H:mm',\n    l: 'D. M. YYYY',\n  },\n  calendar: {\n    sameDay: '[dnes v] LT',\n    nextDay: '[zítra v] LT',\n    nextWeek() {\n      switch (this.day()) {\n        case 0:\n          return '[v neděli v] LT';\n        case 1:\n        case 2:\n          return '[v] dddd [v] LT';\n        case 3:\n          return '[ve středu v] LT';\n        case 4:\n          return '[ve čtvrtek v] LT';\n        case 5:\n          return '[v pátek v] LT';\n        case 6:\n          return '[v sobotu v] LT';\n      }\n    },\n    lastDay: '[včera v] LT',\n    lastWeek() {\n      switch (this.day()) {\n        case 0:\n          return '[minulou neděli v] LT';\n        case 1:\n        case 2:\n          return '[minulé] dddd [v] LT';\n        case 3:\n          return '[minulou středu v] LT';\n        case 4:\n        case 5:\n          return '[minulý] dddd [v] LT';\n        case 6:\n          return '[minulou sobotu v] LT';\n      }\n    },\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: 'před %s',\n    s: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate,\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n\n","//! now.js locale configuration\n//! locale : German (Austria) [de-at]\n//! author : lluchs : https://github.com/lluchs\n//! author: Menelion Elensúle: https://github.com/Oire\n//! author : Martin Groller : https://github.com/MadMG\n//! author : Mikolaj Dadela : https://github.com/mik01aj\n/* jshint -W100 */\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n  const format = {\n    m: ['eine Minute', 'einer Minute'],\n    h: ['eine Stunde', 'einer Stunde'],\n    d: ['ein Tag', 'einem Tag'],\n    dd: [`${number} Tage`, `${number} Tagen`],\n    M: ['ein Monat', 'einem Monat'],\n    MM: [`${number} Monate`, `${number} Monaten`],\n    y: ['ein Jahr', 'einem Jahr'],\n    yy: [`${number} Jahre`, `${number} Jahren`],\n  };\n  return withoutSuffix ? format[key][0] : format[key][1];\n}\n\nexport default {\n  months: 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n  monthsShort: 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n  weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n  weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY HH:mm',\n    LLLL: 'dddd, D. MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[heute um] LT [Uhr]',\n    sameElse: 'L',\n    nextDay: '[morgen um] LT [Uhr]',\n    nextWeek: 'dddd [um] LT [Uhr]',\n    lastDay: '[gestern um] LT [Uhr]',\n    lastWeek: '[letzten] dddd [um] LT [Uhr]',\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: 'vor %s',\n    s: 'ein paar Sekunden',\n    m: processRelativeTime,\n    mm: '%d Minuten',\n    h: processRelativeTime,\n    hh: '%d Stunden',\n    d: processRelativeTime,\n    dd: processRelativeTime,\n    M: processRelativeTime,\n    MM: processRelativeTime,\n    y: processRelativeTime,\n    yy: processRelativeTime,\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : German (Switzerland) [de-ch]\n//! author : sschueller : https://github.com/sschueller\n\n// based on: https://www.bk.admin.ch/dokumentation/sprachen/04915/05016/index.html?lang=de#\n/* jshint -W100 */\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n  const format = {\n    m: ['eine Minute', 'einer Minute'],\n    h: ['eine Stunde', 'einer Stunde'],\n    d: ['ein Tag', 'einem Tag'],\n    dd: [`${number} Tage`, `${number} Tagen`],\n    M: ['ein Monat', 'einem Monat'],\n    MM: [`${number} Monate`, `${number} Monaten`],\n    y: ['ein Jahr', 'einem Jahr'],\n    yy: [`${number} Jahre`, `${number} Jahren`],\n  };\n  return withoutSuffix ? format[key][0] : format[key][1];\n}\n\nexport default {\n  months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n  monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n  weekdaysShort: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n  weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH.mm',\n    LTS: 'HH.mm.ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY HH.mm',\n    LLLL: 'dddd, D. MMMM YYYY HH.mm',\n  },\n  calendar: {\n    sameDay: '[heute um] LT [Uhr]',\n    sameElse: 'L',\n    nextDay: '[morgen um] LT [Uhr]',\n    nextWeek: 'dddd [um] LT [Uhr]',\n    lastDay: '[gestern um] LT [Uhr]',\n    lastWeek: '[letzten] dddd [um] LT [Uhr]',\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: 'vor %s',\n    s: 'ein paar Sekunden',\n    m: processRelativeTime,\n    mm: '%d Minuten',\n    h: processRelativeTime,\n    hh: '%d Stunden',\n    d: processRelativeTime,\n    dd: processRelativeTime,\n    M: processRelativeTime,\n    MM: processRelativeTime,\n    y: processRelativeTime,\n    yy: processRelativeTime,\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : German [de]\n//! author : lluchs : https://github.com/lluchs\n//! author: Menelion Elensúle: https://github.com/Oire\n//! author : Mikolaj Dadela : https://github.com/mik01aj\n/* jshint -W100 */\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n  const format = {\n    m: ['eine Minute', 'einer Minute'],\n    h: ['eine Stunde', 'einer Stunde'],\n    d: ['ein Tag', 'einem Tag'],\n    dd: [`${number} Tage`, `${number} Tagen`],\n    M: ['ein Monat', 'einem Monat'],\n    MM: [`${number} Monate`, `${number} Monaten`],\n    y: ['ein Jahr', 'einem Jahr'],\n    yy: [`${number} Jahre`, `${number} Jahren`],\n  };\n  return withoutSuffix ? format[key][0] : format[key][1];\n}\n\nexport default {\n  months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n  monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n  weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n  weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY HH:mm',\n    LLLL: 'dddd, D. MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[heute um] LT [Uhr]',\n    sameElse: 'L',\n    nextDay: '[morgen um] LT [Uhr]',\n    nextWeek: 'dddd [um] LT [Uhr]',\n    lastDay: '[gestern um] LT [Uhr]',\n    lastWeek: '[letzten] dddd [um] LT [Uhr]',\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: 'vor %s',\n    s: 'ein paar Sekunden',\n    m: processRelativeTime,\n    mm: '%d Minuten',\n    h: processRelativeTime,\n    hh: '%d Stunden',\n    d: processRelativeTime,\n    dd: processRelativeTime,\n    M: processRelativeTime,\n    MM: processRelativeTime,\n    y: processRelativeTime,\n    yy: processRelativeTime,\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Estonian [et]\n//! author : Henry Kehlmann : https://github.com/madhenry\n//! improvements : Illimar Tambek : https://github.com/ragulka\n/* jshint -W100 */\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n  const format = {\n    s: ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n    m: ['ühe minuti', 'üks minut'],\n    mm: [`${number} minuti`, `${number} minutit`],\n    h: ['ühe tunni', 'tund aega', 'üks tund'],\n    hh: [`${number} tunni`, `${number} tundi`],\n    d: ['ühe päeva', 'üks päev'],\n    M: ['kuu aja', 'kuu aega', 'üks kuu'],\n    MM: [`${number} kuu`, `${number} kuud`],\n    y: ['ühe aasta', 'aasta', 'üks aasta'],\n    yy: [`${number} aasta`, `${number} aastat`],\n  };\n  if (withoutSuffix) {\n    return format[key][2] ? format[key][2] : format[key][1];\n  }\n  return isFuture ? format[key][0] : format[key][1];\n}\n\nexport default {\n  months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n  monthsShort: 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n  weekdays: 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),\n  weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),\n  weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd, D. MMMM YYYY H:mm',\n  },\n  calendar: {\n    sameDay: '[Täna,] LT',\n    nextDay: '[Homme,] LT',\n    nextWeek: '[Järgmine] dddd LT',\n    lastDay: '[Eile,] LT',\n    lastWeek: '[Eelmine] dddd LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s pärast',\n    past: '%s tagasi',\n    s: processRelativeTime,\n    m: processRelativeTime,\n    mm: processRelativeTime,\n    h: processRelativeTime,\n    hh: processRelativeTime,\n    d: processRelativeTime,\n    dd: '%d päeva',\n    M: processRelativeTime,\n    MM: processRelativeTime,\n    y: processRelativeTime,\n    yy: processRelativeTime,\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Finnish [fi]\n//! author : Tarmo Aidantausta : https://github.com/bleadof\n/* jshint -W100 */\n\nconst numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' ');\nconst numbersFuture = [\n  'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',\n  numbersPast[7], numbersPast[8], numbersPast[9],\n];\n\nfunction translate(number, withoutSuffix, key, isFuture) {\n  let result = '';\n  switch (key) {\n    case 's':\n      return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n    case 'm':\n      return isFuture ? 'minuutin' : 'minuutti';\n    case 'mm':\n      result = isFuture ? 'minuutin' : 'minuuttia';\n      break;\n    case 'h':\n      return isFuture ? 'tunnin' : 'tunti';\n    case 'hh':\n      result = isFuture ? 'tunnin' : 'tuntia';\n      break;\n    case 'd':\n      return isFuture ? 'päivän' : 'päivä';\n    case 'dd':\n      result = isFuture ? 'päivän' : 'päivää';\n      break;\n    case 'M':\n      return isFuture ? 'kuukauden' : 'kuukausi';\n    case 'MM':\n      result = isFuture ? 'kuukauden' : 'kuukautta';\n      break;\n    case 'y':\n      return isFuture ? 'vuoden' : 'vuosi';\n    case 'yy':\n      result = isFuture ? 'vuoden' : 'vuotta';\n      break;\n  }\n  result = `${verbalNumber(number, isFuture)} ${result}`;\n  return result;\n}\n\nfunction verbalNumber(number, isFuture) {\n  return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;\n}\n\nexport default {\n  months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n  monthsShort: 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),\n  weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\n  weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),\n  weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),\n  longDateFormat: {\n    LT: 'HH.mm',\n    LTS: 'HH.mm.ss',\n    L: 'DD.MM.YYYY',\n    LL: 'Do MMMM[ta] YYYY',\n    LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',\n    LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\n    l: 'D.M.YYYY',\n    ll: 'Do MMM YYYY',\n    lll: 'Do MMM YYYY, [klo] HH.mm',\n    llll: 'ddd, Do MMM YYYY, [klo] HH.mm',\n  },\n  calendar: {\n    sameDay: '[tänään] [klo] LT',\n    nextDay: '[huomenna] [klo] LT',\n    nextWeek: 'dddd [klo] LT',\n    lastDay: '[eilen] [klo] LT',\n    lastWeek: '[viime] dddd[na] [klo] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s päästä',\n    past: '%s sitten',\n    s: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate,\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Konkani Latin script [gom-latn]\n//! author : The Discoverer : https://github.com/WikiDiscoverer\n/* jshint -W100 */\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n  const format = {\n    s: ['thodde secondanim', 'thodde second'],\n    m: ['eka mintan', 'ek minute'],\n    mm: [`${number} mintanim`, `${number} mintam`],\n    h: ['eka horan', 'ek hor'],\n    hh: [`${number} horanim`, `${number} hor`],\n    d: ['eka disan', 'ek dis'],\n    dd: [`${number} disanim`, `${number} dis`],\n    M: ['eka mhoinean', 'ek mhoino'],\n    MM: [`${number} mhoineanim`, `${number} mhoine`],\n    y: ['eka vorsan', 'ek voros'],\n    yy: [`${number} vorsanim`, `${number} vorsam`],\n  };\n  return withoutSuffix ? format[key][0] : format[key][1];\n}\n\nexport default {\n  months: 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'),\n  monthsShort: 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son\\'var'.split('_'),\n  weekdaysShort: 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),\n  weekdaysMin: 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'A h:mm [vazta]',\n    LTS: 'A h:mm:ss [vazta]',\n    L: 'DD-MM-YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY A h:mm [vazta]',\n    LLLL: 'dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]',\n    llll: 'ddd, D MMM YYYY, A h:mm [vazta]',\n  },\n  calendar: {\n    sameDay: '[Aiz] LT',\n    nextDay: '[Faleam] LT',\n    nextWeek: '[Ieta to] dddd[,] LT',\n    lastDay: '[Kal] LT',\n    lastWeek: '[Fatlo] dddd[,] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s',\n    past: '%s adim',\n    s: processRelativeTime,\n    m: processRelativeTime,\n    mm: processRelativeTime,\n    h: processRelativeTime,\n    hh: processRelativeTime,\n    d: processRelativeTime,\n    dd: processRelativeTime,\n    M: processRelativeTime,\n    MM: processRelativeTime,\n    y: processRelativeTime,\n    yy: processRelativeTime,\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(er)/,\n  ordinal(number, period) {\n    switch (period) {\n      // the ordinal 'er' only applies to day of the month\n      case 'D':\n        return `${number}er`;\n      default:\n      case 'M':\n      case 'Q':\n      case 'DDD':\n      case 'd':\n      case 'w':\n      case 'W':\n        return number;\n    }\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n  meridiemParse: /rati|sokalli|donparam|sanje/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'rati') {\n      return hour < 4 ? hour : hour + 12;\n    } else if (meridiem === 'sokalli') {\n      return hour;\n    } else if (meridiem === 'donparam') {\n      return hour > 12 ? hour : hour + 12;\n    } else if (meridiem === 'sanje') {\n      return hour + 12;\n    }\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'rati';\n    } else if (hour < 12) {\n      return 'sokalli';\n    } else if (hour < 16) {\n      return 'donparam';\n    } else if (hour < 20) {\n      return 'sanje';\n    }\n    return 'rati';\n  },\n};\n","//! now.js locale configuration\n//! locale : Croatian [hr]\n//! author : Bojan Marković : https://github.com/bmarkovic\n/* jshint -W100 */\n\nfunction translate(number, withoutSuffix, key) {\n  let result = `${number} `;\n  switch (key) {\n    case 'm':\n      return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n    case 'mm':\n      if (number === 1) {\n        result += 'minuta';\n      } else if (number === 2 || number === 3 || number === 4) {\n        result += 'minute';\n      } else {\n        result += 'minuta';\n      }\n      return result;\n    case 'h':\n      return withoutSuffix ? 'jedan sat' : 'jednog sata';\n    case 'hh':\n      if (number === 1) {\n        result += 'sat';\n      } else if (number === 2 || number === 3 || number === 4) {\n        result += 'sata';\n      } else {\n        result += 'sati';\n      }\n      return result;\n    case 'dd':\n      if (number === 1) {\n        result += 'dan';\n      } else {\n        result += 'dana';\n      }\n      return result;\n    case 'MM':\n      if (number === 1) {\n        result += 'mjesec';\n      } else if (number === 2 || number === 3 || number === 4) {\n        result += 'mjeseca';\n      } else {\n        result += 'mjeseci';\n      }\n      return result;\n    case 'yy':\n      if (number === 1) {\n        result += 'godina';\n      } else if (number === 2 || number === 3 || number === 4) {\n        result += 'godine';\n      } else {\n        result += 'godina';\n      }\n      return result;\n  }\n}\n\nexport default {\n  months: {\n    format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),\n    standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_'),\n  },\n  monthsShort: 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n  weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n  weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd, D. MMMM YYYY H:mm',\n  },\n  calendar: {\n    sameDay: '[danas u] LT',\n    nextDay: '[sutra u] LT',\n    nextWeek() {\n      switch (this.day()) {\n        case 0:\n          return '[u] [nedjelju] [u] LT';\n        case 3:\n          return '[u] [srijedu] [u] LT';\n        case 6:\n          return '[u] [subotu] [u] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[u] dddd [u] LT';\n      }\n    },\n    lastDay: '[jučer u] LT',\n    lastWeek() {\n      switch (this.day()) {\n        case 0:\n        case 3:\n          return '[prošlu] dddd [u] LT';\n        case 6:\n          return '[prošle] [subote] [u] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[prošli] dddd [u] LT';\n      }\n    },\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: 'prije %s',\n    s: 'par sekundi',\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: 'dan',\n    dd: translate,\n    M: 'mjesec',\n    MM: translate,\n    y: 'godinu',\n    yy: translate,\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Hungarian [hu]\n//! author : Adam Brunner : https://github.com/adambrunner\n/* jshint -W100 */\n\nconst weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\n\nfunction translate(number, withoutSuffix, key, isFuture) {\n  const num = number;\n  switch (key) {\n    case 's':\n      return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';\n    case 'm':\n      return `egy${isFuture || withoutSuffix ? ' perc' : ' perce'}`;\n    case 'mm':\n      return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n    case 'h':\n      return `egy${isFuture || withoutSuffix ? ' óra' : ' órája'}`;\n    case 'hh':\n      return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n    case 'd':\n      return `egy${isFuture || withoutSuffix ? ' nap' : ' napja'}`;\n    case 'dd':\n      return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n    case 'M':\n      return `egy${isFuture || withoutSuffix ? ' hónap' : ' hónapja'}`;\n    case 'MM':\n      return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n    case 'y':\n      return `egy${isFuture || withoutSuffix ? ' év' : ' éve'}`;\n    case 'yy':\n      return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n  }\n  return '';\n}\n\nfunction week(isFuture) {\n  return `${isFuture ? '' : '[múlt] '}[${weekEndings[this.day()]}] LT[-kor]`;\n}\n\nexport default {\n  months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),\n  monthsShort: 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),\n  weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\n  weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\n  weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'YYYY.MM.DD.',\n    LL: 'YYYY. MMMM D.',\n    LLL: 'YYYY. MMMM D. H:mm',\n    LLLL: 'YYYY. MMMM D., dddd H:mm',\n  },\n  meridiemParse: /de|du/i,\n  isPM(input) {\n    return input.charAt(1).toLowerCase() === 'u';\n  },\n  meridiem(hours, minutes, isLower) {\n    if (hours < 12) {\n      return isLower === true ? 'de' : 'DE';\n    }\n    return isLower === true ? 'du' : 'DU';\n  },\n  calendar: {\n    sameDay: '[ma] LT[-kor]',\n    nextDay: '[holnap] LT[-kor]',\n    nextWeek() {\n      return week.call(this, true);\n    },\n    lastDay: '[tegnap] LT[-kor]',\n    lastWeek() {\n      return week.call(this, false);\n    },\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s múlva',\n    past: '%s',\n    s: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate,\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Icelandic [is]\n//! author : Hinrik Örn Sigurðsson : https://github.com/hinrik\n/* jshint -W100 */\n\nfunction plural(n) {\n  if (n % 100 === 11) {\n    return true;\n  } else if (n % 10 === 1) {\n    return false;\n  }\n  return true;\n}\n\nfunction translate(number, withoutSuffix, key, isFuture) {\n  const result = `${number} `;\n  switch (key) {\n    case 's':\n      return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';\n    case 'm':\n      return withoutSuffix ? 'mínúta' : 'mínútu';\n    case 'mm':\n      if (plural(number)) {\n        return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');\n      } else if (withoutSuffix) {\n        return `${result}mínúta`;\n      }\n      return `${result}mínútu`;\n    case 'hh':\n      if (plural(number)) {\n        return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');\n      }\n      return `${result}klukkustund`;\n    case 'd':\n      if (withoutSuffix) {\n        return 'dagur';\n      }\n      return isFuture ? 'dag' : 'degi';\n    case 'dd':\n      if (plural(number)) {\n        if (withoutSuffix) {\n          return `${result}dagar`;\n        }\n        return result + (isFuture ? 'daga' : 'dögum');\n      } else if (withoutSuffix) {\n        return `${result}dagur`;\n      }\n      return result + (isFuture ? 'dag' : 'degi');\n    case 'M':\n      if (withoutSuffix) {\n        return 'mánuður';\n      }\n      return isFuture ? 'mánuð' : 'mánuði';\n    case 'MM':\n      if (plural(number)) {\n        if (withoutSuffix) {\n          return `${result}mánuðir`;\n        }\n        return result + (isFuture ? 'mánuði' : 'mánuðum');\n      } else if (withoutSuffix) {\n        return `${result}mánuður`;\n      }\n      return result + (isFuture ? 'mánuð' : 'mánuði');\n    case 'y':\n      return withoutSuffix || isFuture ? 'ár' : 'ári';\n    case 'yy':\n      if (plural(number)) {\n        return result + (withoutSuffix || isFuture ? 'ár' : 'árum');\n      }\n      return result + (withoutSuffix || isFuture ? 'ár' : 'ári');\n  }\n}\n\nexport default {\n  months: 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),\n  monthsShort: 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),\n  weekdays: 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),\n  weekdaysShort: 'sun_mán_þri_mið_fim_fös_lau'.split('_'),\n  weekdaysMin: 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY [kl.] H:mm',\n    LLLL: 'dddd, D. MMMM YYYY [kl.] H:mm',\n  },\n  calendar: {\n    sameDay: '[í dag kl.] LT',\n    nextDay: '[á morgun kl.] LT',\n    nextWeek: 'dddd [kl.] LT',\n    lastDay: '[í gær kl.] LT',\n    lastWeek: '[síðasta] dddd [kl.] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'eftir %s',\n    past: 'fyrir %s síðan',\n    s: translate,\n    m: translate,\n    mm: translate,\n    h: 'klukkustund',\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate,\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Luxembourgish [lb]\n//! author : mweimerskirch : https://github.com/mweimerskirch\n//! author : David Raison : https://github.com/kwisatz\n/* jshint -W100 */\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n  const format = {\n    m: ['eng Minutt', 'enger Minutt'],\n    h: ['eng Stonn', 'enger Stonn'],\n    d: ['een Dag', 'engem Dag'],\n    M: ['ee Mount', 'engem Mount'],\n    y: ['ee Joer', 'engem Joer'],\n  };\n  return withoutSuffix ? format[key][0] : format[key][1];\n}\n\nfunction processFutureTime(string) {\n  const number = string.substr(0, string.indexOf(' '));\n  if (eifelerRegelAppliesToNumber(number)) {\n    return `a ${string}`;\n  }\n  return `an ${string}`;\n}\n\nfunction processPastTime(string) {\n  const number = string.substr(0, string.indexOf(' '));\n  if (eifelerRegelAppliesToNumber(number)) {\n    return `viru ${string}`;\n  }\n  return `virun ${string}`;\n}\n/**\n * Returns true if the word before the given number loses the '-n' ending.\n * e.g. 'an 10 Deeg' but 'a 5 Deeg'\n *\n * @param number {integer}\n * @returns {boolean}\n */\nfunction eifelerRegelAppliesToNumber(number) {\n  number = parseInt(number, 10);\n  if (isNaN(number)) {\n    return false;\n  }\n  if (number < 0) {\n    // Negative Number --> always true\n    return true;\n  } else if (number < 10) {\n    // Only 1 digit\n    if (number >= 4 && number <= 7) {\n      return true;\n    }\n    return false;\n  } else if (number < 100) {\n    // 2 digits\n    const lastDigit = number % 10;\n    const firstDigit = number / 10;\n    if (lastDigit === 0) {\n      return eifelerRegelAppliesToNumber(firstDigit);\n    }\n    return eifelerRegelAppliesToNumber(lastDigit);\n  } else if (number < 10000) {\n    // 3 or 4 digits --> recursively check first digit\n    while (number >= 10) {\n      number /= 10;\n    }\n    return eifelerRegelAppliesToNumber(number);\n  }\n  // Anything larger than 4 digits: recursively check first n-3 digits\n  number /= 1000;\n  return eifelerRegelAppliesToNumber(number);\n}\n\nexport default {\n  months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n  monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),\n  weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),\n  weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm [Auer]',\n    LTS: 'H:mm:ss [Auer]',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm [Auer]',\n    LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]',\n  },\n  calendar: {\n    sameDay: '[Haut um] LT',\n    sameElse: 'L',\n    nextDay: '[Muer um] LT',\n    nextWeek: 'dddd [um] LT',\n    lastDay: '[Gëschter um] LT',\n    lastWeek() {\n      // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule\n      switch (this.day()) {\n        case 2:\n        case 4:\n          return '[Leschten] dddd [um] LT';\n        default:\n          return '[Leschte] dddd [um] LT';\n      }\n    },\n  },\n  relativeTime: {\n    future: processFutureTime,\n    past: processPastTime,\n    s: 'e puer Sekonnen',\n    m: processRelativeTime,\n    mm: '%d Minutten',\n    h: processRelativeTime,\n    hh: '%d Stonnen',\n    d: processRelativeTime,\n    dd: '%d Deeg',\n    M: processRelativeTime,\n    MM: '%d Méint',\n    y: processRelativeTime,\n    yy: '%d Joer',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Lithuanian [lt]\n//! author : Mindaugas Mozūras : https://github.com/mmozuras\n/* jshint -W100 */\n\nconst units = {\n  m: 'minutė_minutės_minutę',\n  mm: 'minutės_minučių_minutes',\n  h: 'valanda_valandos_valandą',\n  hh: 'valandos_valandų_valandas',\n  d: 'diena_dienos_dieną',\n  dd: 'dienos_dienų_dienas',\n  M: 'mėnuo_mėnesio_mėnesį',\n  MM: 'mėnesiai_mėnesių_mėnesius',\n  y: 'metai_metų_metus',\n  yy: 'metai_metų_metus',\n};\n\nfunction translateSeconds(number, withoutSuffix, key, isFuture) {\n  if (withoutSuffix) {\n    return 'kelios sekundės';\n  }\n  return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n}\n\nfunction translateSingular(number, withoutSuffix, key, isFuture) {\n  return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);\n}\n\nfunction special(number) {\n  return number % 10 === 0 || (number > 10 && number < 20);\n}\n\nfunction forms(key) {\n  return units[key].split('_');\n}\n\nfunction translate(number, withoutSuffix, key, isFuture) {\n  const result = `${number} `;\n  if (number === 1) {\n    return result + translateSingular(number, withoutSuffix, key[0], isFuture);\n  } else if (withoutSuffix) {\n    return result + (special(number) ? forms(key)[1] : forms(key)[0]);\n  }\n  if (isFuture) {\n    return result + forms(key)[1];\n  }\n  return result + (special(number) ? forms(key)[1] : forms(key)[2]);\n}\n\nexport default {\n  months: {\n    format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),\n    standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),\n    isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/,\n  },\n  monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n  weekdays: {\n    format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),\n    standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),\n    isFormat: /dddd HH:mm/,\n  },\n  weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\n  weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'YYYY [m.] MMMM D [d.]',\n    LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n    LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\n    l: 'YYYY-MM-DD',\n    ll: 'YYYY [m.] MMMM D [d.]',\n    lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n    llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]',\n  },\n  calendar: {\n    sameDay: '[Šiandien] LT',\n    nextDay: '[Rytoj] LT',\n    nextWeek: 'dddd LT',\n    lastDay: '[Vakar] LT',\n    lastWeek: '[Praėjusį] dddd LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'po %s',\n    past: 'prieš %s',\n    s: translateSeconds,\n    m: translateSingular,\n    mm: translate,\n    h: translateSingular,\n    hh: translate,\n    d: translateSingular,\n    dd: translate,\n    M: translateSingular,\n    MM: translate,\n    y: translateSingular,\n    yy: translate,\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\n  ordinal(number) {\n    return `${number}-oji`;\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Latvian [lv]\n//! author : Kristaps Karlsons : https://github.com/skakri\n//! author : Jānis Elmeris : https://github.com/JanisE\n/* jshint -W100 */\n\nconst units = {\n  m: 'minūtes_minūtēm_minūte_minūtes'.split('_'),\n  mm: 'minūtes_minūtēm_minūte_minūtes'.split('_'),\n  h: 'stundas_stundām_stunda_stundas'.split('_'),\n  hh: 'stundas_stundām_stunda_stundas'.split('_'),\n  d: 'dienas_dienām_diena_dienas'.split('_'),\n  dd: 'dienas_dienām_diena_dienas'.split('_'),\n  M: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),\n  MM: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),\n  y: 'gada_gadiem_gads_gadi'.split('_'),\n  yy: 'gada_gadiem_gads_gadi'.split('_'),\n};\n/**\n * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.\n */\nfunction format(forms, number, withoutSuffix) {\n  if (withoutSuffix) {\n    // E.g. \"21 minūte\", \"3 minūtes\".\n    return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];\n  }\n  // E.g. \"21 minūtes\" as in \"pēc 21 minūtes\".\n  // E.g. \"3 minūtēm\" as in \"pēc 3 minūtēm\".\n  return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];\n}\n\nfunction relativeTimeWithPlural(number, withoutSuffix, key) {\n  return `${number} ${format(units[key], number, withoutSuffix)}`;\n}\n\nfunction relativeTimeWithSingular(number, withoutSuffix, key) {\n  return format(units[key], number, withoutSuffix);\n}\n\nfunction relativeSeconds(number, withoutSuffix) {\n  return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';\n}\n\nexport default {\n  months: 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),\n  monthsShort: 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),\n  weekdays: 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),\n  weekdaysShort: 'Sv_P_O_T_C_Pk_S'.split('_'),\n  weekdaysMin: 'Sv_P_O_T_C_Pk_S'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY.',\n    LL: 'YYYY. [gada] D. MMMM',\n    LLL: 'YYYY. [gada] D. MMMM, HH:mm',\n    LLLL: 'YYYY. [gada] D. MMMM, dddd, HH:mm',\n  },\n  calendar: {\n    sameDay: '[Šodien pulksten] LT',\n    nextDay: '[Rīt pulksten] LT',\n    nextWeek: 'dddd [pulksten] LT',\n    lastDay: '[Vakar pulksten] LT',\n    lastWeek: '[Pagājušā] dddd [pulksten] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'pēc %s',\n    past: 'pirms %s',\n    s: relativeSeconds,\n    m: relativeTimeWithSingular,\n    mm: relativeTimeWithPlural,\n    h: relativeTimeWithSingular,\n    hh: relativeTimeWithPlural,\n    d: relativeTimeWithSingular,\n    dd: relativeTimeWithPlural,\n    M: relativeTimeWithSingular,\n    MM: relativeTimeWithPlural,\n    y: relativeTimeWithSingular,\n    yy: relativeTimeWithPlural,\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Marathi [mr]\n//! author : Harshad Kale : https://github.com/kalehv\n//! author : Vivek Athalye : https://github.com/vnathalye\n/* jshint -W100 */\n\nconst symbolMap = {\n  1: '१',\n  2: '२',\n  3: '३',\n  4: '४',\n  5: '५',\n  6: '६',\n  7: '७',\n  8: '८',\n  9: '९',\n  0: '०',\n};\n\nconst numberMap = {\n  '१': '1',\n  '२': '2',\n  '३': '3',\n  '४': '4',\n  '५': '5',\n  '६': '6',\n  '७': '7',\n  '८': '8',\n  '९': '9',\n  '०': '0',\n};\n\nfunction relativeTimeMr(number, withoutSuffix, string, isFuture) {\n  let output = '';\n  if (withoutSuffix) {\n    switch (string) {\n      case 's':\n        output = 'काही सेकंद';\n        break;\n      case 'm':\n        output = 'एक मिनिट';\n        break;\n      case 'mm':\n        output = '%d मिनिटे';\n        break;\n      case 'h':\n        output = 'एक तास';\n        break;\n      case 'hh':\n        output = '%d तास';\n        break;\n      case 'd':\n        output = 'एक दिवस';\n        break;\n      case 'dd':\n        output = '%d दिवस';\n        break;\n      case 'M':\n        output = 'एक महिना';\n        break;\n      case 'MM':\n        output = '%d महिने';\n        break;\n      case 'y':\n        output = 'एक वर्ष';\n        break;\n      case 'yy':\n        output = '%d वर्षे';\n        break;\n    }\n  } else {\n    switch (string) {\n      case 's':\n        output = 'काही सेकंदां';\n        break;\n      case 'm':\n        output = 'एका मिनिटा';\n        break;\n      case 'mm':\n        output = '%d मिनिटां';\n        break;\n      case 'h':\n        output = 'एका तासा';\n        break;\n      case 'hh':\n        output = '%d तासां';\n        break;\n      case 'd':\n        output = 'एका दिवसा';\n        break;\n      case 'dd':\n        output = '%d दिवसां';\n        break;\n      case 'M':\n        output = 'एका महिन्या';\n        break;\n      case 'MM':\n        output = '%d महिन्यां';\n        break;\n      case 'y':\n        output = 'एका वर्षा';\n        break;\n      case 'yy':\n        output = '%d वर्षां';\n        break;\n    }\n  }\n  return output.replace(/%d/i, number);\n}\n\nexport default {\n  months: 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),\n  monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n  weekdaysShort: 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),\n  weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm वाजता',\n    LTS: 'A h:mm:ss वाजता',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY, A h:mm वाजता',\n    LLLL: 'dddd, D MMMM YYYY, A h:mm वाजता',\n  },\n  calendar: {\n    sameDay: '[आज] LT',\n    nextDay: '[उद्या] LT',\n    nextWeek: 'dddd, LT',\n    lastDay: '[काल] LT',\n    lastWeek: '[मागील] dddd, LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%sमध्ये',\n    past: '%sपूर्वी',\n    s: relativeTimeMr,\n    m: relativeTimeMr,\n    mm: relativeTimeMr,\n    h: relativeTimeMr,\n    hh: relativeTimeMr,\n    d: relativeTimeMr,\n    dd: relativeTimeMr,\n    M: relativeTimeMr,\n    MM: relativeTimeMr,\n    y: relativeTimeMr,\n    yy: relativeTimeMr,\n  },\n  preparse(string) {\n    return string.replace(/[१२३४५६७८९०]/g, match => numberMap[match]);\n  },\n  postformat(string) {\n    return string.replace(/\\d/g, match => symbolMap[match]);\n  },\n  meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'रात्री') {\n      return hour < 4 ? hour : hour + 12;\n    } else if (meridiem === 'सकाळी') {\n      return hour;\n    } else if (meridiem === 'दुपारी') {\n      return hour >= 10 ? hour : hour + 12;\n    } else if (meridiem === 'सायंकाळी') {\n      return hour + 12;\n    }\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'रात्री';\n    } else if (hour < 10) {\n      return 'सकाळी';\n    } else if (hour < 17) {\n      return 'दुपारी';\n    } else if (hour < 20) {\n      return 'सायंकाळी';\n    }\n    return 'रात्री';\n  },\n  week: {\n    dow: 0, // Sunday is the first day of the week.\n    doy: 6, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Polish [pl]\n//! author : Rafal Hirsz : https://github.com/evoL\n/* jshint -W100 */\n\nconst monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_');\nconst monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\n\nfunction plural(n) {\n  return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);\n}\n\nfunction translate(number, withoutSuffix, key) {\n  const result = `${number} `;\n  switch (key) {\n    case 'm':\n      return withoutSuffix ? 'minuta' : 'minutę';\n    case 'mm':\n      return result + (plural(number) ? 'minuty' : 'minut');\n    case 'h':\n      return withoutSuffix ? 'godzina' : 'godzinę';\n    case 'hh':\n      return result + (plural(number) ? 'godziny' : 'godzin');\n    case 'MM':\n      return result + (plural(number) ? 'miesiące' : 'miesięcy');\n    case 'yy':\n      return result + (plural(number) ? 'lata' : 'lat');\n  }\n}\n\nexport default {\n  months(momentToFormat, format) {\n    if (!momentToFormat) {\n      return monthsNominative;\n    } else if (format === '') {\n      // Hack: if format empty we know this is used to generate\n      // RegExp by moment. Give then back both valid forms of months\n      // in RegExp ready format.\n      return `(${monthsSubjective[momentToFormat.month()]}|${monthsNominative[momentToFormat.month()]})`;\n    } else if (/D MMMM/.test(format)) {\n      return monthsSubjective[momentToFormat.month()];\n    }\n    return monthsNominative[momentToFormat.month()];\n  },\n  monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n  weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n  weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n  weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[Dziś o] LT',\n    nextDay: '[Jutro o] LT',\n    nextWeek() {\n      switch (this.day()) {\n        case 0:\n          return '[W niedzielę o] LT';\n\n        case 2:\n          return '[We wtorek o] LT';\n\n        case 3:\n          return '[W środę o] LT';\n\n        case 6:\n          return '[W sobotę o] LT';\n\n        default:\n          return '[W] dddd [o] LT';\n      }\n    },\n    lastDay: '[Wczoraj o] LT',\n    lastWeek() {\n      switch (this.day()) {\n        case 0:\n          return '[W zeszłą niedzielę o] LT';\n        case 3:\n          return '[W zeszłą środę o] LT';\n        case 6:\n          return '[W zeszłą sobotę o] LT';\n        default:\n          return '[W zeszły] dddd [o] LT';\n      }\n    },\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: '%s temu',\n    s: 'kilka sekund',\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: '1 dzień',\n    dd: '%d dni',\n    M: 'miesiąc',\n    MM: translate,\n    y: 'rok',\n    yy: translate,\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Romanian [ro]\n//! author : Vlad Gurdiga : https://github.com/gurdiga\n//! author : Valentin Agachi : https://github.com/avaly\n/* jshint -W100 */\n\nfunction relativeTimeWithPlural(number, withoutSuffix, key) {\n  const format = {\n    mm: 'minute',\n    hh: 'ore',\n    dd: 'zile',\n    MM: 'luni',\n    yy: 'ani',\n  };\n  let separator = ' ';\n\n  if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {\n    separator = ' de ';\n  }\n  return number + separator + format[key];\n}\n\nexport default {\n  months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\n  monthsShort: 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\n  weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\n  weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY H:mm',\n    LLLL: 'dddd, D MMMM YYYY H:mm',\n  },\n  calendar: {\n    sameDay: '[azi la] LT',\n    nextDay: '[mâine la] LT',\n    nextWeek: 'dddd [la] LT',\n    lastDay: '[ieri la] LT',\n    lastWeek: '[fosta] dddd [la] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'peste %s',\n    past: '%s în urmă',\n    s: 'câteva secunde',\n    m: 'un minut',\n    mm: relativeTimeWithPlural,\n    h: 'o oră',\n    hh: relativeTimeWithPlural,\n    d: 'o zi',\n    dd: relativeTimeWithPlural,\n    M: 'o lună',\n    MM: relativeTimeWithPlural,\n    y: 'un an',\n    yy: relativeTimeWithPlural,\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n\n","//! now.js locale configuration\n//! locale : Russian [ru]\n//! author : Viktorminator : https://github.com/Viktorminator\n//! Author : Menelion Elensúle : https://github.com/Oire\n//! author : Коренберг Марк : https://github.com/socketpair\n/* jshint -W100 */\n\nfunction plural(word, num) {\n  const forms = word.split('_');\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n}\n\nfunction relativeTimeWithPlural(number, withoutSuffix, key) {\n  const format = {\n    mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n    hh: 'час_часа_часов',\n    dd: 'день_дня_дней',\n    MM: 'месяц_месяца_месяцев',\n    yy: 'год_года_лет',\n  };\n  if (key === 'm') {\n    return withoutSuffix ? 'минута' : 'минуту';\n  }\n  return `${number} ${plural(format[key], +number)}`;\n}\nconst monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];\n\n// http://new.gramota.ru/spravka/rules/139-prop : § 103\n// Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\nexport default {\n  months: {\n    format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),\n    standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),\n  },\n  monthsShort: {\n    // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?\n    format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),\n    standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_'),\n  },\n  weekdays: {\n    standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n    format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),\n    isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/,\n  },\n  weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n  weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n\n  // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n  monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n  // копия предыдущего\n  monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n  // полные названия с падежами\n  monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n\n  // Выражение, которое соотвествует только сокращённым формам\n  monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY г.',\n    LLL: 'D MMMM YYYY г., HH:mm',\n    LLLL: 'dddd, D MMMM YYYY г., HH:mm',\n  },\n  calendar: {\n    sameDay: '[Сегодня в] LT',\n    nextDay: '[Завтра в] LT',\n    lastDay: '[Вчера в] LT',\n    nextWeek(now) {\n      if (now.week() !== this.week()) {\n        switch (this.day()) {\n          case 0:\n            return '[В следующее] dddd [в] LT';\n          case 1:\n          case 2:\n          case 4:\n            return '[В следующий] dddd [в] LT';\n          case 3:\n          case 5:\n          case 6:\n            return '[В следующую] dddd [в] LT';\n        }\n      } else {\n        if (this.day() === 2) {\n          return '[Во] dddd [в] LT';\n        }\n        return '[В] dddd [в] LT';\n      }\n    },\n    lastWeek(now) {\n      if (now.week() !== this.week()) {\n        switch (this.day()) {\n          case 0:\n            return '[В прошлое] dddd [в] LT';\n          case 1:\n          case 2:\n          case 4:\n            return '[В прошлый] dddd [в] LT';\n          case 3:\n          case 5:\n          case 6:\n            return '[В прошлую] dddd [в] LT';\n        }\n      } else {\n        if (this.day() === 2) {\n          return '[Во] dddd [в] LT';\n        }\n        return '[В] dddd [в] LT';\n      }\n    },\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'через %s',\n    past: '%s назад',\n    s: 'несколько секунд',\n    m: relativeTimeWithPlural,\n    mm: relativeTimeWithPlural,\n    h: 'час',\n    hh: relativeTimeWithPlural,\n    d: 'день',\n    dd: relativeTimeWithPlural,\n    M: 'месяц',\n    MM: relativeTimeWithPlural,\n    y: 'год',\n    yy: relativeTimeWithPlural,\n  },\n  meridiemParse: /ночи|утра|дня|вечера/i,\n  isPM(input) {\n    return /^(дня|вечера)$/.test(input);\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'ночи';\n    } else if (hour < 12) {\n      return 'утра';\n    } else if (hour < 17) {\n      return 'дня';\n    }\n    return 'вечера';\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n  ordinal(number, period) {\n    switch (period) {\n      case 'M':\n      case 'd':\n      case 'DDD':\n        return `${number}-й`;\n      case 'D':\n        return `${number}-го`;\n      case 'w':\n      case 'W':\n        return `${number}-я`;\n      default:\n        return number;\n    }\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Slovak [sk]\n//! author : Martin Minka : https://github.com/k2s\n//! based on work of petrbela : https://github.com/petrbela\n/* jshint -W100 */\n\nconst months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_');\nconst monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\n\nfunction plural(n) {\n  return (n > 1) && (n < 5);\n}\n\nfunction translate(number, withoutSuffix, key, isFuture) {\n  const result = `${number} `;\n  switch (key) {\n    case 's': // a few seconds / in a few seconds / a few seconds ago\n      return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';\n    case 'm': // a minute / in a minute / a minute ago\n      return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');\n    case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(number) ? 'minúty' : 'minút');\n      }\n      return `${result}minútami`;\n\n      break;\n    case 'h': // an hour / in an hour / an hour ago\n      return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n    case 'hh': // 9 hours / in 9 hours / 9 hours ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(number) ? 'hodiny' : 'hodín');\n      }\n      return `${result}hodinami`;\n\n      break;\n    case 'd': // a day / in a day / a day ago\n      return (withoutSuffix || isFuture) ? 'deň' : 'dňom';\n    case 'dd': // 9 days / in 9 days / 9 days ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(number) ? 'dni' : 'dní');\n      }\n      return `${result}dňami`;\n\n      break;\n    case 'M': // a month / in a month / a month ago\n      return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';\n    case 'MM': // 9 months / in 9 months / 9 months ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(number) ? 'mesiace' : 'mesiacov');\n      }\n      return `${result}mesiacmi`;\n\n      break;\n    case 'y': // a year / in a year / a year ago\n      return (withoutSuffix || isFuture) ? 'rok' : 'rokom';\n    case 'yy': // 9 years / in 9 years / 9 years ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(number) ? 'roky' : 'rokov');\n      }\n      return `${result}rokmi`;\n\n      break;\n  }\n}\n\nexport default {\n  months,\n  monthsShort,\n  weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\n  weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),\n  weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd D. MMMM YYYY H:mm',\n  },\n  calendar: {\n    sameDay: '[dnes o] LT',\n    nextDay: '[zajtra o] LT',\n    nextWeek() {\n      switch (this.day()) {\n        case 0:\n          return '[v nedeľu o] LT';\n        case 1:\n        case 2:\n          return '[v] dddd [o] LT';\n        case 3:\n          return '[v stredu o] LT';\n        case 4:\n          return '[vo štvrtok o] LT';\n        case 5:\n          return '[v piatok o] LT';\n        case 6:\n          return '[v sobotu o] LT';\n      }\n    },\n    lastDay: '[včera o] LT',\n    lastWeek() {\n      switch (this.day()) {\n        case 0:\n          return '[minulú nedeľu o] LT';\n        case 1:\n        case 2:\n          return '[minulý] dddd [o] LT';\n        case 3:\n          return '[minulú stredu o] LT';\n        case 4:\n        case 5:\n          return '[minulý] dddd [o] LT';\n        case 6:\n          return '[minulú sobotu o] LT';\n      }\n    },\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: 'pred %s',\n    s: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate,\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Slovenian [sl]\n//! author : Robert Sedovšek : https://github.com/sedovsek\n/* jshint -W100 */\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n  let result = `${number} `;\n  switch (key) {\n    case 's':\n      return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';\n    case 'm':\n      return withoutSuffix ? 'ena minuta' : 'eno minuto';\n    case 'mm':\n      if (number === 1) {\n        result += withoutSuffix ? 'minuta' : 'minuto';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'minute' : 'minutami';\n      } else {\n        result += withoutSuffix || isFuture ? 'minut' : 'minutami';\n      }\n      return result;\n    case 'h':\n      return withoutSuffix ? 'ena ura' : 'eno uro';\n    case 'hh':\n      if (number === 1) {\n        result += withoutSuffix ? 'ura' : 'uro';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'uri' : 'urama';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'ure' : 'urami';\n      } else {\n        result += withoutSuffix || isFuture ? 'ur' : 'urami';\n      }\n      return result;\n    case 'd':\n      return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\n    case 'dd':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'dan' : 'dnem';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\n      } else {\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\n      }\n      return result;\n    case 'M':\n      return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\n    case 'MM':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\n      } else {\n        result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\n      }\n      return result;\n    case 'y':\n      return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\n    case 'yy':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'leto' : 'letom';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'leti' : 'letoma';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'leta' : 'leti';\n      } else {\n        result += withoutSuffix || isFuture ? 'let' : 'leti';\n      }\n      return result;\n  }\n}\n\nexport default {\n  months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\n  monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\n  weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\n  weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd, D. MMMM YYYY H:mm',\n  },\n  calendar: {\n    sameDay: '[danes ob] LT',\n    nextDay: '[jutri ob] LT',\n\n    nextWeek() {\n      switch (this.day()) {\n        case 0:\n          return '[v] [nedeljo] [ob] LT';\n        case 3:\n          return '[v] [sredo] [ob] LT';\n        case 6:\n          return '[v] [soboto] [ob] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[v] dddd [ob] LT';\n      }\n    },\n    lastDay: '[včeraj ob] LT',\n    lastWeek() {\n      switch (this.day()) {\n        case 0:\n          return '[prejšnjo] [nedeljo] [ob] LT';\n        case 3:\n          return '[prejšnjo] [sredo] [ob] LT';\n        case 6:\n          return '[prejšnjo] [soboto] [ob] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[prejšnji] dddd [ob] LT';\n      }\n    },\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'čez %s',\n    past: 'pred %s',\n    s: processRelativeTime,\n    m: processRelativeTime,\n    mm: processRelativeTime,\n    h: processRelativeTime,\n    hh: processRelativeTime,\n    d: processRelativeTime,\n    dd: processRelativeTime,\n    M: processRelativeTime,\n    MM: processRelativeTime,\n    y: processRelativeTime,\n    yy: processRelativeTime,\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Klingon [tlh]\n//! author : Dominika Kruk : https://github.com/amaranthrose\n/* jshint -W100 */\n\nconst numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');\n\nfunction translateFuture(output) {\n  let time = output;\n  time = (output.indexOf('jaj') !== -1) ?\n    `${time.slice(0, -3)}leS` :\n    (output.indexOf('jar') !== -1) ?\n      `${time.slice(0, -3)}waQ` :\n      (output.indexOf('DIS') !== -1) ?\n        `${time.slice(0, -3)}nem` :\n        `${time} pIq`;\n  return time;\n}\n\nfunction translatePast(output) {\n  let time = output;\n  time = (output.indexOf('jaj') !== -1) ?\n    `${time.slice(0, -3)}Hu’` :\n    (output.indexOf('jar') !== -1) ?\n      `${time.slice(0, -3)}wen` :\n      (output.indexOf('DIS') !== -1) ?\n        `${time.slice(0, -3)}ben` :\n        `${time} ret`;\n  return time;\n}\n\nfunction translate(number, withoutSuffix, string, isFuture) {\n  const numberNoun = numberAsNoun(number);\n  switch (string) {\n    case 'mm':\n      return `${numberNoun} tup`;\n    case 'hh':\n      return `${numberNoun} rep`;\n    case 'dd':\n      return `${numberNoun} jaj`;\n    case 'MM':\n      return `${numberNoun} jar`;\n    case 'yy':\n      return `${numberNoun} DIS`;\n  }\n}\n\nfunction numberAsNoun(number) {\n  const hundred = Math.floor((number % 1000) / 100);\n  const ten = Math.floor((number % 100) / 10);\n  const one = number % 10;\n  let word = '';\n  if (hundred > 0) {\n    word += `${numbersNouns[hundred]}vatlh`;\n  }\n  if (ten > 0) {\n    word += `${((word !== '') ? ' ' : '') + numbersNouns[ten]}maH`;\n  }\n  if (one > 0) {\n    word += ((word !== '') ? ' ' : '') + numbersNouns[one];\n  }\n  return (word === '') ? 'pagh' : word;\n}\n\nexport default {\n  months: 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),\n  monthsShort: 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n  weekdaysShort: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n  weekdaysMin: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[DaHjaj] LT',\n    nextDay: '[wa’leS] LT',\n    nextWeek: 'LLL',\n    lastDay: '[wa’Hu’] LT',\n    lastWeek: 'LLL',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: translateFuture,\n    past: translatePast,\n    s: 'puS lup',\n    m: 'wa’ tup',\n    mm: translate,\n    h: 'wa’ rep',\n    hh: translate,\n    d: 'wa’ jaj',\n    dd: translate,\n    M: 'wa’ jar',\n    MM: translate,\n    y: 'wa’ DIS',\n    yy: translate,\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Talossan [tzl]\n//! author : Robin van der Vliet : https://github.com/robin0van0der0v\n//! author : Iustì Canun\n/* jshint -W100 */\n\n// After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.\n// This is currently too difficult (maybe even impossible) to add.\nexport default {\n  months: 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),\n  monthsShort: 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),\n  weekdays: 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),\n  weekdaysShort: 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),\n  weekdaysMin: 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),\n  longDateFormat: {\n    LT: 'HH.mm',\n    LTS: 'HH.mm.ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM [dallas] YYYY',\n    LLL: 'D. MMMM [dallas] YYYY HH.mm',\n    LLLL: 'dddd, [li] D. MMMM [dallas] YYYY HH.mm',\n  },\n  meridiemParse: /d\\'o|d\\'a/i,\n  isPM(input) {\n    return input.toLowerCase() === 'd\\'o';\n  },\n  meridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'd\\'o' : 'D\\'O';\n    }\n    return isLower ? 'd\\'a' : 'D\\'A';\n  },\n  calendar: {\n    sameDay: '[oxhi à] LT',\n    nextDay: '[demà à] LT',\n    nextWeek: 'dddd [à] LT',\n    lastDay: '[ieiri à] LT',\n    lastWeek: '[sür el] dddd [lasteu à] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'osprei %s',\n    past: 'ja%s',\n    s: processRelativeTime,\n    m: processRelativeTime,\n    mm: processRelativeTime,\n    h: processRelativeTime,\n    hh: processRelativeTime,\n    d: processRelativeTime,\n    dd: processRelativeTime,\n    M: processRelativeTime,\n    MM: processRelativeTime,\n    y: processRelativeTime,\n    yy: processRelativeTime,\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n  const format = {\n    s: ['viensas secunds', '\\'iensas secunds'],\n    m: ['\\'n míut', '\\'iens míut'],\n    mm: [`${number} míuts`, `${number} míuts`],\n    h: ['\\'n þora', '\\'iensa þora'],\n    hh: [`${number} þoras`, `${number} þoras`],\n    d: ['\\'n ziua', '\\'iensa ziua'],\n    dd: [`${number} ziuas`, `${number} ziuas`],\n    M: ['\\'n mes', '\\'iens mes'],\n    MM: [`${number} mesen`, `${number} mesen`],\n    y: ['\\'n ar', '\\'iens ar'],\n    yy: [`${number} ars`, `${number} ars`],\n  };\n  return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1]);\n}\n","//! now.js locale configuration\n//! locale : Ukrainian [uk]\n//! author : zemlanin : https://github.com/zemlanin\n//! Author : Menelion Elensúle : https://github.com/Oire\n/* jshint -W100 */\n\nfunction plural(word, num) {\n  const forms = word.split('_');\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n}\n\nfunction relativeTimeWithPlural(number, withoutSuffix, key) {\n  const format = {\n    mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n    hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n    dd: 'день_дні_днів',\n    MM: 'місяць_місяці_місяців',\n    yy: 'рік_роки_років',\n  };\n  if (key === 'm') {\n    return withoutSuffix ? 'хвилина' : 'хвилину';\n  } else if (key === 'h') {\n    return withoutSuffix ? 'година' : 'годину';\n  }\n  return `${number} ${plural(format[key], +number)}`;\n}\n\nfunction weekdaysCaseReplace(m, format) {\n  const weekdays = {\n    nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n    accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n    genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_'),\n  };\n\n  if (!m) {\n    return weekdays.nominative;\n  }\n\n  const nounCase = (/(\\[[ВвУу]\\]) ?dddd/).test(format) ?\n    'accusative' :\n    ((/\\[?(?:минулої|наступної)? ?\\] ?dddd/).test(format) ?\n      'genitive' :\n      'nominative');\n  return weekdays[nounCase][m.day()];\n}\n\nfunction processHoursFunction(str) {\n  return function () {\n    return `${str}о${this.hours() === 11 ? 'б' : ''}] LT`;\n  };\n}\n\nexport default {\n  months: {\n    format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),\n    standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_'),\n  },\n  monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\n  weekdays: weekdaysCaseReplace,\n  weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY р.',\n    LLL: 'D MMMM YYYY р., HH:mm',\n    LLLL: 'dddd, D MMMM YYYY р., HH:mm',\n  },\n  calendar: {\n    sameDay: processHoursFunction('[Сьогодні '),\n    nextDay: processHoursFunction('[Завтра '),\n    lastDay: processHoursFunction('[Вчора '),\n    nextWeek: processHoursFunction('[У] dddd ['),\n    lastWeek() {\n      switch (this.day()) {\n        case 0:\n        case 3:\n        case 5:\n        case 6:\n          return processHoursFunction('[Минулої] dddd [').call(this);\n        case 1:\n        case 2:\n        case 4:\n          return processHoursFunction('[Минулого] dddd [').call(this);\n      }\n    },\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'за %s',\n    past: '%s тому',\n    s: 'декілька секунд',\n    m: relativeTimeWithPlural,\n    mm: relativeTimeWithPlural,\n    h: 'годину',\n    hh: relativeTimeWithPlural,\n    d: 'день',\n    dd: relativeTimeWithPlural,\n    M: 'місяць',\n    MM: relativeTimeWithPlural,\n    y: 'рік',\n    yy: relativeTimeWithPlural,\n  },\n  // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n  meridiemParse: /ночі|ранку|дня|вечора/,\n  isPM(input) {\n    return /^(дня|вечора)$/.test(input);\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'ночі';\n    } else if (hour < 12) {\n      return 'ранку';\n    } else if (hour < 17) {\n      return 'дня';\n    }\n    return 'вечора';\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n  ordinal(number, period) {\n    switch (period) {\n      case 'M':\n      case 'd':\n      case 'DDD':\n      case 'w':\n      case 'W':\n        return `${number}-й`;\n      case 'D':\n        return `${number}-го`;\n      default:\n        return number;\n    }\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","/* eslint no-underscore-dangle: [\"error\", { \"allowAfterThis\": true }] */\n/* eslint prefer-destructuring: [\"error\", { \"object\": false }] */\n\nimport Locale from '../Locale.js';\n\nimport {\n  baseConfig,\n} from '../config/index.js';\n\nimport i18ns from '../i18n/index.js';\n\nconst ArrayProto = Array.prototype;\nconst DateProto = Date.prototype;\nconst toString = Object.prototype.toString;\nconst nativeIsArray = Array.isArray;\nconst nativeIndexOf = ArrayProto.indexOf;\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nconst matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\nconst regexEscape = (s) => s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\nexport const nativeDatetoISOString = Date.prototype.toISOString;\n\nexport const slice = ArrayProto.slice;\nexport const invalidDateError = 'Invalid Date';\nexport const invalidDateRegExp = /Invalid Date/;\nexport const defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\nexport const defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\nexport const defaultMonthsShortRegex = matchWord;\nexport const defaultMonthsRegex = matchWord;\nexport const defaultWeekdaysRegex = matchWord;\nexport const defaultWeekdaysShortRegex = matchWord;\nexport const defaultWeekdaysMinRegex = matchWord;\nexport const matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nexport const matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\nexport function isDate(value) {\n  return value instanceof Date || toString.call(value) === '[object Date]';\n}\n\nexport function isString(value) {\n  return typeof value === 'string' || toString.call(value) === '[object String]';\n}\n\nexport function isNumber(value) {\n  return typeof value === 'number' || toString.call(value) === '[object Number]';\n}\n\nexport function isNaN(value) {\n  return isNumber && value !== +value;\n}\n\nexport function isUndefined(value) {\n  return value === void 0;\n}\n\nexport function isFunction(value) {\n  return value instanceof Function || toString.call(value) === '[object Function]';\n}\n\nexport function isArray(value) {\n  return nativeIsArray(value) || toString.call(value) === '[object Array]';\n}\n\nexport function isObject(value) {\n  // return value === Object(value);\n  return value != null && Object.prototype.toString.call(value) === '[object Object]'\n}\n\nexport function has(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\nexport const keys = Object.keys || function(obj) {\n  let i;\n  let res = [];\n  for (i in obj) {\n    if (has(obj, i)) {\n      res[res.length] = i;\n    }\n  }\n  return res;\n}\n\nexport function absCeil(number) {\n  return number < 0 ? Math.floor(number) : Math.ceil(number);\n}\n\nexport function absFloor(number) {\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}\n\nexport function absRound(number) {\n  return number < 0 ? Math.round(-1 * number) * -1 : Math.round(number);\n}\n\nexport function toInt(number) {\n  return (+number !== 0 && isFinite(+number)) ? absFloor(+number) : 0;\n}\n\nexport const isLeapYear = (year) => (year % 100 !== 0 && year % 4 === 0) || year % 400 === 0;\n\nexport function compare(date1, date2) {\n  if (isUndefined(date1) || isUndefined(date2)) {\n    throw new Error('arguments can not be undefined');\n  } else if (!(isDate(date1) && isDate(date2))) {\n    throw new TypeError('arguments require Date type');\n  } else {\n    return (date1 < date2) ? -1 : (date1 > date2) ? 1 : 0;\n  }\n}\n\nexport function minus(date1, date2) {\n  if (isUndefined(date1) || isUndefined(date2)) {\n    throw new Error('arguments must be defined');\n  }\n  if (!(isDate(date1) && isDate(date2))) {\n    throw new TypeError('arguments must be Date type');\n  }\n  return date1 - date2;\n}\n\nexport function compareArrays(array1, array2, dontConvert) {\n  const l1 = array1.length;\n  const l2 = array1.length;\n  const len = Math.min(l1, l2);\n  const lenthDiff = Math.abs(l1 - l2);\n  let diffs = 0;\n  let i;\n\n  for (i = 0; i < len; i += 1) {\n    if ((dontConvert && array1[i] !== array2[i]) ||\n      (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n      diffs += 1;\n    }\n  }\n  return diffs + lenthDiff;\n}\n\nexport function extend(a, b) {\n  for (let i in b) {\n    if (has(b, i)) {\n      a[i] = b[i];\n    }\n  }\n\n  if (has(b, 'toString')) {\n    a.toString = b.toString;\n  }\n\n  if (has(b, 'valueOf')) {\n    a.valueOf = b.valueOf;\n  }\n\n  return a;\n}\n\nexport const indexOf = nativeIndexOf || function(o) {\n  const len = this.length;\n  let i;\n  for (i = 0; i < len; i++) {\n    if (this[i] === o) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nlet hookCallback;\nexport function hooks() {\n  return hookCallback.apply(null, arguments);\n}\n\nexport function setHookCallback(callback) {\n  hookCallback = callback;\n}\n\nfunction warn(msg) {\n  if (hooks.suppressDeprecationWarnings === false &&\n    (typeof console !== 'undefined') && console.warn) {\n    console.warn('Deprecation warning: ' + msg);\n  }\n}\n\nexport function deprecate(msg, fn) {\n  let firstTime = true;\n\n  return extend(function() {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(null, msg);\n    }\n    if (firstTime) {\n      let args = [];\n      let arg;\n      for (let i = 0; i < arguments.length; i++) {\n        arg = '';\n        if (typeof arguments[i] === 'object') {\n          arg += '\\n[' + i + '] ';\n          for (let key in arguments[0]) {\n            arg += key + ': ' + arguments[0][key] + ', ';\n          }\n          arg = arg.slice(0, -2); // Remove trailing comma and space\n        } else {\n          arg = arguments[i];\n        }\n        args.push(arg);\n      }\n      warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n      firstTime = false;\n    }\n    return fn.apply(this, arguments);\n  }, fn);\n}\n\nconst deprecations = {};\n\nexport function deprecateSimple(name, msg) {\n  if (hooks.deprecationHandler != null) {\n    hooks.deprecationHandler(name, msg);\n  }\n  if (!deprecations[name]) {\n    warn(msg);\n    deprecations[name] = true;\n  }\n}\n\nhooks.suppressDeprecationWarnings = false;\nhooks.deprecationHandler = null;\n\nexport function zeroFill(number, targetLength, forceSign) {\n  const absNumber = '' + Math.abs(number);\n  const zeroToFill = targetLength - absNumber.length;\n  const sign = number >= 0;\n  return (sign ? (forceSign ? '+' : '') : '-') +\n    Math.pow(10, Math.max(0, zeroToFill)).toString().substr(1) + absNumber;\n}\n\nexport function handleMonthStrictParse(monthName, format, strict) {\n  let i;\n  let ii;\n  let mom;\n  const llc = monthName.toLocaleLowerCase();\n\n  if (!this._monthsParse) {\n    // this is not used\n    this._monthsParse = [];\n    this._longMonthsParse = [];\n    this._shortMonthsParse = [];\n    for (i = 0; i < 12; ++i) {\n      mom = createUTC([2000, i]);\n      this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n      this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n    }\n  }\n\n  if (strict) {\n    if (format === 'MMM') {\n      ii = indexOf.call(this._shortMonthsParse, llc);\n      return ii !== -1 ? ii : null;\n    } else {\n      ii = indexOf.call(this._longMonthsParse, llc);\n      return ii !== -1 ? ii : null;\n    }\n  } else {\n    if (format === 'MMM') {\n      ii = indexOf.call(this._shortMonthsParse, llc);\n      if (ii !== -1) {\n        return ii;\n      }\n      ii = indexOf.call(this._longMonthsParse, llc);\n      return ii !== -1 ? ii : null;\n    } else {\n      ii = indexOf.call(this._longMonthsParse, llc);\n      if (ii !== -1) {\n        return ii;\n      }\n      ii = indexOf.call(this._shortMonthsParse, llc);\n      return ii !== -1 ? ii : null;\n    }\n  }\n}\n\nexport function handleWeekStrictParse(weekdayName, format, strict) {\n  let i;\n  let ii;\n  let mom;\n  const llc = weekdayName.toLocaleLowerCase();\n\n  if (!this._weekdaysParse) {\n    this._weekdaysParse = [];\n    this._shortWeekdaysParse = [];\n    this._minWeekdaysParse = [];\n\n    for (i = 0; i < 7; ++i) {\n      mom = createUTC([2000, 1]).day(i);\n      this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n      this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n      this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n    }\n  }\n\n  if (strict) {\n    if (format === 'dddd') {\n      ii = indexOf.call(this._weekdaysParse, llc);\n      return ii !== -1 ? ii : null;\n    } else if (format === 'ddd') {\n      ii = indexOf.call(this._shortWeekdaysParse, llc);\n      return ii !== -1 ? ii : null;\n    } else {\n      ii = indexOf.call(this._minWeekdaysParse, llc);\n      return ii !== -1 ? ii : null;\n    }\n  } else {\n    if (format === 'dddd') {\n      ii = indexOf.call(this._weekdaysParse, llc);\n      if (ii !== -1) {\n        return ii;\n      }\n      ii = indexOf.call(this._shortWeekdaysParse, llc);\n      if (ii !== -1) {\n        return ii;\n      }\n      ii = indexOf.call(this._minWeekdaysParse, llc);\n      return ii !== -1 ? ii : null;\n    } else if (format === 'ddd') {\n      ii = indexOf.call(this._shortWeekdaysParse, llc);\n      if (ii !== -1) {\n        return ii;\n      }\n      ii = indexOf.call(this._weekdaysParse, llc);\n      if (ii !== -1) {\n        return ii;\n      }\n      ii = indexOf.call(this._minWeekdaysParse, llc);\n      return ii !== -1 ? ii : null;\n    } else {\n      ii = indexOf.call(this._minWeekdaysParse, llc);\n      if (ii !== -1) {\n        return ii;\n      }\n      ii = indexOf.call(this._weekdaysParse, llc);\n      if (ii !== -1) {\n        return ii;\n      }\n      ii = indexOf.call(this._shortWeekdaysParse, llc);\n      return ii !== -1 ? ii : null;\n    }\n  }\n}\n\nexport function computeMonthsParse() {\n  function cmpLenRev(a, b) {\n    return b.length - a.length;\n  }\n\n  const shortPieces = [];\n  const longPieces = [];\n  const mixedPieces = [];\n  let i;\n  let mom;\n\n  for (i = 0; i < 12; i++) {\n    // make the regex if we don't have it already\n    mom = createUTC([2000, i]);\n    shortPieces.push(this.monthsShort(mom, ''));\n    longPieces.push(this.months(mom, ''));\n    mixedPieces.push(this.months(mom, ''));\n    mixedPieces.push(this.monthsShort(mom, ''));\n  }\n  // Sorting makes sure if one month (or abbr) is a prefix of another it\n  // will match the longer piece.\n  shortPieces.sort(cmpLenRev);\n  longPieces.sort(cmpLenRev);\n  mixedPieces.sort(cmpLenRev);\n  for (i = 0; i < 12; i++) {\n    shortPieces[i] = regexEscape(shortPieces[i]);\n    longPieces[i] = regexEscape(longPieces[i]);\n  }\n  for (i = 0; i < 24; i++) {\n    mixedPieces[i] = regexEscape(mixedPieces[i]);\n  }\n\n  this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n  this._monthsShortRegex = this._monthsRegex;\n  this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n  this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n}\n\nexport function computeWeekdaysParse() {\n  function cmpLenRev(a, b) {\n    return b.length - a.length;\n  }\n\n  const minPieces = [];\n  const shortPieces = [];\n  const longPieces = [];\n  const mixedPieces = [];\n  let i;\n  let mom;\n  let minp;\n  let shortp;\n  let longp;\n\n  for (i = 0; i < 7; i++) {\n    // make the regex if we don't have it already\n    mom = createUTC([2000, 1]).day(i);\n    minp = this.weekdaysMin(mom, '');\n    shortp = this.weekdaysShort(mom, '');\n    longp = this.weekdays(mom, '');\n    minPieces.push(minp);\n    shortPieces.push(shortp);\n    longPieces.push(longp);\n    mixedPieces.push(minp);\n    mixedPieces.push(shortp);\n    mixedPieces.push(longp);\n  }\n  // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n  // will match the longer piece.\n  minPieces.sort(cmpLenRev);\n  shortPieces.sort(cmpLenRev);\n  longPieces.sort(cmpLenRev);\n  mixedPieces.sort(cmpLenRev);\n  for (i = 0; i < 7; i++) {\n    shortPieces[i] = regexEscape(shortPieces[i]);\n    longPieces[i] = regexEscape(longPieces[i]);\n    mixedPieces[i] = regexEscape(mixedPieces[i]);\n  }\n\n  this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n  this._weekdaysShortRegex = this._weekdaysRegex;\n  this._weekdaysMinRegex = this._weekdaysRegex;\n\n  this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n  this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n}\n\nfunction mergeConfigs(parentConfig, childConfig) {\n  const res = extend({}, parentConfig);\n  let prop;\n\n  for (prop in childConfig) {\n    if (has(childConfig, prop)) {\n      if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n        res[prop] = {};\n        extend(res[prop], parentConfig[prop]);\n        extend(res[prop], childConfig[prop]);\n      } else if (childConfig[prop] != null) {\n        res[prop] = childConfig[prop];\n      } else {\n        delete res[prop];\n      }\n    }\n  }\n\n  for (prop in parentConfig) {\n    if (has(parentConfig, prop) &&\n      !has(childConfig, prop) &&\n      isObject(parentConfig[prop])) {\n      // make sure changes to properties don't modify parent config\n      res[prop] = extend({}, res[prop]);\n    }\n  }\n  return res;\n}\n\n// internal storage for locale config files\nconst locales = {};\nconst localeFamilies = {};\nlet globalLocale;\n\nfunction normalizeLocale(key) {\n  return key ? key.toLowerCase().replace('_', '-') : key;\n}\n\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names) {\n  let i = 0;\n  let j;\n  let next;\n  let locale;\n  let split;\n\n  while (i < names.length) {\n    split = normalizeLocale(names[i]).split('-');\n    j = split.length;\n    next = normalizeLocale(names[i + 1]);\n    next = next ? next.split('-') : null;\n    while (j > 0) {\n      locale = loadLocale(split.slice(0, j).join('-'));\n      if (locale) {\n        return locale;\n      }\n      if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n        //the next array item is better than a shallower substring of this one\n        break;\n      }\n      j--;\n    }\n    i++;\n  }\n\n  return null;\n}\n\nfunction loadLocale(name) {\n  let oldLocale = null;\n  if (!locales[name]) {\n    oldLocale = globalLocale && globalLocale._abbr;\n    defineLocale(name, i18ns[name]);\n    getSetGlobalLocale(oldLocale);\n  }\n  return locales[name];\n}\n\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nexport function getSetGlobalLocale(key, values) {\n  let data;\n  if (key) {\n    if (isUndefined(values)) {\n      data = getLocale(key);\n    } else {\n      data = defineLocale(key, values);\n    }\n\n    if (data) {\n      // moment.duration._locale = moment._locale = data;\n      globalLocale = data;\n    }\n  }\n\n  // return globalLocale._abbr;\n}\n\nexport function defineLocale(name, config) {\n  if (config !== null) {\n    let parentConfig = baseConfig;\n    config.abbr = name;\n    if (locales[name] != null) {\n      deprecateSimple('defineLocaleOverride',\n        'use Now.updateLocale(localeName, config) to change ' +\n        'an existing locale. Now.defineLocale(localeName, ' +\n        'config) should only be used for creating a new locale');\n\n      parentConfig = locales[name]._config;\n    } else if (config.parentLocale != null) {\n      if (locales[config.parentLocale] != null) {\n        parentConfig = locales[config.parentLocale]._config;\n      } else {\n        if (!localeFamilies[config.parentLocale]) {\n          localeFamilies[config.parentLocale] = [];\n        }\n        localeFamilies[config.parentLocale].push({\n          name: name,\n          config: config\n        });\n        return null;\n      }\n    }\n    locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n    if (localeFamilies[name]) {\n      localeFamilies[name].forEach(function(x) {\n        defineLocale(x.name, x.config);\n      });\n    }\n\n    // backwards compat for now: also set the locale\n    // make sure we set the locale AFTER all child locales have been\n    // created, so we won't end up with the child locale set.\n    getSetGlobalLocale(name);\n\n\n    return locales[name];\n  } else {\n    // useful for testing\n    delete locales[name];\n    return null;\n  }\n}\n\nexport function updateLocale(name, config) {\n  if (config != null) {\n    let locale;\n    let parentConfig = baseConfig;\n    // MERGE\n    if (locales[name] != null) {\n      parentConfig = locales[name]._config;\n    }\n    config = mergeConfigs(parentConfig, config);\n    locale = new Locale(config);\n    locale.parentLocale = locales[name];\n    locales[name] = locale;\n\n    // backwards compat for now: also set the locale\n    getSetGlobalLocale(name);\n  } else {\n    // pass null for config to unupdate, useful for tests\n    if (locales[name] != null) {\n      if (locales[name].parentLocale != null) {\n        locales[name] = locales[name].parentLocale;\n      } else if (locales[name] != null) {\n        delete locales[name];\n      }\n    }\n  }\n  return locales[name];\n}\n\n// returns locale data\nexport function getLocale(key) {\n  let locale;\n\n  if (key && key._locale && key._locale._abbr) {\n    key = key._locale._abbr;\n  }\n\n  if (!key) {\n    return globalLocale;\n  }\n\n  if (!isArray(key)) {\n    //short-circuit everything else\n    locale = loadLocale(key);\n    if (locale) {\n      return locale;\n    }\n    key = [key];\n  }\n\n  return chooseLocale(key);\n}\n\nexport const listLocales = () => keys(locales);\n\nconst daysInYear = (year) => isLeapYear(year) ? 366 : 365;\n\nconst createUTCDate = (...args) => new Date(Date.UTC.apply(null, args));\n\nconst firstWeekOffset = (year, dow, doy) => {\n  // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n  const fwd = 7 + dow - doy;\n  // first-week day local weekday -- which local weekday is fwd\n  const fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n  return -fwdlw + fwd - 1;\n}\n\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nconst dayOfYearFromWeeks = (year, week, weekday, dow, doy) => {\n  const localWeekday = (7 + weekday - dow) % 7;\n  const weekOffset = firstWeekOffset(year, dow, doy);\n  const dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset;\n  let resYear;\n  let resDayOfYear;\n\n  if (dayOfYear <= 0) {\n    resYear = year - 1;\n    resDayOfYear = daysInYear(resYear) + dayOfYear;\n  } else if (dayOfYear > daysInYear(year)) {\n    resYear = year + 1;\n    resDayOfYear = dayOfYear - daysInYear(year);\n  } else {\n    resYear = year;\n    resDayOfYear = dayOfYear;\n  }\n\n  return {\n    year: resYear,\n    dayOfYear: resDayOfYear\n  };\n}\n\nexport const weekOfYear = (mom, dow, doy) => {\n  const weekOffset = firstWeekOffset(mom.year(), dow, doy);\n  const week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1;\n  let resWeek;\n  let resYear;\n\n  if (week < 1) {\n    resYear = mom.year() - 1;\n    resWeek = week + weeksInYear(resYear, dow, doy);\n  } else if (week > weeksInYear(mom.year(), dow, doy)) {\n    resWeek = week - weeksInYear(mom.year(), dow, doy);\n    resYear = mom.year() + 1;\n  } else {\n    resYear = mom.year();\n    resWeek = week;\n  }\n\n  return {\n    week: resWeek,\n    year: resYear\n  };\n}\n\nexport const weeksInYear = (year, dow, doy) => {\n  const weekOffset = firstWeekOffset(year, dow, doy);\n  const weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n  return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n\nexport function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n  let weeksTarget;\n  if (input == null) {\n    return weekOfYear(this, dow, doy).year;\n  } else {\n    weeksTarget = weeksInYear(input, dow, doy);\n    if (week > weeksTarget) {\n      week = weeksTarget;\n    }\n    return setWeekAll.call(this, input, week, weekday, dow, doy);\n  }\n}\n\nfunction setWeekAll(weekYear, week, weekday, dow, doy) {\n  const dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n  const date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n  this.year(date.getUTCFullYear());\n  this.month(date.getUTCMonth());\n  this.day(date.getUTCDate());\n  return this;\n}\n\nexport const parseIsoWeekday = (input, locale) => {\n  if (isString(input)) {\n    return locale.weekdaysParse(input) % 7 || 7;\n  }\n  return isNaN(input) ? null : input;\n}\n\nexport const parseWeekday = (input, locale) => {\n  if (isString(input)) {\n    return input;\n  }\n\n  if (!isNaN(input)) {\n    return parseInt(input, 10);\n  }\n\n  input = locale.weekdaysParse(input);\n  if (isNumber(input)) {\n    return input;\n  }\n\n  return null;\n}\n\n","import {\n  zeroFill,\n  isFunction,\n} from './utils/index.js';\n\nconst formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\nconst localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\nconst removeFormattingTokens = (input) => {\n  if (input.match(/\\[[\\s\\S]/)) {\n    return input.replace(/^\\[|\\]$/g, '');\n  }\n  return input.replace(/\\\\/g, '');\n}\n\nfunction hFormat() {\n  return this.hour() % 12 || 12;\n}\n\nfunction kFormat() {\n  return this.hour() || 24;\n}\n\nfunction addWeekYearFormatToken(token, getter) {\n  this.addFormatToken(0, [token, token.length], 0, getter);\n}\n\nfunction meridiem(token, lowercase) {\n  this.addFormatToken(token, 0, 0, function() {\n    return this.localeData().meridiem(this.hour(), this.minute(), lowercase);\n  });\n}\n\nfunction offset(token, separator) {\n  this.addFormatToken(token, 0, 0, function() {\n    let offset = this.utcOffset();\n    let sign = '+';\n    if (offset < 0) {\n      offset = -offset;\n      sign = '-';\n    }\n    return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n  });\n}\n\nclass Format {\n  constructor(config) {\n    this.formattingTokens = formattingTokens;\n    this.localFormattingTokens = localFormattingTokens;\n    this.formatFunctions = {};\n    this.formatTokenFunctions = {};\n    this.initFormat();\n  }\n\n  initFormat() {\n    // year\n    this.addFormatToken('Y', 0, 0, function() {\n      const y = this.year();\n      return y <= 9999 ? '' + y : '+' + y;\n    });\n    this.addFormatToken(0, ['YY', 2], 0, function() {\n      return this.year() % 100;\n    });\n    this.addFormatToken(0, ['YYYY', 4], 0, 'year');\n    this.addFormatToken(0, ['YYYYY', 5], 0, 'year');\n    this.addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // quarter\n    this.addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // month\n    this.addFormatToken('M', ['MM', 2], 'Mo', function() {\n      return this.month() + 1;\n    });\n    this.addFormatToken('MMM', 0, 0, function(format) {\n      return this.localeData().monthsShort(this, format);\n    });\n    this.addFormatToken('MMMM', 0, 0, function(format) {\n      return this.localeData().months(this, format);\n    });\n\n    // weekYear\n    this.addFormatToken(0, ['gg', 2], 0, function() {\n      return this.weekYear() % 100;\n    });\n    this.addFormatToken(0, ['GG', 2], 0, function() {\n      return this.isoWeekYear() % 100;\n    });\n    addWeekYearFormatToken.call(this, 'gggg', 'weekYear');\n    addWeekYearFormatToken.call(this, 'ggggg', 'weekYear');\n    addWeekYearFormatToken.call(this, 'GGGG', 'isoWeekYear');\n    addWeekYearFormatToken.call(this, 'GGGGG', 'isoWeekYear');\n\n    // week\n    // this.addFormatToken('w', ['ww', 2], 'wo', 'week');\n    this.addFormatToken('w', ['ww', 2], 'wo', 'week');\n    this.addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // dayOfYear\n    this.addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // dayOfMonth\n    this.addFormatToken('D', ['DD', 2], 'Do', 'day');\n\n    // dayOfWeek\n    this.addFormatToken('d', 0, 'do', 'weekDay');\n    this.addFormatToken('dd', 0, 0, function(format) {\n      return this.localeData().weekdaysMin(this, format);\n    });\n    this.addFormatToken('ddd', 0, 0, function(format) {\n      return this.localeData().weekdaysShort(this, format);\n    });\n    this.addFormatToken('dddd', 0, 0, function(format) {\n      return this.localeData().weekdays(this, format);\n    });\n    this.addFormatToken('e', 0, 0, 'localeWeekDay');\n    this.addFormatToken('E', 0, 0, 'isoWeekDay');\n\n    // hour\n    this.addFormatToken('H', ['HH', 2], 0, 'hour');\n    this.addFormatToken('h', ['hh', 2], 0, hFormat);\n    this.addFormatToken('k', ['kk', 2], 0, kFormat);\n    this.addFormatToken('hmm', 0, 0, function() {\n      return '' + hFormat.apply(this) + zeroFill(this.minute(), 2);\n    });\n    this.addFormatToken('hmmss', 0, 0, function() {\n      return '' + hFormat.apply(this) + zeroFill(this.minute(), 2) + zeroFill(this.second(), 2);\n    });\n    this.addFormatToken('Hmm', 0, 0, function() {\n      return '' + this.hour() + zeroFill(this.minute(), 2);\n    });\n    this.addFormatToken('Hmmss', 0, 0, function() {\n      return '' + this.hour() + zeroFill(this.minute(), 2) + zeroFill(this.second(), 2);\n    });\n\n    meridiem.call(this, 'a', true);\n    meridiem.call(this, 'A', false);\n\n    // minute\n    this.addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // second\n    this.addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // milliSecond\n    this.addFormatToken('h', ['hh', 2], 0, hFormat);\n    this.addFormatToken('k', ['kk', 2], 0, kFormat);\n    this.addFormatToken('S', 0, 0, function() {\n      return ~~(this.milliSecond() / 100);\n    });\n    this.addFormatToken(0, ['SS', 2], 0, function() {\n      return ~~(this.milliSecond() / 10);\n    });\n    this.addFormatToken(0, ['SSS', 3], 0, 'milliSecond');\n    this.addFormatToken(0, ['SSSS', 4], 0, function() {\n      return this.milliSecond() * 10;\n    });\n    this.addFormatToken(0, ['SSSSS', 5], 0, function() {\n      return this.milliSecond() * 100;\n    });\n    this.addFormatToken(0, ['SSSSSS', 6], 0, function() {\n      return this.milliSecond() * 1000;\n    });\n    this.addFormatToken(0, ['SSSSSSS', 7], 0, function() {\n      return this.milliSecond() * 10000;\n    });\n    this.addFormatToken(0, ['SSSSSSSS', 8], 0, function() {\n      return this.milliSecond() * 100000;\n    });\n    this.addFormatToken(0, ['SSSSSSSSS', 9], 0, function() {\n      return this.milliSecond() * 1000000;\n    });\n\n    // offset\n    offset.call(this, 'Z', ':');\n    offset.call(this, 'ZZ', '');\n\n    // timestamp\n    this.addFormatToken('X', 0, 0, 'unix');\n    this.addFormatToken('x', 0, 0, 'valueOf');\n  }\n\n  addFormatToken(token, padded, ordinal, callback) {\n    let func = callback;\n    if (typeof callback === 'string') {\n      func = function() {\n        return this[callback]();\n      };\n    }\n    if (token) {\n      this.formatTokenFunctions[token] = func;\n    }\n    if (padded) {\n      this.formatTokenFunctions[padded[0]] = function() {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n    if (ordinal) {\n      this.formatTokenFunctions[ordinal] = function() {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  makeFormatFunction(format) {\n    let array = format.match(this.formattingTokens);\n    let i;\n    let length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (this.formatTokenFunctions[array[i]]) {\n        array[i] = this.formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function(context) {\n      let output = '';\n      let i;\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(context, format) : array[i];\n      }\n      return output;\n    };\n  }\n\n  formatMoment(context, format) {\n    // if (!m.isValid()) {\n    // return m.localeData().invalidDate();\n    // }\n\n    format = this.expandFormat(format, context.localeData());\n    this.formatFunctions[format] = this.formatFunctions[format] || this.makeFormatFunction(format);\n\n    return this.formatFunctions[format](context);\n  }\n\n  expandFormat(format, locale) {\n    let i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    this.localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && this.localFormattingTokens.test(format)) {\n      format = format.replace(this.localFormattingTokens, replaceLongDateFormatTokens);\n      this.localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n}\n\nexport default new Format;\n","import {\n  isFunction,\n  isNumber,\n  isArray,\n  toInt,\n  extend,\n  isObject,\n  has,\n  indexOf,\n  handleWeekStrictParse,\n  handleMonthStrictParse,\n  computeMonthsParse,\n  defaultMonthsRegex,\n  defaultMonthsShortRegex,\n  defaultWeekdaysRegex,\n  defaultWeekdaysShortRegex,\n  defaultWeekdaysMinRegex,\n  computeWeekdaysParse,\n  weekOfYear,\n} from './utils/index.js';\n\nconst MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n\nclass Locale {\n  constructor(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  calendar(key, mom, now) {\n    const output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  longDateFormat(key) {\n    const format = this._longDateFormat[key],\n      formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function(val) {\n      return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n  }\n\n  invalidDate() {\n    this._invaliDate;\n  }\n\n  ordinal(number) {\n    this._ordinal.replace('%d', number);\n  }\n\n  preparse(string) {\n    return string;\n  }\n\n  postformat(string) {\n    return string;\n  }\n\n  relativeTime(number, withoutSuffix, string, isFuture) {\n    let output = this._relativeTime[string];\n    return (isFunction(output)) ?\n      output(number, withoutSuffix, string, isFuture) :\n      output.replace(/%d/i, number);\n  }\n\n  pastFuture(diff, output) {\n    let format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  set(config) {\n    let prop;\n    let i;\n\n    for (i in config) {\n      prop = config[i];\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n    this._config = config;\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    // this._dayOfMonthOrdinalParseLenient = new RegExp(\n    // (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n    // '|' + (/\\d{1,2}/).source);\n  }\n\n  months(context, format) {\n    if (!context) {\n      return isArray(this._months) ? this._months :\n        this._months['standalone'];\n    }\n    return isArray(this._months) ? this._months[context.month()] :\n      this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][context.month()];\n  }\n\n  monthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort :\n        this._monthsShort['standalone'];\n    }\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n      this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  monthsParse(monthName, format, strict) {\n    let i;\n    let mom;\n    let regex;\n\n    if (this._monthsParseExact) {\n      return handleMonthStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n      // test the regex\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  }\n\n  monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!has(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!has(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n      return this._monthsStrictRegex && isStrict ?\n        this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!has(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!has(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n      return this._monthsShortStrictRegex && isStrict ?\n        this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  week(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  firstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  firstDayOfYear() {\n    return this._week.doy;\n  }\n\n  weekdays(m, format) {\n    if (!m) {\n      return isArray(this._weekdays) ? this._weekdays :\n        this._weekdays['standalone'];\n    }\n    return isArray(this._weekdays) ? this._weekdays[m.weekDay()] :\n      this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.weekDay()];\n  }\n\n  weekdaysShort(m) {\n    return (m) ? this._weekdaysShort[m.weekDay()] : this._weekdaysShort;\n  }\n\n  weekdaysMin(m) {\n    return (m) ? this._weekdaysMin[m.weekDay()] : this._weekdaysMin;\n  }\n\n  weekdaysParse(weekdayName, format, strict) {\n    let i;\n    let mom;\n    let regex;\n\n    if (this._weekdaysParseExact) {\n      return handleWeekStrictParse.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n\n      mom = createUTC([2000, 1]).day(i);\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n      }\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n      // test the regex\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  }\n\n  weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!has(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!has(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n      return this._weekdaysStrictRegex && isStrict ?\n        this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!has(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!has(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n      return this._weekdaysShortStrictRegex && isStrict ?\n        this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!has(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!has(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n      return this._weekdaysMinStrictRegex && isStrict ?\n        this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  isPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return ((input + '').toLowerCase().charAt(0) === 'p');\n  }\n\n  meridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  }\n}\n\nexport default Locale;\n","const defaultCalendar = {\n  sameDay: '[Today at] LT',\n  nextDay: '[Tomorrow at] LT',\n  nextWeek: 'dddd [at] LT',\n  lastDay: '[Yesterday at] LT',\n  lastWeek: '[Last] dddd [at] LT',\n  sameElse: 'L'\n};\n\nconst defaultLongDateFormat = {\n  LTS: 'h:mm:ss A',\n  LT: 'h:mm A',\n  L: 'MM/DD/YYYY',\n  LL: 'MMMM D, YYYY',\n  LLL: 'MMMM D, YYYY h:mm A',\n  LLLL: 'dddd, MMMM D, YYYY h:mm A'\n};\n\nconst defaultInvalidDate = 'Invalid date';\n\nconst defaultOrdinal = '%d';\nconst defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\nconst defaultRelativeTime = {\n  future: 'in %s',\n  past: '%s ago',\n  s: 'a few seconds',\n  ss: '%d seconds',\n  m: 'a minute',\n  mm: '%d minutes',\n  h: 'an hour',\n  hh: '%d hours',\n  d: 'a day',\n  dd: '%d days',\n  M: 'a month',\n  MM: '%d months',\n  y: 'a year',\n  yy: '%d years'\n};\n\nconst defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\nconst defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\nconst defaultLocaleWeek = {\n  dow: 0, // Sunday is the first day of the week.\n  doy: 6 // The week that contains Jan 1st is the first week of the year.\n};\n\nconst defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\nconst defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\nconst defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\nconst defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\nexport const baseConfig = {\n  calendar: defaultCalendar,\n  longDateFormat: defaultLongDateFormat,\n  invalidDate: defaultInvalidDate,\n  ordinal: defaultOrdinal,\n  dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n  relativeTime: defaultRelativeTime,\n\n  months: defaultLocaleMonths,\n  monthsShort: defaultLocaleMonthsShort,\n\n  week: defaultLocaleWeek,\n\n  weekdays: defaultLocaleWeekdays,\n  weekdaysMin: defaultLocaleWeekdaysMin,\n  weekdaysShort: defaultLocaleWeekdaysShort,\n\n  meridiemParse: defaultLocaleMeridiemParse\n};\n\n","//! now.js locale configuration\n//! locale : Afrikaans [af]\n//! author : Werner Mollentze : https://github.com/wernerm\n/* jshint -W100 */\n\nexport default {\n  months: 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),\n  monthsShort: 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),\n  weekdays: 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),\n  weekdaysShort: 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),\n  weekdaysMin: 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),\n  meridiemParse: /vm|nm/i,\n  isPM(input) {\n    return /^nm$/i.test(input);\n  },\n  meridiem(hours, minutes, isLower) {\n    if (hours < 12) {\n      return isLower ? 'vm' : 'VM';\n    }\n    return isLower ? 'nm' : 'NM';\n  },\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[Vandag om] LT',\n    nextDay: '[Môre om] LT',\n    nextWeek: 'dddd [om] LT',\n    lastDay: '[Gister om] LT',\n    lastWeek: '[Laas] dddd [om] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'oor %s',\n    past: '%s gelede',\n    s: '\\'n paar sekondes',\n    m: '\\'n minuut',\n    mm: '%d minute',\n    h: '\\'n uur',\n    hh: '%d ure',\n    d: '\\'n dag',\n    dd: '%d dae',\n    M: '\\'n maand',\n    MM: '%d maande',\n    y: '\\'n jaar',\n    yy: '%d jaar',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n  ordinal(number) {\n    return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter\n  },\n  week: {\n    dow: 1, // Maandag is die eerste dag van die week.\n    doy: 4, // Die week wat die 4de Januarie bevat is die eerste week van die jaar.\n  },\n};\n\n","//! now.js locale configuration\n//! locale : Arabic (Algeria) [ar-dz]\n//! author : Noureddine LOUAHEDJ : https://github.com/noureddineme\n/* jshint -W100 */\n\nexport default {\n  months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n  monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n  weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n  weekdaysShort: 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n  weekdaysMin: 'أح_إث_ثلا_أر_خم_جم_سب'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[اليوم على الساعة] LT',\n    nextDay: '[غدا على الساعة] LT',\n    nextWeek: 'dddd [على الساعة] LT',\n    lastDay: '[أمس على الساعة] LT',\n    lastWeek: 'dddd [على الساعة] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'في %s',\n    past: 'منذ %s',\n    s: 'ثوان',\n    m: 'دقيقة',\n    mm: '%d دقائق',\n    h: 'ساعة',\n    hh: '%d ساعات',\n    d: 'يوم',\n    dd: '%d أيام',\n    M: 'شهر',\n    MM: '%d أشهر',\n    y: 'سنة',\n    yy: '%d سنوات',\n  },\n  week: {\n    dow: 0, // Sunday is the first day of the week.\n    doy: 4, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Arabic (Kuwait) [ar-kw]\n//! author : Nusret Parlak: https://github.com/nusretparlak\n/* jshint -W100 */\n\nexport default {\n  months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n  monthsShort: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n  weekdays: 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n  weekdaysShort: 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n  weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[اليوم على الساعة] LT',\n    nextDay: '[غدا على الساعة] LT',\n    nextWeek: 'dddd [على الساعة] LT',\n    lastDay: '[أمس على الساعة] LT',\n    lastWeek: 'dddd [على الساعة] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'في %s',\n    past: 'منذ %s',\n    s: 'ثوان',\n    m: 'دقيقة',\n    mm: '%d دقائق',\n    h: 'ساعة',\n    hh: '%d ساعات',\n    d: 'يوم',\n    dd: '%d أيام',\n    M: 'شهر',\n    MM: '%d أشهر',\n    y: 'سنة',\n    yy: '%d سنوات',\n  },\n  week: {\n    dow: 0, // Sunday is the first day of the week.\n    doy: 12, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Arabic (Lybia) [ar-ly]\n//! author : Ali Hmer: https://github.com/kikoanis\n/* jshint -W100 */\n\nconst symbolMap = {\n  1: '1',\n  2: '2',\n  3: '3',\n  4: '4',\n  5: '5',\n  6: '6',\n  7: '7',\n  8: '8',\n  9: '9',\n  0: '0',\n};\n\nconst pluralForm = function (n) {\n  return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;\n};\n\nconst plurals = {\n  s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n  m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n  h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n  d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n  M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n  y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام'],\n};\n\nconst pluralize = function (u) {\n  return function (number, withoutSuffix, string, isFuture) {\n    const f = pluralForm(number);\n    let str = plurals[u][pluralForm(number)];\n    if (f === 2) {\n      str = str[withoutSuffix ? 0 : 1];\n    }\n    return str.replace(/%d/i, number);\n  };\n};\n\nconst months = [\n  'يناير',\n  'فبراير',\n  'مارس',\n  'أبريل',\n  'مايو',\n  'يونيو',\n  'يوليو',\n  'أغسطس',\n  'سبتمبر',\n  'أكتوبر',\n  'نوفمبر',\n  'ديسمبر',\n];\n\nexport default {\n  months,\n  monthsShort: months,\n  weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n  weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n  weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'D/\\u200FM/\\u200FYYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm',\n  },\n  meridiemParse: /ص|م/,\n  isPM(input) {\n    return input === 'م';\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ص';\n    }\n    return 'م';\n  },\n  calendar: {\n    sameDay: '[اليوم عند الساعة] LT',\n    nextDay: '[غدًا عند الساعة] LT',\n    nextWeek: 'dddd [عند الساعة] LT',\n    lastDay: '[أمس عند الساعة] LT',\n    lastWeek: 'dddd [عند الساعة] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'بعد %s',\n    past: 'منذ %s',\n    s: pluralize('s'),\n    m: pluralize('m'),\n    mm: pluralize('m'),\n    h: pluralize('h'),\n    hh: pluralize('h'),\n    d: pluralize('d'),\n    dd: pluralize('d'),\n    M: pluralize('M'),\n    MM: pluralize('M'),\n    y: pluralize('y'),\n    yy: pluralize('y'),\n  },\n  preparse(string) {\n    return string.replace(/،/g, ',');\n  },\n  postformat(string) {\n    return string.replace(/\\d/g, match => symbolMap[match]).replace(/,/g, '،');\n  },\n  week: {\n    dow: 6, // Saturday is the first day of the week.\n    doy: 12, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Arabic (Morocco) [ar-ma]\n//! author : ElFadili Yassine : https://github.com/ElFadiliY\n//! author : Abdel Said : https://github.com/abdelsaid\n/* jshint -W100 */\n\nexport default {\n  months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n  monthsShort: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n  weekdays: 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n  weekdaysShort: 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n  weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[اليوم على الساعة] LT',\n    nextDay: '[غدا على الساعة] LT',\n    nextWeek: 'dddd [على الساعة] LT',\n    lastDay: '[أمس على الساعة] LT',\n    lastWeek: 'dddd [على الساعة] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'في %s',\n    past: 'منذ %s',\n    s: 'ثوان',\n    m: 'دقيقة',\n    mm: '%d دقائق',\n    h: 'ساعة',\n    hh: '%d ساعات',\n    d: 'يوم',\n    dd: '%d أيام',\n    M: 'شهر',\n    MM: '%d أشهر',\n    y: 'سنة',\n    yy: '%d سنوات',\n  },\n  week: {\n    dow: 6, // Saturday is the first day of the week.\n    doy: 12, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Arabic (Saudi Arabia) [ar-sa]\n//! author : Suhail Alkowaileet : https://github.com/xsoh\n/* jshint -W100 */\n\nconst symbolMap = {\n  1: '١',\n  2: '٢',\n  3: '٣',\n  4: '٤',\n  5: '٥',\n  6: '٦',\n  7: '٧',\n  8: '٨',\n  9: '٩',\n  0: '٠',\n};\n\nconst numberMap = {\n  '١': '1',\n  '٢': '2',\n  '٣': '3',\n  '٤': '4',\n  '٥': '5',\n  '٦': '6',\n  '٧': '7',\n  '٨': '8',\n  '٩': '9',\n  '٠': '0',\n};\n\nexport default {\n  months: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n  monthsShort: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n  weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n  weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n  weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm',\n  },\n  meridiemParse: /ص|م/,\n  isPM(input) {\n    return input === 'م';\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ص';\n    }\n    return 'م';\n  },\n  calendar: {\n    sameDay: '[اليوم على الساعة] LT',\n    nextDay: '[غدا على الساعة] LT',\n    nextWeek: 'dddd [على الساعة] LT',\n    lastDay: '[أمس على الساعة] LT',\n    lastWeek: 'dddd [على الساعة] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'في %s',\n    past: 'منذ %s',\n    s: 'ثوان',\n    m: 'دقيقة',\n    mm: '%d دقائق',\n    h: 'ساعة',\n    hh: '%d ساعات',\n    d: 'يوم',\n    dd: '%d أيام',\n    M: 'شهر',\n    MM: '%d أشهر',\n    y: 'سنة',\n    yy: '%d سنوات',\n  },\n  preparse(string) {\n    return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, match => numberMap[match]).replace(/،/g, ',');\n  },\n  postformat(string) {\n    return string.replace(/\\d/g, match => symbolMap[match]).replace(/,/g, '،');\n  },\n  week: {\n    dow: 0, // Sunday is the first day of the week.\n    doy: 6, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale  :  Arabic (Tunisia) [ar-tn]\n//! author : Nader Toukabri : https://github.com/naderio\n/* jshint -W100 */\n\nexport default {\n  months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n  monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n  weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n  weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n  weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[اليوم على الساعة] LT',\n    nextDay: '[غدا على الساعة] LT',\n    nextWeek: 'dddd [على الساعة] LT',\n    lastDay: '[أمس على الساعة] LT',\n    lastWeek: 'dddd [على الساعة] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'في %s',\n    past: 'منذ %s',\n    s: 'ثوان',\n    m: 'دقيقة',\n    mm: '%d دقائق',\n    h: 'ساعة',\n    hh: '%d ساعات',\n    d: 'يوم',\n    dd: '%d أيام',\n    M: 'شهر',\n    MM: '%d أشهر',\n    y: 'سنة',\n    yy: '%d سنوات',\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Arabic [ar]\n//! author : Abdel Said: https://github.com/abdelsaid\n//! author : Ahmed Elkhatib\n//! author : forabi https://github.com/forabi\n/* jshint -W100 */\n\nconst symbolMap = {\n  1: '١',\n  2: '٢',\n  3: '٣',\n  4: '٤',\n  5: '٥',\n  6: '٦',\n  7: '٧',\n  8: '٨',\n  9: '٩',\n  0: '٠',\n};\n\nconst numberMap = {\n  '١': '1',\n  '٢': '2',\n  '٣': '3',\n  '٤': '4',\n  '٥': '5',\n  '٦': '6',\n  '٧': '7',\n  '٨': '8',\n  '٩': '9',\n  '٠': '0',\n};\n\nconst pluralForm = function (n) {\n  return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;\n};\n\nconst plurals = {\n  s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n  m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n  h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n  d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n  M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n  y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام'],\n};\n\nconst pluralize = function (u) {\n  return function (number, withoutSuffix, string, isFuture) {\n    const f = pluralForm(number);\n    let str = plurals[u][pluralForm(number)];\n    if (f === 2) {\n      str = str[withoutSuffix ? 0 : 1];\n    }\n    return str.replace(/%d/i, number);\n  };\n};\n\nconst months = [\n  'كانون الثاني يناير',\n  'شباط فبراير',\n  'آذار مارس',\n  'نيسان أبريل',\n  'أيار مايو',\n  'حزيران يونيو',\n  'تموز يوليو',\n  'آب أغسطس',\n  'أيلول سبتمبر',\n  'تشرين الأول أكتوبر',\n  'تشرين الثاني نوفمبر',\n  'كانون الأول ديسمبر',\n];\n\nexport default {\n  months,\n  monthsShort: months,\n  weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n  weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n  weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'D/\\u200FM/\\u200FYYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm',\n  },\n  meridiemParse: /ص|م/,\n  isPM(input) {\n    return input === 'م';\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ص';\n    }\n    return 'م';\n  },\n  calendar: {\n    sameDay: '[اليوم عند الساعة] LT',\n    nextDay: '[غدًا عند الساعة] LT',\n    nextWeek: 'dddd [عند الساعة] LT',\n    lastDay: '[أمس عند الساعة] LT',\n    lastWeek: 'dddd [عند الساعة] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'بعد %s',\n    past: 'منذ %s',\n    s: pluralize('s'),\n    m: pluralize('m'),\n    mm: pluralize('m'),\n    h: pluralize('h'),\n    hh: pluralize('h'),\n    d: pluralize('d'),\n    dd: pluralize('d'),\n    M: pluralize('M'),\n    MM: pluralize('M'),\n    y: pluralize('y'),\n    yy: pluralize('y'),\n  },\n  preparse(string) {\n    return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, match => numberMap[match]).replace(/،/g, ',');\n  },\n  postformat(string) {\n    return string.replace(/\\d/g, match => symbolMap[match]).replace(/,/g, '،');\n  },\n  week: {\n    dow: 6, // Saturday is the first day of the week.\n    doy: 12, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Azerbaijani [az]\n//! author : topchiyev : https://github.com/topchiyev\n/* jshint -W100 */\n\nconst suffixes = {\n  1: '-inci',\n  5: '-inci',\n  8: '-inci',\n  70: '-inci',\n  80: '-inci',\n  2: '-nci',\n  7: '-nci',\n  20: '-nci',\n  50: '-nci',\n  3: '-üncü',\n  4: '-üncü',\n  100: '-üncü',\n  6: '-ncı',\n  9: '-uncu',\n  10: '-uncu',\n  30: '-uncu',\n  60: '-ıncı',\n  90: '-ıncı',\n};\n\nexport default {\n  months: 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),\n  monthsShort: 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),\n  weekdays: 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),\n  weekdaysShort: 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),\n  weekdaysMin: 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[bugün saat] LT',\n    nextDay: '[sabah saat] LT',\n    nextWeek: '[gələn həftə] dddd [saat] LT',\n    lastDay: '[dünən] LT',\n    lastWeek: '[keçən həftə] dddd [saat] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s sonra',\n    past: '%s əvvəl',\n    s: 'birneçə saniyyə',\n    m: 'bir dəqiqə',\n    mm: '%d dəqiqə',\n    h: 'bir saat',\n    hh: '%d saat',\n    d: 'bir gün',\n    dd: '%d gün',\n    M: 'bir ay',\n    MM: '%d ay',\n    y: 'bir il',\n    yy: '%d il',\n  },\n  meridiemParse: /gecə|səhər|gündüz|axşam/,\n  isPM(input) {\n    return /^(gündüz|axşam)$/.test(input);\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'gecə';\n    } else if (hour < 12) {\n      return 'səhər';\n    } else if (hour < 17) {\n      return 'gündüz';\n    }\n    return 'axşam';\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,\n  ordinal(number) {\n    if (number === 0) { // special case for zero\n      return `${number}-ıncı`;\n    }\n    const a = number % 10;\n    const b = number % 100 - a;\n    const c = number >= 100 ? 100 : null;\n    return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Bulgarian [bg]\n//! author : Krasen Borisov : https://github.com/kraz\n/* jshint -W100 */\n\nexport default {\n  months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),\n  monthsShort: 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\n  weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),\n  weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\n  weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'D.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY H:mm',\n    LLLL: 'dddd, D MMMM YYYY H:mm',\n  },\n  calendar: {\n    sameDay: '[Днес в] LT',\n    nextDay: '[Утре в] LT',\n    nextWeek: 'dddd [в] LT',\n    lastDay: '[Вчера в] LT',\n    lastWeek() {\n      switch (this.day()) {\n        case 0:\n        case 3:\n        case 6:\n          return '[В изминалата] dddd [в] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[В изминалия] dddd [в] LT';\n      }\n    },\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'след %s',\n    past: 'преди %s',\n    s: 'няколко секунди',\n    m: 'минута',\n    mm: '%d минути',\n    h: 'час',\n    hh: '%d часа',\n    d: 'ден',\n    dd: '%d дни',\n    M: 'месец',\n    MM: '%d месеца',\n    y: 'година',\n    yy: '%d години',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n  ordinal(number) {\n    const lastDigit = number % 10;\n    const last2Digits = number % 100;\n    if (number === 0) {\n      return `${number}-ев`;\n    } else if (last2Digits === 0) {\n      return `${number}-ен`;\n    } else if (last2Digits > 10 && last2Digits < 20) {\n      return `${number}-ти`;\n    } else if (lastDigit === 1) {\n      return `${number}-ви`;\n    } else if (lastDigit === 2) {\n      return `${number}-ри`;\n    } else if (lastDigit === 7 || lastDigit === 8) {\n      return `${number}-ми`;\n    }\n    return `${number}-ти`;\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Bambara [bm]\n//! author : Estelle Comment : https://github.com/estellecomment\n// Language contact person : Abdoufata Kane : https://github.com/abdoufata\n/* jshint -W100 */\n\nexport default {\n  months: 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split('_'),\n  monthsShort: 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),\n  weekdays: 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),\n  weekdaysShort: 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),\n  weekdaysMin: 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'MMMM [tile] D [san] YYYY',\n    LLL: 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',\n    LLLL: 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',\n  },\n  calendar: {\n    sameDay: '[Bi lɛrɛ] LT',\n    nextDay: '[Sini lɛrɛ] LT',\n    nextWeek: 'dddd [don lɛrɛ] LT',\n    lastDay: '[Kunu lɛrɛ] LT',\n    lastWeek: 'dddd [tɛmɛnen lɛrɛ] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s kɔnɔ',\n    past: 'a bɛ %s bɔ',\n    s: 'sanga dama dama',\n    m: 'miniti kelen',\n    mm: 'miniti %d',\n    h: 'lɛrɛ kelen',\n    hh: 'lɛrɛ %d',\n    d: 'tile kelen',\n    dd: 'tile %d',\n    M: 'kalo kelen',\n    MM: 'kalo %d',\n    y: 'san kelen',\n    yy: 'san %d',\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Bengali [bn]\n//! author : Kaushik Gandhi : https://github.com/kaushikgandhi\n/* jshint -W100 */\n\nconst symbolMap = {\n  1: '১',\n  2: '২',\n  3: '৩',\n  4: '৪',\n  5: '৫',\n  6: '৬',\n  7: '৭',\n  8: '৮',\n  9: '৯',\n  0: '০',\n};\n\nconst numberMap = {\n  '১': '1',\n  '২': '2',\n  '৩': '3',\n  '৪': '4',\n  '৫': '5',\n  '৬': '6',\n  '৭': '7',\n  '৮': '8',\n  '৯': '9',\n  '০': '0',\n};\n\nexport default {\n  months: 'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),\n  monthsShort: 'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),\n  weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),\n  weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),\n  weekdaysMin: 'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm সময়',\n    LTS: 'A h:mm:ss সময়',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY, A h:mm সময়',\n    LLLL: 'dddd, D MMMM YYYY, A h:mm সময়',\n  },\n  calendar: {\n    sameDay: '[আজ] LT',\n    nextDay: '[আগামীকাল] LT',\n    nextWeek: 'dddd, LT',\n    lastDay: '[গতকাল] LT',\n    lastWeek: '[গত] dddd, LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s পরে',\n    past: '%s আগে',\n    s: 'কয়েক সেকেন্ড',\n    m: 'এক মিনিট',\n    mm: '%d মিনিট',\n    h: 'এক ঘন্টা',\n    hh: '%d ঘন্টা',\n    d: 'এক দিন',\n    dd: '%d দিন',\n    M: 'এক মাস',\n    MM: '%d মাস',\n    y: 'এক বছর',\n    yy: '%d বছর',\n  },\n  preparse(string) {\n    return string.replace(/[১২৩৪৫৬৭৮৯০]/g, match => numberMap[match]);\n  },\n  postformat(string) {\n    return string.replace(/\\d/g, match => symbolMap[match]);\n  },\n  meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if ((meridiem === 'রাত' && hour >= 4) ||\n      (meridiem === 'দুপুর' && hour < 5) ||\n      meridiem === 'বিকাল') {\n      return hour + 12;\n    }\n    return hour;\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'রাত';\n    } else if (hour < 10) {\n      return 'সকাল';\n    } else if (hour < 17) {\n      return 'দুপুর';\n    } else if (hour < 20) {\n      return 'বিকাল';\n    }\n    return 'রাত';\n  },\n  week: {\n    dow: 0, // Sunday is the first day of the week.\n    doy: 6, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Tibetan [bo]\n//! author : Thupten N. Chakrishar : https://github.com/vajradog\n/* jshint -W100 */\n\nconst symbolMap = {\n  1: '༡',\n  2: '༢',\n  3: '༣',\n  4: '༤',\n  5: '༥',\n  6: '༦',\n  7: '༧',\n  8: '༨',\n  9: '༩',\n  0: '༠',\n};\n\nconst numberMap = {\n  '༡': '1',\n  '༢': '2',\n  '༣': '3',\n  '༤': '4',\n  '༥': '5',\n  '༦': '6',\n  '༧': '7',\n  '༨': '8',\n  '༩': '9',\n  '༠': '0',\n};\n\nexport default {\n  months: 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),\n  monthsShort: 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),\n  weekdays: 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),\n  weekdaysShort: 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),\n  weekdaysMin: 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm',\n    LTS: 'A h:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY, A h:mm',\n    LLLL: 'dddd, D MMMM YYYY, A h:mm',\n  },\n  calendar: {\n    sameDay: '[དི་རིང] LT',\n    nextDay: '[སང་ཉིན] LT',\n    nextWeek: '[བདུན་ཕྲག་རྗེས་མ], LT',\n    lastDay: '[ཁ་སང] LT',\n    lastWeek: '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s ལ་',\n    past: '%s སྔན་ལ',\n    s: 'ལམ་སང',\n    m: 'སྐར་མ་གཅིག',\n    mm: '%d སྐར་མ',\n    h: 'ཆུ་ཚོད་གཅིག',\n    hh: '%d ཆུ་ཚོད',\n    d: 'ཉིན་གཅིག',\n    dd: '%d ཉིན་',\n    M: 'ཟླ་བ་གཅིག',\n    MM: '%d ཟླ་བ',\n    y: 'ལོ་གཅིག',\n    yy: '%d ལོ',\n  },\n  preparse(string) {\n    return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, match => numberMap[match]);\n  },\n  postformat(string) {\n    return string.replace(/\\d/g, match => symbolMap[match]);\n  },\n  meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if ((meridiem === 'མཚན་མོ' && hour >= 4) ||\n      (meridiem === 'ཉིན་གུང' && hour < 5) ||\n      meridiem === 'དགོང་དག') {\n      return hour + 12;\n    }\n    return hour;\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'མཚན་མོ';\n    } else if (hour < 10) {\n      return 'ཞོགས་ཀས';\n    } else if (hour < 17) {\n      return 'ཉིན་གུང';\n    } else if (hour < 20) {\n      return 'དགོང་དག';\n    }\n    return 'མཚན་མོ';\n  },\n  week: {\n    dow: 0, // Sunday is the first day of the week.\n    doy: 6, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Catalan [ca]\n//! author : Juan G. Hurtado : https://github.com/juanghurtado\n/* jshint -W100 */\n\nexport default {\n  months: {\n    standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\n    format: 'de gener_de febrer_de març_d\\'abril_de maig_de juny_de juliol_d\\'agost_de setembre_d\\'octubre_de novembre_de desembre'.split('_'),\n    isFormat: /D[oD]?(\\s)+MMMM/,\n  },\n  monthsShort: 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\n  weekdaysShort: 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),\n  weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM [de] YYYY',\n    ll: 'D MMM YYYY',\n    LLL: 'D MMMM [de] YYYY [a les] H:mm',\n    lll: 'D MMM YYYY, H:mm',\n    LLLL: 'dddd D MMMM [de] YYYY [a les] H:mm',\n    llll: 'ddd D MMM YYYY, H:mm',\n  },\n  calendar: {\n    sameDay() {\n      return `[avui a ${(this.hours() !== 1) ? 'les' : 'la'}] LT`;\n    },\n    nextDay() {\n      return `[demà a ${(this.hours() !== 1) ? 'les' : 'la'}] LT`;\n    },\n    nextWeek() {\n      return `dddd [a ${(this.hours() !== 1) ? 'les' : 'la'}] LT`;\n    },\n    lastDay() {\n      return `[ahir a ${(this.hours() !== 1) ? 'les' : 'la'}] LT`;\n    },\n    lastWeek() {\n      return `[el] dddd [passat a ${(this.hours() !== 1) ? 'les' : 'la'}] LT`;\n    },\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'd\\'aquí %s',\n    past: 'fa %s',\n    s: 'uns segons',\n    m: 'un minut',\n    mm: '%d minuts',\n    h: 'una hora',\n    hh: '%d hores',\n    d: 'un dia',\n    dd: '%d dies',\n    M: 'un mes',\n    MM: '%d mesos',\n    y: 'un any',\n    yy: '%d anys',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(r|n|t|è|a)/,\n  ordinal(number, period) {\n    let output = (number === 1) ? 'r' :\n      (number === 2) ? 'n' :\n        (number === 3) ? 'r' :\n          (number === 4) ? 't' : 'è';\n    if (period === 'w' || period === 'W') {\n      output = 'a';\n    }\n    return number + output;\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Chuvash [cv]\n//! author : Anatoly Mironov : https://github.com/mirontoli\n/* jshint -W100 */\n\nexport default {\n  months: 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),\n  monthsShort: 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),\n  weekdays: 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),\n  weekdaysShort: 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),\n  weekdaysMin: 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD-MM-YYYY',\n    LL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',\n    LLL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',\n    LLLL: 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',\n  },\n  calendar: {\n    sameDay: '[Паян] LT [сехетре]',\n    nextDay: '[Ыран] LT [сехетре]',\n    lastDay: '[Ӗнер] LT [сехетре]',\n    nextWeek: '[Ҫитес] dddd LT [сехетре]',\n    lastWeek: '[Иртнӗ] dddd LT [сехетре]',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future(output) {\n      const affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';\n      return output + affix;\n    },\n    past: '%s каялла',\n    s: 'пӗр-ик ҫеккунт',\n    m: 'пӗр минут',\n    mm: '%d минут',\n    h: 'пӗр сехет',\n    hh: '%d сехет',\n    d: 'пӗр кун',\n    dd: '%d кун',\n    M: 'пӗр уйӑх',\n    MM: '%d уйӑх',\n    y: 'пӗр ҫул',\n    yy: '%d ҫул',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-мӗш/,\n  ordinal: '%d-мӗш',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Welsh [cy]\n//! author : Robert Allen : https://github.com/robgallen\n//! author : https://github.com/ryangreaves\n/* jshint -W100 */\n\nexport default {\n  months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),\n  monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),\n  weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),\n  weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),\n  weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),\n  weekdaysParseExact: true,\n  // time formats are the same as en-gb\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[Heddiw am] LT',\n    nextDay: '[Yfory am] LT',\n    nextWeek: 'dddd [am] LT',\n    lastDay: '[Ddoe am] LT',\n    lastWeek: 'dddd [diwethaf am] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'mewn %s',\n    past: '%s yn ôl',\n    s: 'ychydig eiliadau',\n    m: 'munud',\n    mm: '%d munud',\n    h: 'awr',\n    hh: '%d awr',\n    d: 'diwrnod',\n    dd: '%d diwrnod',\n    M: 'mis',\n    MM: '%d mis',\n    y: 'blwyddyn',\n    yy: '%d flynedd',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,\n  // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh\n  ordinal(number) {\n    const b = number;\n    let output = '';\n    const lookup = [\n      '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed\n      'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed', // 11eg to 20fed\n    ];\n    if (b > 20) {\n      if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {\n        output = 'fed'; // not 30ain, 70ain or 90ain\n      } else {\n        output = 'ain';\n      }\n    } else if (b > 0) {\n      output = lookup[b];\n    }\n    return number + output;\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Danish [da]\n//! author : Ulrik Nielsen : https://github.com/mrbase\n/* jshint -W100 */\n\nexport default {\n  months: 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),\n  monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n  weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n  weekdaysShort: 'søn_man_tir_ons_tor_fre_lør'.split('_'),\n  weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY HH:mm',\n    LLLL: 'dddd [d.] D. MMMM YYYY [kl.] HH:mm',\n  },\n  calendar: {\n    sameDay: '[i dag kl.] LT',\n    nextDay: '[i morgen kl.] LT',\n    nextWeek: 'på dddd [kl.] LT',\n    lastDay: '[i går kl.] LT',\n    lastWeek: '[i] dddd[s kl.] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: '%s siden',\n    s: 'få sekunder',\n    m: 'et minut',\n    mm: '%d minutter',\n    h: 'en time',\n    hh: '%d timer',\n    d: 'en dag',\n    dd: '%d dage',\n    M: 'en måned',\n    MM: '%d måneder',\n    y: 'et år',\n    yy: '%d år',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Maldivian [dv]\n//! author : Jawish Hameed : https://github.com/jawish\n/* jshint -W100 */\n\nconst months = [\n  'ޖެނުއަރީ',\n  'ފެބްރުއަރީ',\n  'މާރިޗު',\n  'އޭޕްރީލު',\n  'މޭ',\n  'ޖޫން',\n  'ޖުލައި',\n  'އޯގަސްޓު',\n  'ސެޕްޓެމްބަރު',\n  'އޮކްޓޯބަރު',\n  'ނޮވެމްބަރު',\n  'ޑިސެމްބަރު',\n];\n\nconst weekdays = [\n  'އާދިއްތަ',\n  'ހޯމަ',\n  'އަންގާރަ',\n  'ބުދަ',\n  'ބުރާސްފަތި',\n  'ހުކުރު',\n  'ހޮނިހިރު',\n];\n\nexport default {\n  months,\n  monthsShort: months,\n  weekdays,\n  weekdaysShort: weekdays,\n  weekdaysMin: 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),\n  longDateFormat: {\n\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'D/M/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm',\n  },\n  meridiemParse: /މކ|މފ/,\n  isPM(input) {\n    return input === 'މފ';\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'މކ';\n    }\n    return 'މފ';\n  },\n  calendar: {\n    sameDay: '[މިއަދު] LT',\n    nextDay: '[މާދަމާ] LT',\n    nextWeek: 'dddd LT',\n    lastDay: '[އިއްޔެ] LT',\n    lastWeek: '[ފާއިތުވި] dddd LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'ތެރޭގައި %s',\n    past: 'ކުރިން %s',\n    s: 'ސިކުންތުކޮޅެއް',\n    m: 'މިނިޓެއް',\n    mm: 'މިނިޓު %d',\n    h: 'ގަޑިއިރެއް',\n    hh: 'ގަޑިއިރު %d',\n    d: 'ދުވަހެއް',\n    dd: 'ދުވަސް %d',\n    M: 'މަހެއް',\n    MM: 'މަސް %d',\n    y: 'އަހަރެއް',\n    yy: 'އަހަރު %d',\n  },\n  preparse(string) {\n    return string.replace(/،/g, ',');\n  },\n  postformat(string) {\n    return string.replace(/,/g, '،');\n  },\n  week: {\n    dow: 7, // Sunday is the first day of the week.\n    doy: 12, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Greek [el]\n//! author : Aggelos Karalias : https://github.com/mehiel\n/* jshint -W100 */\n\nimport { isFunction } from '../utils/index.js';\n\nexport default {\n  monthsNominativeEl: 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),\n  monthsGenitiveEl: 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),\n  months(momentToFormat, format) {\n    if (!momentToFormat) {\n      return this._monthsNominativeEl;\n    } else if (typeof format === 'string' && /D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'\n      return this._monthsGenitiveEl[momentToFormat.month()];\n    }\n    return this._monthsNominativeEl[momentToFormat.month()];\n  },\n  monthsShort: 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),\n  weekdays: 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),\n  weekdaysShort: 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),\n  weekdaysMin: 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),\n  meridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'μμ' : 'ΜΜ';\n    }\n    return isLower ? 'πμ' : 'ΠΜ';\n  },\n  isPM(input) {\n    return ((`${input}`).toLowerCase()[0] === 'μ');\n  },\n  meridiemParse: /[ΠΜ]\\.?Μ?\\.?/i,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY h:mm A',\n    LLLL: 'dddd, D MMMM YYYY h:mm A',\n  },\n  calendarEl: {\n    sameDay: '[Σήμερα {}] LT',\n    nextDay: '[Αύριο {}] LT',\n    nextWeek: 'dddd [{}] LT',\n    lastDay: '[Χθες {}] LT',\n    lastWeek() {\n      switch (this.day()) {\n        case 6:\n          return '[το προηγούμενο] dddd [{}] LT';\n        default:\n          return '[την προηγούμενη] dddd [{}] LT';\n      }\n    },\n    sameElse: 'L',\n  },\n  calendar(key, mom) {\n    let output = this._calendarEl[key],\n      hours = mom && mom.hours();\n    if (isFunction(output)) {\n      output = output.apply(mom);\n    }\n    return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));\n  },\n  relativeTime: {\n    future: 'σε %s',\n    past: '%s πριν',\n    s: 'λίγα δευτερόλεπτα',\n    m: 'ένα λεπτό',\n    mm: '%d λεπτά',\n    h: 'μία ώρα',\n    hh: '%d ώρες',\n    d: 'μία μέρα',\n    dd: '%d μέρες',\n    M: 'ένας μήνας',\n    MM: '%d μήνες',\n    y: 'ένας χρόνος',\n    yy: '%d χρόνια',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}η/,\n  ordinal: '%dη',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : English (Australia) [en-au]\n//! author : Jared Morse : https://github.com/jarcoal\n/* jshint -W100 */\n\nexport default {\n  months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n  weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n  weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n  weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY h:mm A',\n    LLLL: 'dddd, D MMMM YYYY h:mm A',\n  },\n  calendar: {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n  ordinal(number) {\n    const b = number % 10;\n    const output = (~~(number % 100 / 10) === 1) ? 'th' :\n      (b === 1) ? 'st' :\n        (b === 2) ? 'nd' :\n          (b === 3) ? 'rd' : 'th';\n    return number + output;\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : English (Canada) [en-ca]\n//! author : Jonathan Abourbih : https://github.com/jonbca\n/* jshint -W100 */\n\nexport default {\n  months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n  weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n  weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n  weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'YYYY-MM-DD',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A',\n  },\n  calendar: {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n  ordinal(number) {\n    const b = number % 10;\n    const output = (~~(number % 100 / 10) === 1) ? 'th' :\n      (b === 1) ? 'st' :\n        (b === 2) ? 'nd' :\n          (b === 3) ? 'rd' : 'th';\n    return number + output;\n  },\n};\n","//! now.js locale configuration\n//! locale : English (United Kingdom) [en-gb]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\n/* jshint -W100 */\n\nexport default {\n  months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n  weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n  weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n  weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n  ordinal(number) {\n    const b = number % 10;\n    const output = (~~(number % 100 / 10) === 1) ? 'th' :\n      (b === 1) ? 'st' :\n        (b === 2) ? 'nd' :\n          (b === 3) ? 'rd' : 'th';\n    return number + output;\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : English (Ireland) [en-ie]\n//! author : Chris Cartlidge : https://github.com/chriscartlidge\n/* jshint -W100 */\n\nexport default {\n  months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n  weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n  weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n  weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD-MM-YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n  ordinal(number) {\n    const b = number % 10;\n    const output = (~~(number % 100 / 10) === 1) ? 'th' :\n      (b === 1) ? 'st' :\n        (b === 2) ? 'nd' :\n          (b === 3) ? 'rd' : 'th';\n    return number + output;\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : English (New Zealand) [en-nz]\n//! author : Luke McGregor : https://github.com/lukemcgregor\n/* jshint -W100 */\n\nexport default {\n  months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n  weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n  weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n  weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY h:mm A',\n    LLLL: 'dddd, D MMMM YYYY h:mm A',\n  },\n  calendar: {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n  ordinal(number) {\n    const b = number % 10;\n    const output = (~~(number % 100 / 10) === 1) ? 'th' :\n      (b === 1) ? 'st' :\n        (b === 2) ? 'nd' :\n          (b === 3) ? 'rd' : 'th';\n    return number + output;\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Esperanto [eo]\n//! author : Colin Dean : https://github.com/colindean\n//! author : Mia Nordentoft Imperatori : https://github.com/miestasmia\n//! comment : miestasmia corrected the translation by colindean\n/* jshint -W100 */\n\nexport default {\n  months: 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),\n  monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),\n  weekdays: 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),\n  weekdaysShort: 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),\n  weekdaysMin: 'di_lu_ma_me_ĵa_ve_sa'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'D[-a de] MMMM, YYYY',\n    LLL: 'D[-a de] MMMM, YYYY HH:mm',\n    LLLL: 'dddd, [la] D[-a de] MMMM, YYYY HH:mm',\n  },\n  meridiemParse: /[ap]\\.t\\.m/i,\n  isPM(input) {\n    return input.charAt(0).toLowerCase() === 'p';\n  },\n  meridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'p.t.m.' : 'P.T.M.';\n    }\n    return isLower ? 'a.t.m.' : 'A.T.M.';\n  },\n  calendar: {\n    sameDay: '[Hodiaŭ je] LT',\n    nextDay: '[Morgaŭ je] LT',\n    nextWeek: 'dddd [je] LT',\n    lastDay: '[Hieraŭ je] LT',\n    lastWeek: '[pasinta] dddd [je] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'post %s',\n    past: 'antaŭ %s',\n    s: 'sekundoj',\n    m: 'minuto',\n    mm: '%d minutoj',\n    h: 'horo',\n    hh: '%d horoj',\n    d: 'tago', // ne 'diurno', ĉar estas uzita por proksimumo\n    dd: '%d tagoj',\n    M: 'monato',\n    MM: '%d monatoj',\n    y: 'jaro',\n    yy: '%d jaroj',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}a/,\n  ordinal: '%da',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Spanish (Dominican Republic) [es-do]\n/* jshint -W100 */\n\nconst monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\nconst monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\nconst monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\nconst monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\nexport default {\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n  monthsShort(m, format) {\n    if (!m) {\n      return monthsShortDot;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort[m.month()];\n    }\n    return monthsShortDot[m.month()];\n  },\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY h:mm A',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A',\n  },\n  calendar: {\n    sameDay() {\n      return `[hoy a la${(this.hours() !== 1) ? 's' : ''}] LT`;\n    },\n    nextDay() {\n      return `[mañana a la${(this.hours() !== 1) ? 's' : ''}] LT`;\n    },\n    nextWeek() {\n      return `dddd [a la${(this.hours() !== 1) ? 's' : ''}] LT`;\n    },\n    lastDay() {\n      return `[ayer a la${(this.hours() !== 1) ? 's' : ''}] LT`;\n    },\n    lastWeek() {\n      return `[el] dddd [pasado a la${(this.hours() !== 1) ? 's' : ''}] LT`;\n    },\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Spanish(United State) [es-us]\n//! author : bustta : https://github.com/bustta\n/* jshint -W100 */\n\nconst monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\nconst monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\nexport default {\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n  monthsShort(m, format) {\n    if (!m) {\n      return monthsShortDot;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort[m.month()];\n    }\n    return monthsShortDot[m.month()];\n  },\n  monthsParseExact: true,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM [de] D [de] YYYY',\n    LLL: 'MMMM [de] D [de] YYYY H:mm',\n    LLLL: 'dddd, MMMM [de] D [de] YYYY H:mm',\n  },\n  calendar: {\n    sameDay() {\n      return `[hoy a la${(this.hours() !== 1) ? 's' : ''}] LT`;\n    },\n    nextDay() {\n      return `[mañana a la${(this.hours() !== 1) ? 's' : ''}] LT`;\n    },\n    nextWeek() {\n      return `dddd [a la${(this.hours() !== 1) ? 's' : ''}] LT`;\n    },\n    lastDay() {\n      return `[ayer a la${(this.hours() !== 1) ? 's' : ''}] LT`;\n    },\n    lastWeek() {\n      return `[el] dddd [pasado a la${(this.hours() !== 1) ? 's' : ''}] LT`;\n    },\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 0, // Sunday is the first day of the week.\n    doy: 6, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Spanish [es]\n//! author : Julio Napurí : https://github.com/julionc\n/* jshint -W100 */\n\nconst monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\nconst monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\nconst monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\nconst monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\nexport default {\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n  monthsShort(m, format) {\n    if (!m) {\n      return monthsShortDot;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort[m.month()];\n    }\n    return monthsShortDot[m.month()];\n  },\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',\n  },\n  calendar: {\n    sameDay() {\n      return `[hoy a la${(this.hours() !== 1) ? 's' : ''}] LT`;\n    },\n    nextDay() {\n      return `[mañana a la${(this.hours() !== 1) ? 's' : ''}] LT`;\n    },\n    nextWeek() {\n      return `dddd [a la${(this.hours() !== 1) ? 's' : ''}] LT`;\n    },\n    lastDay() {\n      return `[ayer a la${(this.hours() !== 1) ? 's' : ''}] LT`;\n    },\n    lastWeek() {\n      return `[el] dddd [pasado a la${(this.hours() !== 1) ? 's' : ''}] LT`;\n    },\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Basque [eu]\n//! author : Eneko Illarramendi : https://github.com/eillarra\n/* jshint -W100 */\n\nexport default {\n  months: 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),\n  monthsShort: 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),\n  weekdaysShort: 'ig._al._ar._az._og._ol._lr.'.split('_'),\n  weekdaysMin: 'ig_al_ar_az_og_ol_lr'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'YYYY[ko] MMMM[ren] D[a]',\n    LLL: 'YYYY[ko] MMMM[ren] D[a] HH:mm',\n    LLLL: 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',\n    l: 'YYYY-M-D',\n    ll: 'YYYY[ko] MMM D[a]',\n    lll: 'YYYY[ko] MMM D[a] HH:mm',\n    llll: 'ddd, YYYY[ko] MMM D[a] HH:mm',\n  },\n  calendar: {\n    sameDay: '[gaur] LT[etan]',\n    nextDay: '[bihar] LT[etan]',\n    nextWeek: 'dddd LT[etan]',\n    lastDay: '[atzo] LT[etan]',\n    lastWeek: '[aurreko] dddd LT[etan]',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s barru',\n    past: 'duela %s',\n    s: 'segundo batzuk',\n    m: 'minutu bat',\n    mm: '%d minutu',\n    h: 'ordu bat',\n    hh: '%d ordu',\n    d: 'egun bat',\n    dd: '%d egun',\n    M: 'hilabete bat',\n    MM: '%d hilabete',\n    y: 'urte bat',\n    yy: '%d urte',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Persian [fa]\n//! author : Ebrahim Byagowi : https://github.com/ebraminio\n/* jshint -W100 */\n\nconst symbolMap = {\n  1: '۱',\n  2: '۲',\n  3: '۳',\n  4: '۴',\n  5: '۵',\n  6: '۶',\n  7: '۷',\n  8: '۸',\n  9: '۹',\n  0: '۰',\n};\n\nconst numberMap = {\n  '۱': '1',\n  '۲': '2',\n  '۳': '3',\n  '۴': '4',\n  '۵': '5',\n  '۶': '6',\n  '۷': '7',\n  '۸': '8',\n  '۹': '9',\n  '۰': '0',\n};\n\nexport default {\n  months: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n  monthsShort: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n  weekdays: 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n  weekdaysShort: 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n  weekdaysMin: 'ی_د_س_چ_پ_ج_ش'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm',\n  },\n  meridiemParse: /قبل از ظهر|بعد از ظهر/,\n  isPM(input) {\n    return /بعد از ظهر/.test(input);\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'قبل از ظهر';\n    }\n    return 'بعد از ظهر';\n  },\n  calendar: {\n    sameDay: '[امروز ساعت] LT',\n    nextDay: '[فردا ساعت] LT',\n    nextWeek: 'dddd [ساعت] LT',\n    lastDay: '[دیروز ساعت] LT',\n    lastWeek: 'dddd [پیش] [ساعت] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'در %s',\n    past: '%s پیش',\n    s: 'چند ثانیه',\n    m: 'یک دقیقه',\n    mm: '%d دقیقه',\n    h: 'یک ساعت',\n    hh: '%d ساعت',\n    d: 'یک روز',\n    dd: '%d روز',\n    M: 'یک ماه',\n    MM: '%d ماه',\n    y: 'یک سال',\n    yy: '%d سال',\n  },\n  preparse(string) {\n    return string.replace(/[۰-۹]/g, match => numberMap[match]).replace(/،/g, ',');\n  },\n  postformat(string) {\n    return string.replace(/\\d/g, match => symbolMap[match]).replace(/,/g, '،');\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}م/,\n  ordinal: '%dم',\n  week: {\n    dow: 6, // Saturday is the first day of the week.\n    doy: 12, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Faroese [fo]\n//! author : Ragnar Johannesen : https://github.com/ragnar123\n/* jshint -W100 */\n\nexport default {\n  months: 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n  monthsShort: 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n  weekdays: 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),\n  weekdaysShort: 'sun_mán_týs_mik_hós_frí_ley'.split('_'),\n  weekdaysMin: 'su_má_tý_mi_hó_fr_le'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D. MMMM, YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[Í dag kl.] LT',\n    nextDay: '[Í morgin kl.] LT',\n    nextWeek: 'dddd [kl.] LT',\n    lastDay: '[Í gjár kl.] LT',\n    lastWeek: '[síðstu] dddd [kl] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'um %s',\n    past: '%s síðani',\n    s: 'fá sekund',\n    m: 'ein minutt',\n    mm: '%d minuttir',\n    h: 'ein tími',\n    hh: '%d tímar',\n    d: 'ein dagur',\n    dd: '%d dagar',\n    M: 'ein mánaði',\n    MM: '%d mánaðir',\n    y: 'eitt ár',\n    yy: '%d ár',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : French (Canada) [fr-ca]\n//! author : Jonathan Abourbih : https://github.com/jonbca\n/* jshint -W100 */\n\nexport default {\n  months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n  monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n  weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n  weekdaysMin: 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[Aujourd’hui à] LT',\n    nextDay: '[Demain à] LT',\n    nextWeek: 'dddd [à] LT',\n    lastDay: '[Hier à] LT',\n    lastWeek: 'dddd [dernier à] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'dans %s',\n    past: 'il y a %s',\n    s: 'quelques secondes',\n    m: 'une minute',\n    mm: '%d minutes',\n    h: 'une heure',\n    hh: '%d heures',\n    d: 'un jour',\n    dd: '%d jours',\n    M: 'un mois',\n    MM: '%d mois',\n    y: 'un an',\n    yy: '%d ans',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n  ordinal(number, period) {\n    switch (period) {\n      // Words with masculine grammatical gender: mois, trimestre, jour\n      default:\n      case 'M':\n      case 'Q':\n      case 'D':\n      case 'DDD':\n      case 'd':\n        return number + (number === 1 ? 'er' : 'e');\n\n      // Words with feminine grammatical gender: semaine\n      case 'w':\n      case 'W':\n        return number + (number === 1 ? 're' : 'e');\n    }\n  },\n};\n","//! now.js locale configuration\n//! locale : French (Switzerland) [fr-ch]\n//! author : Gaspard Bucher : https://github.com/gaspard\n/* jshint -W100 */\n\nexport default {\n  months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n  monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n  weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n  weekdaysMin: 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[Aujourd’hui à] LT',\n    nextDay: '[Demain à] LT',\n    nextWeek: 'dddd [à] LT',\n    lastDay: '[Hier à] LT',\n    lastWeek: 'dddd [dernier à] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'dans %s',\n    past: 'il y a %s',\n    s: 'quelques secondes',\n    m: 'une minute',\n    mm: '%d minutes',\n    h: 'une heure',\n    hh: '%d heures',\n    d: 'un jour',\n    dd: '%d jours',\n    M: 'un mois',\n    MM: '%d mois',\n    y: 'un an',\n    yy: '%d ans',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n  ordinal(number, period) {\n    switch (period) {\n      // Words with masculine grammatical gender: mois, trimestre, jour\n      default:\n      case 'M':\n      case 'Q':\n      case 'D':\n      case 'DDD':\n      case 'd':\n        return number + (number === 1 ? 'er' : 'e');\n\n      // Words with feminine grammatical gender: semaine\n      case 'w':\n      case 'W':\n        return number + (number === 1 ? 're' : 'e');\n    }\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : French [fr]\n//! author : John Fischer : https://github.com/jfroffice\n/* jshint -W100 */\n\nexport default {\n  months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n  monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n  weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n  weekdaysMin: 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[Aujourd’hui à] LT',\n    nextDay: '[Demain à] LT',\n    nextWeek: 'dddd [à] LT',\n    lastDay: '[Hier à] LT',\n    lastWeek: 'dddd [dernier à] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'dans %s',\n    past: 'il y a %s',\n    s: 'quelques secondes',\n    m: 'une minute',\n    mm: '%d minutes',\n    h: 'une heure',\n    hh: '%d heures',\n    d: 'un jour',\n    dd: '%d jours',\n    M: 'un mois',\n    MM: '%d mois',\n    y: 'un an',\n    yy: '%d ans',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n  ordinal(number, period) {\n    switch (period) {\n      // TODO: Return 'e' when day of month > 1. Move this case inside\n      // block for masculine words below.\n      // See https://github.com/moment/moment/issues/3375\n      case 'D':\n        return number + (number === 1 ? 'er' : '');\n\n        // Words with masculine grammatical gender: mois, trimestre, jour\n      default:\n      case 'M':\n      case 'Q':\n      case 'DDD':\n      case 'd':\n        return number + (number === 1 ? 'er' : 'e');\n\n        // Words with feminine grammatical gender: semaine\n      case 'w':\n      case 'W':\n        return number + (number === 1 ? 're' : 'e');\n    }\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Frisian [fy]\n//! author : Robin van der Vliet : https://github.com/robin0van0der0v\n/* jshint -W100 */\n\nconst monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_');\nconst monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');\n\nexport default {\n  months: 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),\n  monthsShort(m, format) {\n    if (!m) {\n      return monthsShortWithDots;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShortWithoutDots[m.month()];\n    }\n    return monthsShortWithDots[m.month()];\n  },\n  monthsParseExact: true,\n  weekdays: 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),\n  weekdaysShort: 'si._mo._ti._wo._to._fr._so.'.split('_'),\n  weekdaysMin: 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD-MM-YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[hjoed om] LT',\n    nextDay: '[moarn om] LT',\n    nextWeek: 'dddd [om] LT',\n    lastDay: '[juster om] LT',\n    lastWeek: '[ôfrûne] dddd [om] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'oer %s',\n    past: '%s lyn',\n    s: 'in pear sekonden',\n    m: 'ien minút',\n    mm: '%d minuten',\n    h: 'ien oere',\n    hh: '%d oeren',\n    d: 'ien dei',\n    dd: '%d dagen',\n    M: 'ien moanne',\n    MM: '%d moannen',\n    y: 'ien jier',\n    yy: '%d jierren',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n  ordinal(number) {\n    return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Scottish Gaelic [gd]\n//! author : Jon Ashdown : https://github.com/jonashdown\n/* jshint -W100 */\n\nconst months = [\n  'Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd',\n];\n\nconst monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];\n\nconst weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];\n\nconst weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];\n\nconst weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];\n\nexport default {\n  months,\n  monthsShort,\n  monthsParseExact: true,\n  weekdays,\n  weekdaysShort,\n  weekdaysMin,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[An-diugh aig] LT',\n    nextDay: '[A-màireach aig] LT',\n    nextWeek: 'dddd [aig] LT',\n    lastDay: '[An-dè aig] LT',\n    lastWeek: 'dddd [seo chaidh] [aig] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'ann an %s',\n    past: 'bho chionn %s',\n    s: 'beagan diogan',\n    m: 'mionaid',\n    mm: '%d mionaidean',\n    h: 'uair',\n    hh: '%d uairean',\n    d: 'latha',\n    dd: '%d latha',\n    M: 'mìos',\n    MM: '%d mìosan',\n    y: 'bliadhna',\n    yy: '%d bliadhna',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(d|na|mh)/,\n  ordinal(number) {\n    const output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';\n    return number + output;\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Galician [gl]\n//! author : Juan G. Hurtado : https://github.com/juanghurtado\n/* jshint -W100 */\n\nexport default {\n  months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),\n  monthsShort: 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',\n  },\n  calendar: {\n    sameDay() {\n      return `[hoxe ${(this.hours() !== 1) ? 'ás' : 'á'}] LT`;\n    },\n    nextDay() {\n      return `[mañá ${(this.hours() !== 1) ? 'ás' : 'á'}] LT`;\n    },\n    nextWeek() {\n      return `dddd [${(this.hours() !== 1) ? 'ás' : 'a'}] LT`;\n    },\n    lastDay() {\n      return `[onte ${(this.hours() !== 1) ? 'á' : 'a'}] LT`;\n    },\n    lastWeek() {\n      return `[o] dddd [pasado ${(this.hours() !== 1) ? 'ás' : 'a'}] LT`;\n    },\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future(str) {\n      if (str.indexOf('un') === 0) {\n        return `n${str}`;\n      }\n      return `en ${str}`;\n    },\n    past: 'hai %s',\n    s: 'uns segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'unha hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un ano',\n    yy: '%d anos',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Gujarati [gu]\n//! author : Kaushik Thanki : https://github.com/Kaushik1987\n/* jshint -W100 */\n\nconst symbolMap = {\n  1: '૧',\n  2: '૨',\n  3: '૩',\n  4: '૪',\n  5: '૫',\n  6: '૬',\n  7: '૭',\n  8: '૮',\n  9: '૯',\n  0: '૦',\n};\n\nconst numberMap = {\n  '૧': '1',\n  '૨': '2',\n  '૩': '3',\n  '૪': '4',\n  '૫': '5',\n  '૬': '6',\n  '૭': '7',\n  '૮': '8',\n  '૯': '9',\n  '૦': '0',\n};\n\nexport default {\n  months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split('_'),\n  monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split('_'),\n  weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),\n  weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm વાગ્યે',\n    LTS: 'A h:mm:ss વાગ્યે',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY, A h:mm વાગ્યે',\n    LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે',\n  },\n  calendar: {\n    sameDay: '[આજ] LT',\n    nextDay: '[કાલે] LT',\n    nextWeek: 'dddd, LT',\n    lastDay: '[ગઇકાલે] LT',\n    lastWeek: '[પાછલા] dddd, LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s મા',\n    past: '%s પેહલા',\n    s: 'અમુક પળો',\n    m: 'એક મિનિટ',\n    mm: '%d મિનિટ',\n    h: 'એક કલાક',\n    hh: '%d કલાક',\n    d: 'એક દિવસ',\n    dd: '%d દિવસ',\n    M: 'એક મહિનો',\n    MM: '%d મહિનો',\n    y: 'એક વર્ષ',\n    yy: '%d વર્ષ',\n  },\n  preparse(string) {\n    return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, match => numberMap[match]);\n  },\n  postformat(string) {\n    return string.replace(/\\d/g, match => symbolMap[match]);\n  },\n  // Gujarati notation for meridiems are quite fuzzy in practice. While there exists\n  // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.\n  meridiemParse: /રાત|બપોર|સવાર|સાંજ/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'રાત') {\n      return hour < 4 ? hour : hour + 12;\n    } else if (meridiem === 'સવાર') {\n      return hour;\n    } else if (meridiem === 'બપોર') {\n      return hour >= 10 ? hour : hour + 12;\n    } else if (meridiem === 'સાંજ') {\n      return hour + 12;\n    }\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'રાત';\n    } else if (hour < 10) {\n      return 'સવાર';\n    } else if (hour < 17) {\n      return 'બપોર';\n    } else if (hour < 20) {\n      return 'સાંજ';\n    }\n    return 'રાત';\n  },\n  week: {\n    dow: 0, // Sunday is the first day of the week.\n    doy: 6, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Hebrew [he]\n//! author : Tomer Cohen : https://github.com/tomer\n//! author : Moshe Simantov : https://github.com/DevelopmentIL\n//! author : Tal Ater : https://github.com/TalAter\n/* jshint -W100 */\n\nexport default {\n  months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),\n  monthsShort: 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),\n  weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\n  weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\n  weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [ב]MMMM YYYY',\n    LLL: 'D [ב]MMMM YYYY HH:mm',\n    LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',\n    l: 'D/M/YYYY',\n    ll: 'D MMM YYYY',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd, D MMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[היום ב־]LT',\n    nextDay: '[מחר ב־]LT',\n    nextWeek: 'dddd [בשעה] LT',\n    lastDay: '[אתמול ב־]LT',\n    lastWeek: '[ביום] dddd [האחרון בשעה] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'בעוד %s',\n    past: 'לפני %s',\n    s: 'מספר שניות',\n    m: 'דקה',\n    mm: '%d דקות',\n    h: 'שעה',\n    hh(number) {\n      if (number === 2) {\n        return 'שעתיים';\n      }\n      return `${number} שעות`;\n    },\n    d: 'יום',\n    dd(number) {\n      if (number === 2) {\n        return 'יומיים';\n      }\n      return `${number} ימים`;\n    },\n    M: 'חודש',\n    MM(number) {\n      if (number === 2) {\n        return 'חודשיים';\n      }\n      return `${number} חודשים`;\n    },\n    y: 'שנה',\n    yy(number) {\n      if (number === 2) {\n        return 'שנתיים';\n      } else if (number % 10 === 0 && number !== 10) {\n        return `${number} שנה`;\n      }\n      return `${number} שנים`;\n    },\n  },\n  meridiemParse: /אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,\n  isPM(input) {\n    return /^(אחה\"צ|אחרי הצהריים|בערב)$/.test(input);\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 5) {\n      return 'לפנות בוקר';\n    } else if (hour < 10) {\n      return 'בבוקר';\n    } else if (hour < 12) {\n      return isLower ? 'לפנה\"צ' : 'לפני הצהריים';\n    } else if (hour < 18) {\n      return isLower ? 'אחה\"צ' : 'אחרי הצהריים';\n    }\n    return 'בערב';\n  },\n};\n","//! now.js locale configuration\n//! locale : Hindi [hi]\n//! author : Mayank Singhal : https://github.com/mayanksinghal\n/* jshint -W100 */\n\nconst symbolMap = {\n  1: '१',\n  2: '२',\n  3: '३',\n  4: '४',\n  5: '५',\n  6: '६',\n  7: '७',\n  8: '८',\n  9: '९',\n  0: '०',\n};\n\nconst numberMap = {\n  '१': '1',\n  '२': '2',\n  '३': '3',\n  '४': '4',\n  '५': '5',\n  '६': '6',\n  '७': '7',\n  '८': '8',\n  '९': '9',\n  '०': '0',\n};\n\nexport default {\n  months: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),\n  monthsShort: 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n  weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\n  weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm बजे',\n    LTS: 'A h:mm:ss बजे',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY, A h:mm बजे',\n    LLLL: 'dddd, D MMMM YYYY, A h:mm बजे',\n  },\n  calendar: {\n    sameDay: '[आज] LT',\n    nextDay: '[कल] LT',\n    nextWeek: 'dddd, LT',\n    lastDay: '[कल] LT',\n    lastWeek: '[पिछले] dddd, LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s में',\n    past: '%s पहले',\n    s: 'कुछ ही क्षण',\n    m: 'एक मिनट',\n    mm: '%d मिनट',\n    h: 'एक घंटा',\n    hh: '%d घंटे',\n    d: 'एक दिन',\n    dd: '%d दिन',\n    M: 'एक महीने',\n    MM: '%d महीने',\n    y: 'एक वर्ष',\n    yy: '%d वर्ष',\n  },\n  preparse(string) {\n    return string.replace(/[१२३४५६७८९०]/g, match => numberMap[match]);\n  },\n  postformat(string) {\n    return string.replace(/\\d/g, match => symbolMap[match]);\n  },\n  // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n  // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n  meridiemParse: /रात|सुबह|दोपहर|शाम/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'रात') {\n      return hour < 4 ? hour : hour + 12;\n    } else if (meridiem === 'सुबह') {\n      return hour;\n    } else if (meridiem === 'दोपहर') {\n      return hour >= 10 ? hour : hour + 12;\n    } else if (meridiem === 'शाम') {\n      return hour + 12;\n    }\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'रात';\n    } else if (hour < 10) {\n      return 'सुबह';\n    } else if (hour < 17) {\n      return 'दोपहर';\n    } else if (hour < 20) {\n      return 'शाम';\n    }\n    return 'रात';\n  },\n  week: {\n    dow: 0, // Sunday is the first day of the week.\n    doy: 6, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Armenian [hy-am]\n//! author : Armendarabyan : https://github.com/armendarabyan\n/* jshint -W100 */\n\nexport default {\n  months: {\n    format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),\n    standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_'),\n  },\n  monthsShort: 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),\n  weekdays: 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),\n  weekdaysShort: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n  weekdaysMin: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY թ.',\n    LLL: 'D MMMM YYYY թ., HH:mm',\n    LLLL: 'dddd, D MMMM YYYY թ., HH:mm',\n  },\n  calendar: {\n    sameDay: '[այսօր] LT',\n    nextDay: '[վաղը] LT',\n    lastDay: '[երեկ] LT',\n    nextWeek() {\n      return 'dddd [օրը ժամը] LT';\n    },\n    lastWeek() {\n      return '[անցած] dddd [օրը ժամը] LT';\n    },\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s հետո',\n    past: '%s առաջ',\n    s: 'մի քանի վայրկյան',\n    m: 'րոպե',\n    mm: '%d րոպե',\n    h: 'ժամ',\n    hh: '%d ժամ',\n    d: 'օր',\n    dd: '%d օր',\n    M: 'ամիս',\n    MM: '%d ամիս',\n    y: 'տարի',\n    yy: '%d տարի',\n  },\n  meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,\n  isPM(input) {\n    return /^(ցերեկվա|երեկոյան)$/.test(input);\n  },\n  meridiem(hour) {\n    if (hour < 4) {\n      return 'գիշերվա';\n    } else if (hour < 12) {\n      return 'առավոտվա';\n    } else if (hour < 17) {\n      return 'ցերեկվա';\n    }\n    return 'երեկոյան';\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}|\\d{1,2}-(ին|րդ)/,\n  ordinal(number, period) {\n    switch (period) {\n      case 'DDD':\n      case 'w':\n      case 'W':\n      case 'DDDo':\n        if (number === 1) {\n          return `${number}-ին`;\n        }\n        return `${number}-րդ`;\n      default:\n        return number;\n    }\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Indonesian [id]\n//! author : Mohammad Satrio Utomo : https://github.com/tyok\n//! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan\n/* jshint -W100 */\n\nexport default {\n  months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),\n  weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n  weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n  weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n  longDateFormat: {\n    LT: 'HH.mm',\n    LTS: 'HH.mm.ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY [pukul] HH.mm',\n    LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',\n  },\n  meridiemParse: /pagi|siang|sore|malam/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'pagi') {\n      return hour;\n    } else if (meridiem === 'siang') {\n      return hour >= 11 ? hour : hour + 12;\n    } else if (meridiem === 'sore' || meridiem === 'malam') {\n      return hour + 12;\n    }\n  },\n  meridiem(hours, minutes, isLower) {\n    if (hours < 11) {\n      return 'pagi';\n    } else if (hours < 15) {\n      return 'siang';\n    } else if (hours < 19) {\n      return 'sore';\n    }\n    return 'malam';\n  },\n  calendar: {\n    sameDay: '[Hari ini pukul] LT',\n    nextDay: '[Besok pukul] LT',\n    nextWeek: 'dddd [pukul] LT',\n    lastDay: '[Kemarin pukul] LT',\n    lastWeek: 'dddd [lalu pukul] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'dalam %s',\n    past: '%s yang lalu',\n    s: 'beberapa detik',\n    m: 'semenit',\n    mm: '%d menit',\n    h: 'sejam',\n    hh: '%d jam',\n    d: 'sehari',\n    dd: '%d hari',\n    M: 'sebulan',\n    MM: '%d bulan',\n    y: 'setahun',\n    yy: '%d tahun',\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Italian [it]\n//! author : Lorenzo : https://github.com/aliem\n//! author: Mattia Larentis: https://github.com/nostalgiaz\n/* jshint -W100 */\n\nexport default {\n  months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n  monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n  weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n  weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n  weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[Oggi alle] LT',\n    nextDay: '[Domani alle] LT',\n    nextWeek: 'dddd [alle] LT',\n    lastDay: '[Ieri alle] LT',\n    lastWeek() {\n      switch (this.day()) {\n        case 0:\n          return '[la scorsa] dddd [alle] LT';\n        default:\n          return '[lo scorso] dddd [alle] LT';\n      }\n    },\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future(s) {\n      return `${(/^[0-9].+$/).test(s) ? 'tra' : 'in'} ${s}`;\n    },\n    past: '%s fa',\n    s: 'alcuni secondi',\n    m: 'un minuto',\n    mm: '%d minuti',\n    h: 'un\\'ora',\n    hh: '%d ore',\n    d: 'un giorno',\n    dd: '%d giorni',\n    M: 'un mese',\n    MM: '%d mesi',\n    y: 'un anno',\n    yy: '%d anni',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Japanese [ja]\n//! author : LI Long : https://github.com/baryon\n/* jshint -W100 */\n\nexport default {\n  months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n  weekdaysShort: '日_月_火_水_木_金_土'.split('_'),\n  weekdaysMin: '日_月_火_水_木_金_土'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY/MM/DD',\n    LL: 'YYYY年M月D日',\n    LLL: 'YYYY年M月D日 HH:mm',\n    LLLL: 'YYYY年M月D日 HH:mm dddd',\n    l: 'YYYY/MM/DD',\n    ll: 'YYYY年M月D日',\n    lll: 'YYYY年M月D日 HH:mm',\n    llll: 'YYYY年M月D日 HH:mm dddd',\n  },\n  meridiemParse: /午前|午後/i,\n  isPM(input) {\n    return input === '午後';\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return '午前';\n    }\n    return '午後';\n  },\n  calendar: {\n    sameDay: '[今日] LT',\n    nextDay: '[明日] LT',\n    nextWeek: '[来週]dddd LT',\n    lastDay: '[昨日] LT',\n    lastWeek: '[前週]dddd LT',\n    sameElse: 'L',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}日/,\n  ordinal(number, period) {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return `${number}日`;\n      default:\n        return number;\n    }\n  },\n  relativeTime: {\n    future: '%s後',\n    past: '%s前',\n    s: '数秒',\n    m: '1分',\n    mm: '%d分',\n    h: '1時間',\n    hh: '%d時間',\n    d: '1日',\n    dd: '%d日',\n    M: '1ヶ月',\n    MM: '%dヶ月',\n    y: '1年',\n    yy: '%d年',\n  },\n};\n","//! now.js locale configuration\n//! locale : Javanese [jv]\n//! author : Rony Lantip : https://github.com/lantip\n//! reference: http://jv.wikipedia.org/wiki/Basa_Jawa\n/* jshint -W100 */\n\nexport default {\n  months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),\n  weekdays: 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),\n  weekdaysShort: 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),\n  weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),\n  longDateFormat: {\n    LT: 'HH.mm',\n    LTS: 'HH.mm.ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY [pukul] HH.mm',\n    LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',\n  },\n  meridiemParse: /enjing|siyang|sonten|ndalu/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'enjing') {\n      return hour;\n    } else if (meridiem === 'siyang') {\n      return hour >= 11 ? hour : hour + 12;\n    } else if (meridiem === 'sonten' || meridiem === 'ndalu') {\n      return hour + 12;\n    }\n  },\n  meridiem(hours, minutes, isLower) {\n    if (hours < 11) {\n      return 'enjing';\n    } else if (hours < 15) {\n      return 'siyang';\n    } else if (hours < 19) {\n      return 'sonten';\n    }\n    return 'ndalu';\n  },\n  calendar: {\n    sameDay: '[Dinten puniko pukul] LT',\n    nextDay: '[Mbenjang pukul] LT',\n    nextWeek: 'dddd [pukul] LT',\n    lastDay: '[Kala wingi pukul] LT',\n    lastWeek: 'dddd [kepengker pukul] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'wonten ing %s',\n    past: '%s ingkang kepengker',\n    s: 'sawetawis detik',\n    m: 'setunggal menit',\n    mm: '%d menit',\n    h: 'setunggal jam',\n    hh: '%d jam',\n    d: 'sedinten',\n    dd: '%d dinten',\n    M: 'sewulan',\n    MM: '%d wulan',\n    y: 'setaun',\n    yy: '%d taun',\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Georgian [ka]\n//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili\n/* jshint -W100 */\n\nexport default {\n  months: {\n    standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),\n    format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_'),\n  },\n  monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n  weekdays: {\n    standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),\n    format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),\n    isFormat: /(წინა|შემდეგ)/,\n  },\n  weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n  weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY h:mm A',\n    LLLL: 'dddd, D MMMM YYYY h:mm A',\n  },\n  calendar: {\n    sameDay: '[დღეს] LT[-ზე]',\n    nextDay: '[ხვალ] LT[-ზე]',\n    lastDay: '[გუშინ] LT[-ზე]',\n    nextWeek: '[შემდეგ] dddd LT[-ზე]',\n    lastWeek: '[წინა] dddd LT-ზე',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future(s) {\n      return (/(წამი|წუთი|საათი|წელი)/).test(s) ?\n        s.replace(/ი$/, 'ში') :\n        `${s}ში`;\n    },\n    past(s) {\n      if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {\n        return s.replace(/(ი|ე)$/, 'ის უკან');\n      }\n      if ((/წელი/).test(s)) {\n        return s.replace(/წელი$/, 'წლის უკან');\n      }\n    },\n    s: 'რამდენიმე წამი',\n    m: 'წუთი',\n    mm: '%d წუთი',\n    h: 'საათი',\n    hh: '%d საათი',\n    d: 'დღე',\n    dd: '%d დღე',\n    M: 'თვე',\n    MM: '%d თვე',\n    y: 'წელი',\n    yy: '%d წელი',\n  },\n  dayOfMonthOrdinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n  ordinal(number) {\n    if (number === 0) {\n      return number;\n    }\n    if (number === 1) {\n      return `${number}-ლი`;\n    }\n    if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {\n      return `მე-${number}`;\n    }\n    return `${number}-ე`;\n  },\n  week: {\n    dow: 1,\n    doy: 7,\n  },\n};\n","//! now.js locale configuration\n//! locale : Kazakh [kk]\n//! authors : Nurlan Rakhimzhanov : https://github.com/nurlan\n/* jshint -W100 */\n\nconst suffixes = {\n  0: '-ші',\n  1: '-ші',\n  2: '-ші',\n  3: '-ші',\n  4: '-ші',\n  5: '-ші',\n  6: '-шы',\n  7: '-ші',\n  8: '-ші',\n  9: '-шы',\n  10: '-шы',\n  20: '-шы',\n  30: '-шы',\n  40: '-шы',\n  50: '-ші',\n  60: '-шы',\n  70: '-ші',\n  80: '-ші',\n  90: '-шы',\n  100: '-ші',\n};\n\nexport default {\n  months: 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),\n  monthsShort: 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),\n  weekdays: 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),\n  weekdaysShort: 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),\n  weekdaysMin: 'жк_дй_сй_ср_бй_жм_сн'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[Бүгін сағат] LT',\n    nextDay: '[Ертең сағат] LT',\n    nextWeek: 'dddd [сағат] LT',\n    lastDay: '[Кеше сағат] LT',\n    lastWeek: '[Өткен аптаның] dddd [сағат] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s ішінде',\n    past: '%s бұрын',\n    s: 'бірнеше секунд',\n    m: 'бір минут',\n    mm: '%d минут',\n    h: 'бір сағат',\n    hh: '%d сағат',\n    d: 'бір күн',\n    dd: '%d күн',\n    M: 'бір ай',\n    MM: '%d ай',\n    y: 'бір жыл',\n    yy: '%d жыл',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(ші|шы)/,\n  ordinal(number) {\n    const a = number % 10;\n    const b = number >= 100 ? 100 : null;\n    return number + (suffixes[number] || suffixes[a] || suffixes[b]);\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Cambodian [km]\n//! author : Kruy Vanna : https://github.com/kruyvanna\n/* jshint -W100 */\n\nexport default {\n  months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),\n  monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),\n  weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),\n  weekdaysShort: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),\n  weekdaysMin: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',\n    nextDay: '[ស្អែក ម៉ោង] LT',\n    nextWeek: 'dddd [ម៉ោង] LT',\n    lastDay: '[ម្សិលមិញ ម៉ោង] LT',\n    lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%sទៀត',\n    past: '%sមុន',\n    s: 'ប៉ុន្មានវិនាទី',\n    m: 'មួយនាទី',\n    mm: '%d នាទី',\n    h: 'មួយម៉ោង',\n    hh: '%d ម៉ោង',\n    d: 'មួយថ្ងៃ',\n    dd: '%d ថ្ងៃ',\n    M: 'មួយខែ',\n    MM: '%d ខែ',\n    y: 'មួយឆ្នាំ',\n    yy: '%d ឆ្នាំ',\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Kannada [kn]\n//! author : Rajeev Naik : https://github.com/rajeevnaikte\n/* jshint -W100 */\n\nconst symbolMap = {\n  1: '೧',\n  2: '೨',\n  3: '೩',\n  4: '೪',\n  5: '೫',\n  6: '೬',\n  7: '೭',\n  8: '೮',\n  9: '೯',\n  0: '೦',\n};\n\nconst numberMap = {\n  '೧': '1',\n  '೨': '2',\n  '೩': '3',\n  '೪': '4',\n  '೫': '5',\n  '೬': '6',\n  '೭': '7',\n  '೮': '8',\n  '೯': '9',\n  '೦': '0',\n};\n\nexport default {\n  months: 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split('_'),\n  monthsShort: 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬ_ಅಕ್ಟೋಬ_ನವೆಂಬ_ಡಿಸೆಂಬ'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split('_'),\n  weekdaysShort: 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),\n  weekdaysMin: 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm',\n    LTS: 'A h:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY, A h:mm',\n    LLLL: 'dddd, D MMMM YYYY, A h:mm',\n  },\n  calendar: {\n    sameDay: '[ಇಂದು] LT',\n    nextDay: '[ನಾಳೆ] LT',\n    nextWeek: 'dddd, LT',\n    lastDay: '[ನಿನ್ನೆ] LT',\n    lastWeek: '[ಕೊನೆಯ] dddd, LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s ನಂತರ',\n    past: '%s ಹಿಂದೆ',\n    s: 'ಕೆಲವು ಕ್ಷಣಗಳು',\n    m: 'ಒಂದು ನಿಮಿಷ',\n    mm: '%d ನಿಮಿಷ',\n    h: 'ಒಂದು ಗಂಟೆ',\n    hh: '%d ಗಂಟೆ',\n    d: 'ಒಂದು ದಿನ',\n    dd: '%d ದಿನ',\n    M: 'ಒಂದು ತಿಂಗಳು',\n    MM: '%d ತಿಂಗಳು',\n    y: 'ಒಂದು ವರ್ಷ',\n    yy: '%d ವರ್ಷ',\n  },\n  preparse(string) {\n    return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, match => numberMap[match]);\n  },\n  postformat(string) {\n    return string.replace(/\\d/g, match => symbolMap[match]);\n  },\n  meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'ರಾತ್ರಿ') {\n      return hour < 4 ? hour : hour + 12;\n    } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {\n      return hour;\n    } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {\n      return hour >= 10 ? hour : hour + 12;\n    } else if (meridiem === 'ಸಂಜೆ') {\n      return hour + 12;\n    }\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'ರಾತ್ರಿ';\n    } else if (hour < 10) {\n      return 'ಬೆಳಿಗ್ಗೆ';\n    } else if (hour < 17) {\n      return 'ಮಧ್ಯಾಹ್ನ';\n    } else if (hour < 20) {\n      return 'ಸಂಜೆ';\n    }\n    return 'ರಾತ್ರಿ';\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(ನೇ)/,\n  ordinal(number) {\n    return `${number}ನೇ`;\n  },\n  week: {\n    dow: 0, // Sunday is the first day of the week.\n    doy: 6, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Korean [ko]\n//! author : Kyungwook, Park : https://github.com/kyungw00k\n//! author : Jeeeyul Lee <jeeeyul@gmail.com>\n/* jshint -W100 */\n\nexport default {\n  months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n  monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n  weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n  weekdaysShort: '일_월_화_수_목_금_토'.split('_'),\n  weekdaysMin: '일_월_화_수_목_금_토'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm',\n    LTS: 'A h:mm:ss',\n    L: 'YYYY.MM.DD',\n    LL: 'YYYY년 MMMM D일',\n    LLL: 'YYYY년 MMMM D일 A h:mm',\n    LLLL: 'YYYY년 MMMM D일 dddd A h:mm',\n    l: 'YYYY.MM.DD',\n    ll: 'YYYY년 MMMM D일',\n    lll: 'YYYY년 MMMM D일 A h:mm',\n    llll: 'YYYY년 MMMM D일 dddd A h:mm',\n  },\n  calendar: {\n    sameDay: '오늘 LT',\n    nextDay: '내일 LT',\n    nextWeek: 'dddd LT',\n    lastDay: '어제 LT',\n    lastWeek: '지난주 dddd LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s 후',\n    past: '%s 전',\n    s: '몇 초',\n    ss: '%d초',\n    m: '1분',\n    mm: '%d분',\n    h: '한 시간',\n    hh: '%d시간',\n    d: '하루',\n    dd: '%d일',\n    M: '한 달',\n    MM: '%d달',\n    y: '일 년',\n    yy: '%d년',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(일|월|주)/,\n  ordinal(number, period) {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return `${number}일`;\n      case 'M':\n        return `${number}월`;\n      case 'w':\n      case 'W':\n        return `${number}주`;\n      default:\n        return number;\n    }\n  },\n  meridiemParse: /오전|오후/,\n  isPM(token) {\n    return token === '오후';\n  },\n  meridiem(hour, minute, isUpper) {\n    return hour < 12 ? '오전' : '오후';\n  },\n};\n","//! now.js locale configuration\n//! locale : Kyrgyz [ky]\n//! author : Chyngyz Arystan uulu : https://github.com/chyngyz\n/* jshint -W100 */\n\nconst suffixes = {\n  0: '-чү',\n  1: '-чи',\n  2: '-чи',\n  3: '-чү',\n  4: '-чү',\n  5: '-чи',\n  6: '-чы',\n  7: '-чи',\n  8: '-чи',\n  9: '-чу',\n  10: '-чу',\n  20: '-чы',\n  30: '-чу',\n  40: '-чы',\n  50: '-чү',\n  60: '-чы',\n  70: '-чи',\n  80: '-чи',\n  90: '-чу',\n  100: '-чү',\n};\n\nexport default {\n  months: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),\n  monthsShort: 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),\n  weekdays: 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),\n  weekdaysShort: 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),\n  weekdaysMin: 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[Бүгүн саат] LT',\n    nextDay: '[Эртең саат] LT',\n    nextWeek: 'dddd [саат] LT',\n    lastDay: '[Кече саат] LT',\n    lastWeek: '[Өткен аптанын] dddd [күнү] [саат] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s ичинде',\n    past: '%s мурун',\n    s: 'бирнече секунд',\n    m: 'бир мүнөт',\n    mm: '%d мүнөт',\n    h: 'бир саат',\n    hh: '%d саат',\n    d: 'бир күн',\n    dd: '%d күн',\n    M: 'бир ай',\n    MM: '%d ай',\n    y: 'бир жыл',\n    yy: '%d жыл',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(чи|чы|чү|чу)/,\n  ordinal(number) {\n    const a = number % 10;\n    const b = number >= 100 ? 100 : null;\n    return number + (suffixes[number] || suffixes[a] || suffixes[b]);\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Lao [lo]\n//! author : Ryan Hart : https://github.com/ryanhart2\n/* jshint -W100 */\n\nexport default {\n  months: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),\n  monthsShort: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),\n  weekdays: 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),\n  weekdaysShort: 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),\n  weekdaysMin: 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'ວັນdddd D MMMM YYYY HH:mm',\n  },\n  meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,\n  isPM(input) {\n    return input === 'ຕອນແລງ';\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ຕອນເຊົ້າ';\n    }\n    return 'ຕອນແລງ';\n  },\n  calendar: {\n    sameDay: '[ມື້ນີ້ເວລາ] LT',\n    nextDay: '[ມື້ອື່ນເວລາ] LT',\n    nextWeek: '[ວັນ]dddd[ໜ້າເວລາ] LT',\n    lastDay: '[ມື້ວານນີ້ເວລາ] LT',\n    lastWeek: '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'ອີກ %s',\n    past: '%sຜ່ານມາ',\n    s: 'ບໍ່ເທົ່າໃດວິນາທີ',\n    m: '1 ນາທີ',\n    mm: '%d ນາທີ',\n    h: '1 ຊົ່ວໂມງ',\n    hh: '%d ຊົ່ວໂມງ',\n    d: '1 ມື້',\n    dd: '%d ມື້',\n    M: '1 ເດືອນ',\n    MM: '%d ເດືອນ',\n    y: '1 ປີ',\n    yy: '%d ປີ',\n  },\n  dayOfMonthOrdinalParse: /(ທີ່)\\d{1,2}/,\n  ordinal(number) {\n    return `ທີ່${number}`;\n  },\n};\n","//! now.js locale configuration\n//! locale : Montenegrin [me]\n//! author : Miodrag Nikač <miodrag@restartit.me> : https://github.com/miodragnikac\n/* jshint -W100 */\n\nconst translator = {\n  words: { // Different grammatical cases\n    m: ['jedan minut', 'jednog minuta'],\n    mm: ['minut', 'minuta', 'minuta'],\n    h: ['jedan sat', 'jednog sata'],\n    hh: ['sat', 'sata', 'sati'],\n    dd: ['dan', 'dana', 'dana'],\n    MM: ['mjesec', 'mjeseca', 'mjeseci'],\n    yy: ['godina', 'godine', 'godina'],\n  },\n  correctGrammaticalCase(number, wordKey) {\n    return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n  },\n  translate(number, withoutSuffix, key) {\n    const wordKey = translator.words[key];\n    if (key.length === 1) {\n      return withoutSuffix ? wordKey[0] : wordKey[1];\n    }\n    return `${number} ${translator.correctGrammaticalCase(number, wordKey)}`;\n  },\n};\n\nexport default {\n  months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),\n  monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n  weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n  weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd, D. MMMM YYYY H:mm',\n  },\n  calendar: {\n    sameDay: '[danas u] LT',\n    nextDay: '[sjutra u] LT',\n\n    nextWeek() {\n      switch (this.day()) {\n        case 0:\n          return '[u] [nedjelju] [u] LT';\n        case 3:\n          return '[u] [srijedu] [u] LT';\n        case 6:\n          return '[u] [subotu] [u] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[u] dddd [u] LT';\n      }\n    },\n    lastDay: '[juče u] LT',\n    lastWeek() {\n      const lastWeekDays = [\n        '[prošle] [nedjelje] [u] LT',\n        '[prošlog] [ponedjeljka] [u] LT',\n        '[prošlog] [utorka] [u] LT',\n        '[prošle] [srijede] [u] LT',\n        '[prošlog] [četvrtka] [u] LT',\n        '[prošlog] [petka] [u] LT',\n        '[prošle] [subote] [u] LT',\n      ];\n      return lastWeekDays[this.day()];\n    },\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: 'prije %s',\n    s: 'nekoliko sekundi',\n    m: translator.translate,\n    mm: translator.translate,\n    h: translator.translate,\n    hh: translator.translate,\n    d: 'dan',\n    dd: translator.translate,\n    M: 'mjesec',\n    MM: translator.translate,\n    y: 'godinu',\n    yy: translator.translate,\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Maori [mi]\n//! author : John Corrigan <robbiecloset@gmail.com> : https://github.com/johnideal\n/* jshint -W100 */\n\nexport default {\n  months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),\n  monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),\n  monthsRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n  monthsStrictRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n  monthsShortRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n  monthsShortStrictRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,2}/i,\n  weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),\n  weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),\n  weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY [i] HH:mm',\n    LLLL: 'dddd, D MMMM YYYY [i] HH:mm',\n  },\n  calendar: {\n    sameDay: '[i teie mahana, i] LT',\n    nextDay: '[apopo i] LT',\n    nextWeek: 'dddd [i] LT',\n    lastDay: '[inanahi i] LT',\n    lastWeek: 'dddd [whakamutunga i] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'i roto i %s',\n    past: '%s i mua',\n    s: 'te hēkona ruarua',\n    m: 'he meneti',\n    mm: '%d meneti',\n    h: 'te haora',\n    hh: '%d haora',\n    d: 'he ra',\n    dd: '%d ra',\n    M: 'he marama',\n    MM: '%d marama',\n    y: 'he tau',\n    yy: '%d tau',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Macedonian [mk]\n//! author : Borislav Mickov : https://github.com/B0k0\n/* jshint -W100 */\n\nexport default {\n  months: 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),\n  monthsShort: 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),\n  weekdays: 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),\n  weekdaysShort: 'нед_пон_вто_сре_чет_пет_саб'.split('_'),\n  weekdaysMin: 'нe_пo_вт_ср_че_пе_сa'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'D.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY H:mm',\n    LLLL: 'dddd, D MMMM YYYY H:mm',\n  },\n  calendar: {\n    sameDay: '[Денес во] LT',\n    nextDay: '[Утре во] LT',\n    nextWeek: '[Во] dddd [во] LT',\n    lastDay: '[Вчера во] LT',\n    lastWeek() {\n      switch (this.day()) {\n        case 0:\n        case 3:\n        case 6:\n          return '[Изминатата] dddd [во] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[Изминатиот] dddd [во] LT';\n      }\n    },\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'после %s',\n    past: 'пред %s',\n    s: 'неколку секунди',\n    m: 'минута',\n    mm: '%d минути',\n    h: 'час',\n    hh: '%d часа',\n    d: 'ден',\n    dd: '%d дена',\n    M: 'месец',\n    MM: '%d месеци',\n    y: 'година',\n    yy: '%d години',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n  ordinal(number) {\n    const lastDigit = number % 10;\n    const last2Digits = number % 100;\n    if (number === 0) {\n      return `${number}-ев`;\n    } else if (last2Digits === 0) {\n      return `${number}-ен`;\n    } else if (last2Digits > 10 && last2Digits < 20) {\n      return `${number}-ти`;\n    } else if (lastDigit === 1) {\n      return `${number}-ви`;\n    } else if (lastDigit === 2) {\n      return `${number}-ри`;\n    } else if (lastDigit === 7 || lastDigit === 8) {\n      return `${number}-ми`;\n    }\n    return `${number}-ти`;\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Malayalam [ml]\n//! author : Floyd Pink : https://github.com/floydpink\n/* jshint -W100 */\n\nexport default {\n  months: 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),\n  monthsShort: 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),\n  weekdaysShort: 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),\n  weekdaysMin: 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm -നു',\n    LTS: 'A h:mm:ss -നു',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY, A h:mm -നു',\n    LLLL: 'dddd, D MMMM YYYY, A h:mm -നു',\n  },\n  calendar: {\n    sameDay: '[ഇന്ന്] LT',\n    nextDay: '[നാളെ] LT',\n    nextWeek: 'dddd, LT',\n    lastDay: '[ഇന്നലെ] LT',\n    lastWeek: '[കഴിഞ്ഞ] dddd, LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s കഴിഞ്ഞ്',\n    past: '%s മുൻപ്',\n    s: 'അൽപ നിമിഷങ്ങൾ',\n    m: 'ഒരു മിനിറ്റ്',\n    mm: '%d മിനിറ്റ്',\n    h: 'ഒരു മണിക്കൂർ',\n    hh: '%d മണിക്കൂർ',\n    d: 'ഒരു ദിവസം',\n    dd: '%d ദിവസം',\n    M: 'ഒരു മാസം',\n    MM: '%d മാസം',\n    y: 'ഒരു വർഷം',\n    yy: '%d വർഷം',\n  },\n  meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if ((meridiem === 'രാത്രി' && hour >= 4) ||\n      meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||\n      meridiem === 'വൈകുന്നേരം') {\n      return hour + 12;\n    }\n    return hour;\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'രാത്രി';\n    } else if (hour < 12) {\n      return 'രാവിലെ';\n    } else if (hour < 17) {\n      return 'ഉച്ച കഴിഞ്ഞ്';\n    } else if (hour < 20) {\n      return 'വൈകുന്നേരം';\n    }\n    return 'രാത്രി';\n  },\n};\n","//! now.js locale configuration\n//! locale : Malay [ms-my]\n//! note : DEPRECATED, the correct one is [ms]\n//! author : Weldan Jamili : https://github.com/weldan\n/* jshint -W100 */\n\nexport default {\n  months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),\n  monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),\n  weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),\n  weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),\n  weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),\n  longDateFormat: {\n    LT: 'HH.mm',\n    LTS: 'HH.mm.ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY [pukul] HH.mm',\n    LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',\n  },\n  meridiemParse: /pagi|tengahari|petang|malam/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'pagi') {\n      return hour;\n    } else if (meridiem === 'tengahari') {\n      return hour >= 11 ? hour : hour + 12;\n    } else if (meridiem === 'petang' || meridiem === 'malam') {\n      return hour + 12;\n    }\n  },\n  meridiem(hours, minutes, isLower) {\n    if (hours < 11) {\n      return 'pagi';\n    } else if (hours < 15) {\n      return 'tengahari';\n    } else if (hours < 19) {\n      return 'petang';\n    }\n    return 'malam';\n  },\n  calendar: {\n    sameDay: '[Hari ini pukul] LT',\n    nextDay: '[Esok pukul] LT',\n    nextWeek: 'dddd [pukul] LT',\n    lastDay: '[Kelmarin pukul] LT',\n    lastWeek: 'dddd [lepas pukul] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'dalam %s',\n    past: '%s yang lepas',\n    s: 'beberapa saat',\n    m: 'seminit',\n    mm: '%d minit',\n    h: 'sejam',\n    hh: '%d jam',\n    d: 'sehari',\n    dd: '%d hari',\n    M: 'sebulan',\n    MM: '%d bulan',\n    y: 'setahun',\n    yy: '%d tahun',\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Malay [ms]\n//! author : Weldan Jamili : https://github.com/weldan\n/* jshint -W100 */\n\nexport default {\n  months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),\n  monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),\n  weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),\n  weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),\n  weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),\n  longDateFormat: {\n    LT: 'HH.mm',\n    LTS: 'HH.mm.ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY [pukul] HH.mm',\n    LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',\n  },\n  meridiemParse: /pagi|tengahari|petang|malam/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'pagi') {\n      return hour;\n    } else if (meridiem === 'tengahari') {\n      return hour >= 11 ? hour : hour + 12;\n    } else if (meridiem === 'petang' || meridiem === 'malam') {\n      return hour + 12;\n    }\n  },\n  meridiem(hours, minutes, isLower) {\n    if (hours < 11) {\n      return 'pagi';\n    } else if (hours < 15) {\n      return 'tengahari';\n    } else if (hours < 19) {\n      return 'petang';\n    }\n    return 'malam';\n  },\n  calendar: {\n    sameDay: '[Hari ini pukul] LT',\n    nextDay: '[Esok pukul] LT',\n    nextWeek: 'dddd [pukul] LT',\n    lastDay: '[Kelmarin pukul] LT',\n    lastWeek: 'dddd [lepas pukul] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'dalam %s',\n    past: '%s yang lepas',\n    s: 'beberapa saat',\n    m: 'seminit',\n    mm: '%d minit',\n    h: 'sejam',\n    hh: '%d jam',\n    d: 'sehari',\n    dd: '%d hari',\n    M: 'sebulan',\n    MM: '%d bulan',\n    y: 'setahun',\n    yy: '%d tahun',\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Burmese [my]\n//! author : Squar team, mysquar.com\n//! author : David Rossellat : https://github.com/gholadr\n//! author : Tin Aung Lin : https://github.com/thanyawzinmin\n/* jshint -W100 */\n\nconst symbolMap = {\n  1: '၁',\n  2: '၂',\n  3: '၃',\n  4: '၄',\n  5: '၅',\n  6: '၆',\n  7: '၇',\n  8: '၈',\n  9: '၉',\n  0: '၀',\n};\n\nconst numberMap = {\n  '၁': '1',\n  '၂': '2',\n  '၃': '3',\n  '၄': '4',\n  '၅': '5',\n  '၆': '6',\n  '၇': '7',\n  '၈': '8',\n  '၉': '9',\n  '၀': '0',\n};\n\nexport default {\n  months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),\n  monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),\n  weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),\n  weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n  weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[ယနေ.] LT [မှာ]',\n    nextDay: '[မနက်ဖြန်] LT [မှာ]',\n    nextWeek: 'dddd LT [မှာ]',\n    lastDay: '[မနေ.က] LT [မှာ]',\n    lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'လာမည့် %s မှာ',\n    past: 'လွန်ခဲ့သော %s က',\n    s: 'စက္ကန်.အနည်းငယ်',\n    m: 'တစ်မိနစ်',\n    mm: '%d မိနစ်',\n    h: 'တစ်နာရီ',\n    hh: '%d နာရီ',\n    d: 'တစ်ရက်',\n    dd: '%d ရက်',\n    M: 'တစ်လ',\n    MM: '%d လ',\n    y: 'တစ်နှစ်',\n    yy: '%d နှစ်',\n  },\n  preparse(string) {\n    return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, match => numberMap[match]);\n  },\n  postformat(string) {\n    return string.replace(/\\d/g, match => symbolMap[match]);\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Norwegian Bokmål [nb]\n//! authors : Espen Hovlandsdal : https://github.com/rexxars\n//!           Sigurd Gartmann : https://github.com/sigurdga\n/* jshint -W100 */\n\nexport default {\n  months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n  monthsShort: 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n  weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),\n  weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY [kl.] HH:mm',\n    LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm',\n  },\n  calendar: {\n    sameDay: '[i dag kl.] LT',\n    nextDay: '[i morgen kl.] LT',\n    nextWeek: 'dddd [kl.] LT',\n    lastDay: '[i går kl.] LT',\n    lastWeek: '[forrige] dddd [kl.] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: '%s siden',\n    s: 'noen sekunder',\n    m: 'ett minutt',\n    mm: '%d minutter',\n    h: 'en time',\n    hh: '%d timer',\n    d: 'en dag',\n    dd: '%d dager',\n    M: 'en måned',\n    MM: '%d måneder',\n    y: 'ett år',\n    yy: '%d år',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Nepalese [ne]\n//! author : suvash : https://github.com/suvash\n/* jshint -W100 */\n\nconst symbolMap = {\n  1: '१',\n  2: '२',\n  3: '३',\n  4: '४',\n  5: '५',\n  6: '६',\n  7: '७',\n  8: '८',\n  9: '९',\n  0: '०',\n};\n\nconst numberMap = {\n  '१': '1',\n  '२': '2',\n  '३': '3',\n  '४': '4',\n  '५': '5',\n  '६': '6',\n  '७': '7',\n  '८': '8',\n  '९': '9',\n  '०': '0',\n};\n\nexport default {\n  months: 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),\n  monthsShort: 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),\n  weekdaysShort: 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),\n  weekdaysMin: 'आ._सो._मं._बु._बि._शु._श.'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'Aको h:mm बजे',\n    LTS: 'Aको h:mm:ss बजे',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY, Aको h:mm बजे',\n    LLLL: 'dddd, D MMMM YYYY, Aको h:mm बजे',\n  },\n  preparse(string) {\n    return string.replace(/[१२३४५६७८९०]/g, match => numberMap[match]);\n  },\n  postformat(string) {\n    return string.replace(/\\d/g, match => symbolMap[match]);\n  },\n  meridiemParse: /राति|बिहान|दिउँसो|साँझ/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'राति') {\n      return hour < 4 ? hour : hour + 12;\n    } else if (meridiem === 'बिहान') {\n      return hour;\n    } else if (meridiem === 'दिउँसो') {\n      return hour >= 10 ? hour : hour + 12;\n    } else if (meridiem === 'साँझ') {\n      return hour + 12;\n    }\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 3) {\n      return 'राति';\n    } else if (hour < 12) {\n      return 'बिहान';\n    } else if (hour < 16) {\n      return 'दिउँसो';\n    } else if (hour < 20) {\n      return 'साँझ';\n    }\n    return 'राति';\n  },\n  calendar: {\n    sameDay: '[आज] LT',\n    nextDay: '[भोलि] LT',\n    nextWeek: '[आउँदो] dddd[,] LT',\n    lastDay: '[हिजो] LT',\n    lastWeek: '[गएको] dddd[,] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%sमा',\n    past: '%s अगाडि',\n    s: 'केही क्षण',\n    m: 'एक मिनेट',\n    mm: '%d मिनेट',\n    h: 'एक घण्टा',\n    hh: '%d घण्टा',\n    d: 'एक दिन',\n    dd: '%d दिन',\n    M: 'एक महिना',\n    MM: '%d महिना',\n    y: 'एक बर्ष',\n    yy: '%d बर्ष',\n  },\n  week: {\n    dow: 0, // Sunday is the first day of the week.\n    doy: 6, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Dutch (Belgium) [nl-be]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\n/* jshint -W100 */\n\nconst monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');\nconst monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n\nconst monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\nconst monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\nexport default {\n  months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n  monthsShort(m, format) {\n    if (!m) {\n      return monthsShortWithDots;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShortWithoutDots[m.month()];\n    }\n    return monthsShortWithDots[m.month()];\n  },\n\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n\n  weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n  weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n  weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[vandaag om] LT',\n    nextDay: '[morgen om] LT',\n    nextWeek: 'dddd [om] LT',\n    lastDay: '[gisteren om] LT',\n    lastWeek: '[afgelopen] dddd [om] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'over %s',\n    past: '%s geleden',\n    s: 'een paar seconden',\n    m: 'één minuut',\n    mm: '%d minuten',\n    h: 'één uur',\n    hh: '%d uur',\n    d: 'één dag',\n    dd: '%d dagen',\n    M: 'één maand',\n    MM: '%d maanden',\n    y: 'één jaar',\n    yy: '%d jaar',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n  ordinal(number) {\n    return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Dutch [nl]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\n/* jshint -W100 */\n\nconst monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');\nconst monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n\nconst monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\nconst monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\nexport default {\n  months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n  monthsShort(m, format) {\n    if (!m) {\n      return monthsShortWithDots;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShortWithoutDots[m.month()];\n    }\n    return monthsShortWithDots[m.month()];\n  },\n\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n\n  weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n  weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n  weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD-MM-YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[vandaag om] LT',\n    nextDay: '[morgen om] LT',\n    nextWeek: 'dddd [om] LT',\n    lastDay: '[gisteren om] LT',\n    lastWeek: '[afgelopen] dddd [om] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'over %s',\n    past: '%s geleden',\n    s: 'een paar seconden',\n    m: 'één minuut',\n    mm: '%d minuten',\n    h: 'één uur',\n    hh: '%d uur',\n    d: 'één dag',\n    dd: '%d dagen',\n    M: 'één maand',\n    MM: '%d maanden',\n    y: 'één jaar',\n    yy: '%d jaar',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n  ordinal(number) {\n    return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Nynorsk [nn]\n//! author : https://github.com/mechuwind\n/* jshint -W100 */\n\nexport default {\n  months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n  monthsShort: 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n  weekdays: 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),\n  weekdaysShort: 'sun_mån_tys_ons_tor_fre_lau'.split('_'),\n  weekdaysMin: 'su_må_ty_on_to_fr_lø'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY [kl.] H:mm',\n    LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm',\n  },\n  calendar: {\n    sameDay: '[I dag klokka] LT',\n    nextDay: '[I morgon klokka] LT',\n    nextWeek: 'dddd [klokka] LT',\n    lastDay: '[I går klokka] LT',\n    lastWeek: '[Føregåande] dddd [klokka] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: '%s sidan',\n    s: 'nokre sekund',\n    m: 'eit minutt',\n    mm: '%d minutt',\n    h: 'ein time',\n    hh: '%d timar',\n    d: 'ein dag',\n    dd: '%d dagar',\n    M: 'ein månad',\n    MM: '%d månader',\n    y: 'eit år',\n    yy: '%d år',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Punjabi (India) [pa-in]\n//! author : Harpreet Singh : https://github.com/harpreetkhalsagtbit\n/* jshint -W100 */\n\nconst symbolMap = {\n  1: '੧',\n  2: '੨',\n  3: '੩',\n  4: '੪',\n  5: '੫',\n  6: '੬',\n  7: '੭',\n  8: '੮',\n  9: '੯',\n  0: '੦',\n};\n\nconst numberMap = {\n  '੧': '1',\n  '੨': '2',\n  '੩': '3',\n  '੪': '4',\n  '੫': '5',\n  '੬': '6',\n  '੭': '7',\n  '੮': '8',\n  '੯': '9',\n  '੦': '0',\n};\n\nexport default {\n  // There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.\n  months: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),\n  monthsShort: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),\n  weekdays: 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),\n  weekdaysShort: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),\n  weekdaysMin: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm ਵਜੇ',\n    LTS: 'A h:mm:ss ਵਜੇ',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY, A h:mm ਵਜੇ',\n    LLLL: 'dddd, D MMMM YYYY, A h:mm ਵਜੇ',\n  },\n  calendar: {\n    sameDay: '[ਅਜ] LT',\n    nextDay: '[ਕਲ] LT',\n    nextWeek: 'dddd, LT',\n    lastDay: '[ਕਲ] LT',\n    lastWeek: '[ਪਿਛਲੇ] dddd, LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s ਵਿੱਚ',\n    past: '%s ਪਿਛਲੇ',\n    s: 'ਕੁਝ ਸਕਿੰਟ',\n    m: 'ਇਕ ਮਿੰਟ',\n    mm: '%d ਮਿੰਟ',\n    h: 'ਇੱਕ ਘੰਟਾ',\n    hh: '%d ਘੰਟੇ',\n    d: 'ਇੱਕ ਦਿਨ',\n    dd: '%d ਦਿਨ',\n    M: 'ਇੱਕ ਮਹੀਨਾ',\n    MM: '%d ਮਹੀਨੇ',\n    y: 'ਇੱਕ ਸਾਲ',\n    yy: '%d ਸਾਲ',\n  },\n  preparse(string) {\n    return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, match => numberMap[match]);\n  },\n  postformat(string) {\n    return string.replace(/\\d/g, match => symbolMap[match]);\n  },\n  // Punjabi notation for meridiems are quite fuzzy in practice. While there exists\n  // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.\n  meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'ਰਾਤ') {\n      return hour < 4 ? hour : hour + 12;\n    } else if (meridiem === 'ਸਵੇਰ') {\n      return hour;\n    } else if (meridiem === 'ਦੁਪਹਿਰ') {\n      return hour >= 10 ? hour : hour + 12;\n    } else if (meridiem === 'ਸ਼ਾਮ') {\n      return hour + 12;\n    }\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'ਰਾਤ';\n    } else if (hour < 10) {\n      return 'ਸਵੇਰ';\n    } else if (hour < 17) {\n      return 'ਦੁਪਹਿਰ';\n    } else if (hour < 20) {\n      return 'ਸ਼ਾਮ';\n    }\n    return 'ਰਾਤ';\n  },\n  week: {\n    dow: 0, // Sunday is the first day of the week.\n    doy: 6, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Portuguese (Brazil) [pt-br]\n//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira\n/* jshint -W100 */\n\nexport default {\n  months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),\n  monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),\n  weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\n  weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n  weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm',\n  },\n  calendar: {\n    sameDay: '[Hoje às] LT',\n    nextDay: '[Amanhã às] LT',\n    nextWeek: 'dddd [às] LT',\n    lastDay: '[Ontem às] LT',\n    lastWeek() {\n      return (this.day() === 0 || this.day() === 6) ?\n        '[Último] dddd [às] LT' : // Saturday + Sunday\n        '[Última] dddd [às] LT'; // Monday - Friday\n    },\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'em %s',\n    past: '%s atrás',\n    s: 'poucos segundos',\n    ss: '%d segundos',\n    m: 'um minuto',\n    mm: '%d minutos',\n    h: 'uma hora',\n    hh: '%d horas',\n    d: 'um dia',\n    dd: '%d dias',\n    M: 'um mês',\n    MM: '%d meses',\n    y: 'um ano',\n    yy: '%d anos',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n};\n","//! now.js locale configuration\n//! locale : Portuguese [pt]\n//! author : Jefferson : https://github.com/jalex79\n/* jshint -W100 */\n\nexport default {\n  months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),\n  monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),\n  weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\n  weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n  weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY HH:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[Hoje às] LT',\n    nextDay: '[Amanhã às] LT',\n    nextWeek: 'dddd [às] LT',\n    lastDay: '[Ontem às] LT',\n    lastWeek() {\n      return (this.day() === 0 || this.day() === 6) ?\n        '[Último] dddd [às] LT' : // Saturday + Sunday\n        '[Última] dddd [às] LT'; // Monday - Friday\n    },\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'em %s',\n    past: 'há %s',\n    s: 'segundos',\n    m: 'um minuto',\n    mm: '%d minutos',\n    h: 'uma hora',\n    hh: '%d horas',\n    d: 'um dia',\n    dd: '%d dias',\n    M: 'um mês',\n    MM: '%d meses',\n    y: 'um ano',\n    yy: '%d anos',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Sindhi [sd]\n//! author : Narain Sagar : https://github.com/narainsagar\n/* jshint -W100 */\n\nconst months = [\n  'جنوري',\n  'فيبروري',\n  'مارچ',\n  'اپريل',\n  'مئي',\n  'جون',\n  'جولاءِ',\n  'آگسٽ',\n  'سيپٽمبر',\n  'آڪٽوبر',\n  'نومبر',\n  'ڊسمبر',\n];\nconst days = [\n  'آچر',\n  'سومر',\n  'اڱارو',\n  'اربع',\n  'خميس',\n  'جمع',\n  'ڇنڇر',\n];\n\nexport default {\n  months,\n  monthsShort: months,\n  weekdays: days,\n  weekdaysShort: days,\n  weekdaysMin: days,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd، D MMMM YYYY HH:mm',\n  },\n  meridiemParse: /صبح|شام/,\n  isPM(input) {\n    return input === 'شام';\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'صبح';\n    }\n    return 'شام';\n  },\n  calendar: {\n    sameDay: '[اڄ] LT',\n    nextDay: '[سڀاڻي] LT',\n    nextWeek: 'dddd [اڳين هفتي تي] LT',\n    lastDay: '[ڪالهه] LT',\n    lastWeek: '[گزريل هفتي] dddd [تي] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s پوء',\n    past: '%s اڳ',\n    s: 'چند سيڪنڊ',\n    m: 'هڪ منٽ',\n    mm: '%d منٽ',\n    h: 'هڪ ڪلاڪ',\n    hh: '%d ڪلاڪ',\n    d: 'هڪ ڏينهن',\n    dd: '%d ڏينهن',\n    M: 'هڪ مهينو',\n    MM: '%d مهينا',\n    y: 'هڪ سال',\n    yy: '%d سال',\n  },\n  preparse(string) {\n    return string.replace(/،/g, ',');\n  },\n  postformat(string) {\n    return string.replace(/,/g, '،');\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Northern Sami [se]\n//! authors : Bård Rolstad Henriksen : https://github.com/karamell\n/* jshint -W100 */\n\nexport default {\n  months: 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),\n  monthsShort: 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),\n  weekdays: 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),\n  weekdaysShort: 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),\n  weekdaysMin: 's_v_m_g_d_b_L'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'MMMM D. [b.] YYYY',\n    LLL: 'MMMM D. [b.] YYYY [ti.] HH:mm',\n    LLLL: 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm',\n  },\n  calendar: {\n    sameDay: '[otne ti] LT',\n    nextDay: '[ihttin ti] LT',\n    nextWeek: 'dddd [ti] LT',\n    lastDay: '[ikte ti] LT',\n    lastWeek: '[ovddit] dddd [ti] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s geažes',\n    past: 'maŋit %s',\n    s: 'moadde sekunddat',\n    m: 'okta minuhta',\n    mm: '%d minuhtat',\n    h: 'okta diimmu',\n    hh: '%d diimmut',\n    d: 'okta beaivi',\n    dd: '%d beaivvit',\n    M: 'okta mánnu',\n    MM: '%d mánut',\n    y: 'okta jahki',\n    yy: '%d jagit',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Sinhalese [si]\n//! author : Sampath Sitinamaluwa : https://github.com/sampathsris\n/* jshint -W100 */\n\nexport default {\n  months: 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),\n  monthsShort: 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),\n  weekdays: 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),\n  weekdaysShort: 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),\n  weekdaysMin: 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'a h:mm',\n    LTS: 'a h:mm:ss',\n    L: 'YYYY/MM/DD',\n    LL: 'YYYY MMMM D',\n    LLL: 'YYYY MMMM D, a h:mm',\n    LLLL: 'YYYY MMMM D [වැනි] dddd, a h:mm:ss',\n  },\n  calendar: {\n    sameDay: '[අද] LT[ට]',\n    nextDay: '[හෙට] LT[ට]',\n    nextWeek: 'dddd LT[ට]',\n    lastDay: '[ඊයේ] LT[ට]',\n    lastWeek: '[පසුගිය] dddd LT[ට]',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%sකින්',\n    past: '%sකට පෙර',\n    s: 'තත්පර කිහිපය',\n    m: 'මිනිත්තුව',\n    mm: 'මිනිත්තු %d',\n    h: 'පැය',\n    hh: 'පැය %d',\n    d: 'දිනය',\n    dd: 'දින %d',\n    M: 'මාසය',\n    MM: 'මාස %d',\n    y: 'වසර',\n    yy: 'වසර %d',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2} වැනි/,\n  ordinal(number) {\n    return `${number} වැනි`;\n  },\n  meridiemParse: /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,\n  isPM(input) {\n    return input === 'ප.ව.' || input === 'පස් වරු';\n  },\n  meridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'ප.ව.' : 'පස් වරු';\n    }\n    return isLower ? 'පෙ.ව.' : 'පෙර වරු';\n  },\n};\n","//! now.js locale configuration\n//! locale : Albanian [sq]\n//! author : Flakërim Ismani : https://github.com/flakerimi\n//! author : Menelion Elensúle : https://github.com/Oire\n//! author : Oerd Cukalla : https://github.com/oerd\n/* jshint -W100 */\n\nexport default {\n  months: 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),\n  monthsShort: 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),\n  weekdays: 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),\n  weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),\n  weekdaysMin: 'D_H_Ma_Më_E_P_Sh'.split('_'),\n  weekdaysParseExact: true,\n  meridiemParse: /PD|MD/,\n  isPM(input) {\n    return input.charAt(0) === 'M';\n  },\n  meridiem(hours, minutes, isLower) {\n    return hours < 12 ? 'PD' : 'MD';\n  },\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[Sot në] LT',\n    nextDay: '[Nesër në] LT',\n    nextWeek: 'dddd [në] LT',\n    lastDay: '[Dje në] LT',\n    lastWeek: 'dddd [e kaluar në] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'në %s',\n    past: '%s më parë',\n    s: 'disa sekonda',\n    m: 'një minutë',\n    mm: '%d minuta',\n    h: 'një orë',\n    hh: '%d orë',\n    d: 'një ditë',\n    dd: '%d ditë',\n    M: 'një muaj',\n    MM: '%d muaj',\n    y: 'një vit',\n    yy: '%d vite',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Serbian Cyrillic [sr-cyrl]\n//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j\n/* jshint -W100 */\n\nconst translator = {\n  words: { // Different grammatical cases\n    m: ['један минут', 'једне минуте'],\n    mm: ['минут', 'минуте', 'минута'],\n    h: ['један сат', 'једног сата'],\n    hh: ['сат', 'сата', 'сати'],\n    dd: ['дан', 'дана', 'дана'],\n    MM: ['месец', 'месеца', 'месеци'],\n    yy: ['година', 'године', 'година'],\n  },\n  correctGrammaticalCase(number, wordKey) {\n    return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n  },\n  translate(number, withoutSuffix, key) {\n    const wordKey = translator.words[key];\n    if (key.length === 1) {\n      return withoutSuffix ? wordKey[0] : wordKey[1];\n    }\n    return `${number} ${translator.correctGrammaticalCase(number, wordKey)}`;\n  },\n};\n\nexport default {\n  months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),\n  monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),\n  weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),\n  weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd, D. MMMM YYYY H:mm',\n  },\n  calendar: {\n    sameDay: '[данас у] LT',\n    nextDay: '[сутра у] LT',\n    nextWeek() {\n      switch (this.day()) {\n        case 0:\n          return '[у] [недељу] [у] LT';\n        case 3:\n          return '[у] [среду] [у] LT';\n        case 6:\n          return '[у] [суботу] [у] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[у] dddd [у] LT';\n      }\n    },\n    lastDay: '[јуче у] LT',\n    lastWeek() {\n      const lastWeekDays = [\n        '[прошле] [недеље] [у] LT',\n        '[прошлог] [понедељка] [у] LT',\n        '[прошлог] [уторка] [у] LT',\n        '[прошле] [среде] [у] LT',\n        '[прошлог] [четвртка] [у] LT',\n        '[прошлог] [петка] [у] LT',\n        '[прошле] [суботе] [у] LT',\n      ];\n      return lastWeekDays[this.day()];\n    },\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'за %s',\n    past: 'пре %s',\n    s: 'неколико секунди',\n    m: translator.translate,\n    mm: translator.translate,\n    h: translator.translate,\n    hh: translator.translate,\n    d: 'дан',\n    dd: translator.translate,\n    M: 'месец',\n    MM: translator.translate,\n    y: 'годину',\n    yy: translator.translate,\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Serbian [sr]\n//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j\n/* jshint -W100 */\n\nconst translator = {\n  words: { // Different grammatical cases\n    m: ['jedan minut', 'jedne minute'],\n    mm: ['minut', 'minute', 'minuta'],\n    h: ['jedan sat', 'jednog sata'],\n    hh: ['sat', 'sata', 'sati'],\n    dd: ['dan', 'dana', 'dana'],\n    MM: ['mesec', 'meseca', 'meseci'],\n    yy: ['godina', 'godine', 'godina'],\n  },\n  correctGrammaticalCase(number, wordKey) {\n    return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n  },\n  translate(number, withoutSuffix, key) {\n    const wordKey = translator.words[key];\n    if (key.length === 1) {\n      return withoutSuffix ? wordKey[0] : wordKey[1];\n    }\n    return `${number} ${translator.correctGrammaticalCase(number, wordKey)}`;\n  },\n};\n\nexport default {\n  months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),\n  monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),\n  weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),\n  weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd, D. MMMM YYYY H:mm',\n  },\n  calendar: {\n    sameDay: '[danas u] LT',\n    nextDay: '[sutra u] LT',\n    nextWeek() {\n      switch (this.day()) {\n        case 0:\n          return '[u] [nedelju] [u] LT';\n        case 3:\n          return '[u] [sredu] [u] LT';\n        case 6:\n          return '[u] [subotu] [u] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[u] dddd [u] LT';\n      }\n    },\n    lastDay: '[juče u] LT',\n    lastWeek() {\n      const lastWeekDays = [\n        '[prošle] [nedelje] [u] LT',\n        '[prošlog] [ponedeljka] [u] LT',\n        '[prošlog] [utorka] [u] LT',\n        '[prošle] [srede] [u] LT',\n        '[prošlog] [četvrtka] [u] LT',\n        '[prošlog] [petka] [u] LT',\n        '[prošle] [subote] [u] LT',\n      ];\n      return lastWeekDays[this.day()];\n    },\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: 'pre %s',\n    s: 'nekoliko sekundi',\n    m: translator.translate,\n    mm: translator.translate,\n    h: translator.translate,\n    hh: translator.translate,\n    d: 'dan',\n    dd: translator.translate,\n    M: 'mesec',\n    MM: translator.translate,\n    y: 'godinu',\n    yy: translator.translate,\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : siSwati [ss]\n//! author : Nicolai Davies<mail@nicolai.io> : https://github.com/nicolaidavies\n/* jshint -W100 */\n\nexport default {\n  months: \"Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni\".split('_'),\n  monthsShort: 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),\n  weekdays: 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),\n  weekdaysShort: 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),\n  weekdaysMin: 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY h:mm A',\n    LLLL: 'dddd, D MMMM YYYY h:mm A',\n  },\n  calendar: {\n    sameDay: '[Namuhla nga] LT',\n    nextDay: '[Kusasa nga] LT',\n    nextWeek: 'dddd [nga] LT',\n    lastDay: '[Itolo nga] LT',\n    lastWeek: 'dddd [leliphelile] [nga] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'nga %s',\n    past: 'wenteka nga %s',\n    s: 'emizuzwana lomcane',\n    m: 'umzuzu',\n    mm: '%d emizuzu',\n    h: 'lihora',\n    hh: '%d emahora',\n    d: 'lilanga',\n    dd: '%d emalanga',\n    M: 'inyanga',\n    MM: '%d tinyanga',\n    y: 'umnyaka',\n    yy: '%d iminyaka',\n  },\n  meridiemParse: /ekuseni|emini|entsambama|ebusuku/,\n  meridiem(hours, minutes, isLower) {\n    if (hours < 11) {\n      return 'ekuseni';\n    } else if (hours < 15) {\n      return 'emini';\n    } else if (hours < 19) {\n      return 'entsambama';\n    }\n    return 'ebusuku';\n  },\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'ekuseni') {\n      return hour;\n    } else if (meridiem === 'emini') {\n      return hour >= 11 ? hour : hour + 12;\n    } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {\n      if (hour === 0) {\n        return 0;\n      }\n      return hour + 12;\n    }\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}/,\n  ordinal: '%d',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Swedish [sv]\n//! author : Jens Alm : https://github.com/ulmus\n/* jshint -W100 */\n\nexport default {\n  months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\n  monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n  weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\n  weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\n  weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY [kl.] HH:mm',\n    LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd D MMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[Idag] LT',\n    nextDay: '[Imorgon] LT',\n    lastDay: '[Igår] LT',\n    nextWeek: '[På] dddd LT',\n    lastWeek: '[I] dddd[s] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: 'för %s sedan',\n    s: 'några sekunder',\n    m: 'en minut',\n    mm: '%d minuter',\n    h: 'en timme',\n    hh: '%d timmar',\n    d: 'en dag',\n    dd: '%d dagar',\n    M: 'en månad',\n    MM: '%d månader',\n    y: 'ett år',\n    yy: '%d år',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(e|a)/,\n  ordinal(number) {\n    const b = number % 10;\n    const output = (~~(number % 100 / 10) === 1) ? 'e' :\n      (b === 1) ? 'a' :\n        (b === 2) ? 'a' :\n          (b === 3) ? 'e' : 'e';\n    return number + output;\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Swahili [sw]\n//! author : Fahad Kassim : https://github.com/fadsel\n/* jshint -W100 */\n\nexport default {\n  months: 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),\n  monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),\n  weekdays: 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),\n  weekdaysShort: 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),\n  weekdaysMin: 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[leo saa] LT',\n    nextDay: '[kesho saa] LT',\n    nextWeek: '[wiki ijayo] dddd [saat] LT',\n    lastDay: '[jana] LT',\n    lastWeek: '[wiki iliyopita] dddd [saat] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s baadaye',\n    past: 'tokea %s',\n    s: 'hivi punde',\n    m: 'dakika moja',\n    mm: 'dakika %d',\n    h: 'saa limoja',\n    hh: 'masaa %d',\n    d: 'siku moja',\n    dd: 'masiku %d',\n    M: 'mwezi mmoja',\n    MM: 'miezi %d',\n    y: 'mwaka mmoja',\n    yy: 'miaka %d',\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Tamil [ta]\n//! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404\n/* jshint -W100 */\n\nconst symbolMap = {\n  1: '௧',\n  2: '௨',\n  3: '௩',\n  4: '௪',\n  5: '௫',\n  6: '௬',\n  7: '௭',\n  8: '௮',\n  9: '௯',\n  0: '௦',\n};\n\nconst numberMap = {\n  '௧': '1',\n  '௨': '2',\n  '௩': '3',\n  '௪': '4',\n  '௫': '5',\n  '௬': '6',\n  '௭': '7',\n  '௮': '8',\n  '௯': '9',\n  '௦': '0',\n};\n\nexport default {\n  months: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),\n  monthsShort: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),\n  weekdays: 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),\n  weekdaysShort: 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),\n  weekdaysMin: 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY, HH:mm',\n    LLLL: 'dddd, D MMMM YYYY, HH:mm',\n  },\n  calendar: {\n    sameDay: '[இன்று] LT',\n    nextDay: '[நாளை] LT',\n    nextWeek: 'dddd, LT',\n    lastDay: '[நேற்று] LT',\n    lastWeek: '[கடந்த வாரம்] dddd, LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s இல்',\n    past: '%s முன்',\n    s: 'ஒரு சில விநாடிகள்',\n    m: 'ஒரு நிமிடம்',\n    mm: '%d நிமிடங்கள்',\n    h: 'ஒரு மணி நேரம்',\n    hh: '%d மணி நேரம்',\n    d: 'ஒரு நாள்',\n    dd: '%d நாட்கள்',\n    M: 'ஒரு மாதம்',\n    MM: '%d மாதங்கள்',\n    y: 'ஒரு வருடம்',\n    yy: '%d ஆண்டுகள்',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}வது/,\n  ordinal(number) {\n    return `${number}வது`;\n  },\n  preparse(string) {\n    return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, match => numberMap[match]);\n  },\n  postformat(string) {\n    return string.replace(/\\d/g, match => symbolMap[match]);\n  },\n  // refer http://ta.wikipedia.org/s/1er1\n  meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,\n  meridiem(hour, minute, isLower) {\n    if (hour < 2) {\n      return ' யாமம்';\n    } else if (hour < 6) {\n      return ' வைகறை'; // வைகறை\n    } else if (hour < 10) {\n      return ' காலை'; // காலை\n    } else if (hour < 14) {\n      return ' நண்பகல்'; // நண்பகல்\n    } else if (hour < 18) {\n      return ' எற்பாடு'; // எற்பாடு\n    } else if (hour < 22) {\n      return ' மாலை'; // மாலை\n    }\n    return ' யாமம்';\n  },\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'யாமம்') {\n      return hour < 2 ? hour : hour + 12;\n    } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {\n      return hour;\n    } else if (meridiem === 'நண்பகல்') {\n      return hour >= 10 ? hour : hour + 12;\n    }\n    return hour + 12;\n  },\n  week: {\n    dow: 0, // Sunday is the first day of the week.\n    doy: 6, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Telugu [te]\n//! author : Krishna Chaitanya Thota : https://github.com/kcthota\n/* jshint -W100 */\n\nexport default {\n  months: 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),\n  monthsShort: 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),\n  weekdaysShort: 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),\n  weekdaysMin: 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm',\n    LTS: 'A h:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY, A h:mm',\n    LLLL: 'dddd, D MMMM YYYY, A h:mm',\n  },\n  calendar: {\n    sameDay: '[నేడు] LT',\n    nextDay: '[రేపు] LT',\n    nextWeek: 'dddd, LT',\n    lastDay: '[నిన్న] LT',\n    lastWeek: '[గత] dddd, LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s లో',\n    past: '%s క్రితం',\n    s: 'కొన్ని క్షణాలు',\n    m: 'ఒక నిమిషం',\n    mm: '%d నిమిషాలు',\n    h: 'ఒక గంట',\n    hh: '%d గంటలు',\n    d: 'ఒక రోజు',\n    dd: '%d రోజులు',\n    M: 'ఒక నెల',\n    MM: '%d నెలలు',\n    y: 'ఒక సంవత్సరం',\n    yy: '%d సంవత్సరాలు',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}వ/,\n  ordinal: '%dవ',\n  meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'రాత్రి') {\n      return hour < 4 ? hour : hour + 12;\n    } else if (meridiem === 'ఉదయం') {\n      return hour;\n    } else if (meridiem === 'మధ్యాహ్నం') {\n      return hour >= 10 ? hour : hour + 12;\n    } else if (meridiem === 'సాయంత్రం') {\n      return hour + 12;\n    }\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'రాత్రి';\n    } else if (hour < 10) {\n      return 'ఉదయం';\n    } else if (hour < 17) {\n      return 'మధ్యాహ్నం';\n    } else if (hour < 20) {\n      return 'సాయంత్రం';\n    }\n    return 'రాత్రి';\n  },\n  week: {\n    dow: 0, // Sunday is the first day of the week.\n    doy: 6, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Tetun Dili (East Timor) [tet]\n//! author : Joshua Brooks : https://github.com/joshbrooks\n//! author : Onorio De J. Afonso : https://github.com/marobo\n/* jshint -W100 */\n\nexport default {\n  months: 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juniu_Juliu_Augustu_Setembru_Outubru_Novembru_Dezembru'.split('_'),\n  monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Aug_Set_Out_Nov_Dez'.split('_'),\n  weekdays: 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sexta_Sabadu'.split('_'),\n  weekdaysShort: 'Dom_Seg_Ters_Kua_Kint_Sext_Sab'.split('_'),\n  weekdaysMin: 'Do_Seg_Te_Ku_Ki_Sex_Sa'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[Ohin iha] LT',\n    nextDay: '[Aban iha] LT',\n    nextWeek: 'dddd [iha] LT',\n    lastDay: '[Horiseik iha] LT',\n    lastWeek: 'dddd [semana kotuk] [iha] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'iha %s',\n    past: '%s liuba',\n    s: 'minutu balun',\n    m: 'minutu ida',\n    mm: 'minutus %d',\n    h: 'horas ida',\n    hh: 'horas %d',\n    d: 'loron ida',\n    dd: 'loron %d',\n    M: 'fulan ida',\n    MM: 'fulan %d',\n    y: 'tinan ida',\n    yy: 'tinan %d',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n  ordinal(number) {\n    const b = number % 10;\n    const output = (~~(number % 100 / 10) === 1) ? 'th' :\n      (b === 1) ? 'st' :\n        (b === 2) ? 'nd' :\n          (b === 3) ? 'rd' : 'th';\n    return number + output;\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Thai [th]\n//! author : Kridsada Thanabulpong : https://github.com/sirn\n/* jshint -W100 */\n\nexport default {\n  months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n  monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n  weekdaysShort: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference\n  weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY เวลา H:mm',\n    LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm',\n  },\n  meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n  isPM(input) {\n    return input === 'หลังเที่ยง';\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ก่อนเที่ยง';\n    }\n    return 'หลังเที่ยง';\n  },\n  calendar: {\n    sameDay: '[วันนี้ เวลา] LT',\n    nextDay: '[พรุ่งนี้ เวลา] LT',\n    nextWeek: 'dddd[หน้า เวลา] LT',\n    lastDay: '[เมื่อวานนี้ เวลา] LT',\n    lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'อีก %s',\n    past: '%sที่แล้ว',\n    s: 'ไม่กี่วินาที',\n    m: '1 นาที',\n    mm: '%d นาที',\n    h: '1 ชั่วโมง',\n    hh: '%d ชั่วโมง',\n    d: '1 วัน',\n    dd: '%d วัน',\n    M: '1 เดือน',\n    MM: '%d เดือน',\n    y: '1 ปี',\n    yy: '%d ปี',\n  },\n};\n","//! now.js locale configuration\n//! locale : Tagalog (Philippines) [tl-ph]\n//! author : Dan Hagman : https://github.com/hagmandan\n/* jshint -W100 */\n\nexport default {\n  months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),\n  monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),\n  weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),\n  weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),\n  weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'MM/D/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY HH:mm',\n    LLLL: 'dddd, MMMM DD, YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: 'LT [ngayong araw]',\n    nextDay: '[Bukas ng] LT',\n    nextWeek: 'LT [sa susunod na] dddd',\n    lastDay: 'LT [kahapon]',\n    lastWeek: 'LT [noong nakaraang] dddd',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'sa loob ng %s',\n    past: '%s ang nakalipas',\n    s: 'ilang segundo',\n    m: 'isang minuto',\n    mm: '%d minuto',\n    h: 'isang oras',\n    hh: '%d oras',\n    d: 'isang araw',\n    dd: '%d araw',\n    M: 'isang buwan',\n    MM: '%d buwan',\n    y: 'isang taon',\n    yy: '%d taon',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}/,\n  ordinal(number) {\n    return number;\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Turkish [tr]\n//! authors : Erhan Gundogan : https://github.com/erhangundogan,\n//!           Burak Yiğit Kaya: https://github.com/BYK\n/* jshint -W100 */\n\nconst suffixes = {\n  1: '\\'inci',\n  5: '\\'inci',\n  8: '\\'inci',\n  70: '\\'inci',\n  80: '\\'inci',\n  2: '\\'nci',\n  7: '\\'nci',\n  20: '\\'nci',\n  50: '\\'nci',\n  3: '\\'üncü',\n  4: '\\'üncü',\n  100: '\\'üncü',\n  6: '\\'ncı',\n  9: '\\'uncu',\n  10: '\\'uncu',\n  30: '\\'uncu',\n  60: '\\'ıncı',\n  90: '\\'ıncı',\n};\n\nexport default {\n  months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),\n  monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\n  weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),\n  weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),\n  weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[bugün saat] LT',\n    nextDay: '[yarın saat] LT',\n    nextWeek: '[gelecek] dddd [saat] LT',\n    lastDay: '[dün] LT',\n    lastWeek: '[geçen] dddd [saat] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s sonra',\n    past: '%s önce',\n    s: 'birkaç saniye',\n    m: 'bir dakika',\n    mm: '%d dakika',\n    h: 'bir saat',\n    hh: '%d saat',\n    d: 'bir gün',\n    dd: '%d gün',\n    M: 'bir ay',\n    MM: '%d ay',\n    y: 'bir yıl',\n    yy: '%d yıl',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,\n  ordinal(number) {\n    if (number === 0) { // special case for zero\n      return `${number}'ıncı`;\n    }\n    const a = number % 10;\n    const b = number % 100 - a;\n    const c = number >= 100 ? 100 : null;\n    return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Urdu [ur]\n//! author : Sawood Alam : https://github.com/ibnesayeed\n//! author : Zack : https://github.com/ZackVision\n/* jshint -W100 */\n\nconst months = [\n  'جنوری',\n  'فروری',\n  'مارچ',\n  'اپریل',\n  'مئی',\n  'جون',\n  'جولائی',\n  'اگست',\n  'ستمبر',\n  'اکتوبر',\n  'نومبر',\n  'دسمبر',\n];\n\nconst days = [\n  'اتوار',\n  'پیر',\n  'منگل',\n  'بدھ',\n  'جمعرات',\n  'جمعہ',\n  'ہفتہ',\n];\n\nexport default {\n  months,\n  monthsShort: months,\n  weekdays: days,\n  weekdaysShort: days,\n  weekdaysMin: days,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd، D MMMM YYYY HH:mm',\n  },\n  meridiemParse: /صبح|شام/,\n  isPM(input) {\n    return input === 'شام';\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'صبح';\n    }\n    return 'شام';\n  },\n  calendar: {\n    sameDay: '[آج بوقت] LT',\n    nextDay: '[کل بوقت] LT',\n    nextWeek: 'dddd [بوقت] LT',\n    lastDay: '[گذشتہ روز بوقت] LT',\n    lastWeek: '[گذشتہ] dddd [بوقت] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s بعد',\n    past: '%s قبل',\n    s: 'چند سیکنڈ',\n    m: 'ایک منٹ',\n    mm: '%d منٹ',\n    h: 'ایک گھنٹہ',\n    hh: '%d گھنٹے',\n    d: 'ایک دن',\n    dd: '%d دن',\n    M: 'ایک ماہ',\n    MM: '%d ماہ',\n    y: 'ایک سال',\n    yy: '%d سال',\n  },\n  preparse(string) {\n    return string.replace(/،/g, ',');\n  },\n  postformat(string) {\n    return string.replace(/,/g, '،');\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","import af from './af.js';\nimport ardz from './ar-dz.js';\nimport arkw from './ar-kw.js';\nimport arly from './ar-ly.js';\nimport arma from './ar-ma.js';\nimport arsa from './ar-sa.js';\nimport artn from './ar-tn.js';\nimport ar from './ar.js';\nimport az from './az.js';\nimport be from './be.js';\nimport bg from './bg.js';\nimport bm from './bm.js';\nimport bn from './bn.js';\nimport bo from './bo.js';\nimport br from './br.js';\nimport bs from './bs.js';\nimport ca from './ca.js';\nimport cs from './cs.js';\nimport cv from './cv.js';\nimport cy from './cy.js';\nimport da from './da.js';\nimport deat from './de-at.js';\nimport dech from './de-ch.js';\nimport de from './de.js';\nimport dv from './dv.js';\nimport el from './el.js';\nimport enau from './en-au.js';\nimport enca from './en-ca.js';\nimport engb from './en-gb.js';\nimport enie from './en-ie.js';\nimport ennz from './en-nz.js';\nimport eo from './eo.js';\nimport esdo from './es-do.js';\nimport esus from './es-us.js';\nimport es from './es.js';\nimport et from './et.js';\nimport eu from './eu.js';\nimport fa from './fa.js';\nimport fi from './fi.js';\nimport fo from './fo.js';\nimport frca from './fr-ca.js';\nimport frch from './fr-ch.js';\nimport fr from './fr.js';\nimport fy from './fy.js';\nimport gd from './gd.js';\nimport gl from './gl.js';\nimport gomlatn from './gom-latn.js';\nimport gu from './gu.js';\nimport he from './he.js';\nimport hi from './hi.js';\nimport hr from './hr.js';\nimport hu from './hu.js';\nimport hyam from './hy-am.js';\nimport id from './id.js';\nimport is from './is.js';\nimport it from './it.js';\nimport ja from './ja.js';\nimport jv from './jv.js';\nimport ka from './ka.js';\nimport kk from './kk.js';\nimport km from './km.js';\nimport kn from './kn.js';\nimport ko from './ko.js';\nimport ky from './ky.js';\nimport lb from './lb.js';\nimport lo from './lo.js';\nimport lt from './lt.js';\nimport lv from './lv.js';\nimport me from './me.js';\nimport mi from './mi.js';\nimport mk from './mk.js';\nimport ml from './ml.js';\nimport mr from './mr.js';\nimport msmy from './ms-my.js';\nimport ms from './ms.js';\nimport my from './my.js';\nimport nb from './nb.js';\nimport ne from './ne.js';\nimport nlbe from './nl-be.js';\nimport nl from './nl.js';\nimport nn from './nn.js';\nimport pain from './pa-in.js';\nimport pl from './pl.js';\nimport ptbr from './pt-br.js';\nimport pt from './pt.js';\nimport ro from './ro.js';\nimport ru from './ru.js';\nimport sd from './sd.js';\nimport se from './se.js';\nimport si from './si.js';\nimport sk from './sk.js';\nimport sl from './sl.js';\nimport sq from './sq.js';\nimport srcyrl from './sr-cyrl.js';\nimport sr from './sr.js';\nimport ss from './ss.js';\nimport sv from './sv.js';\nimport sw from './sw.js';\nimport ta from './ta.js';\nimport te from './te.js';\nimport tet from './tet.js';\nimport th from './th.js';\nimport tlph from './tl-ph.js';\nimport tlh from './tlh.js';\nimport tr from './tr.js';\nimport tzl from './tzl.js';\nimport tzmlatn from './tzm-latn.js';\nimport tzm from './tzm.js';\nimport uk from './uk.js';\nimport ur from './ur.js';\nimport uzlatn from './uz-latn.js';\nimport uz from './uz.js';\nimport vi from './vi.js';\nimport xpseudo from './x-pseudo.js';\nimport yo from './yo.js';\nimport zhcn from './zh-cn.js';\nimport zhhk from './zh-hk.js';\nimport zhtw from './zh-tw.js'\n\n\nexport default {\n  'af': af,\n  'ar-dz': ardz,\n  'ar-kw': arkw,\n  'ar-ly': arly,\n  'ar-ma': arma,\n  'ar-sa': arsa,\n  'ar-tn': artn,\n  'ar': ar,\n  'az': az,\n  'be': be,\n  'bg': bg,\n  'bm': bm,\n  'bn': bn,\n  'bo': bo,\n  'br': br,\n  'bs': bs,\n  'ca': ca,\n  'cs': cs,\n  'cv': cv,\n  'cy': cy,\n  'da': da,\n  'de-at': deat,\n  'de-ch': dech,\n  'de': de,\n  'dv': dv,\n  'el': el,\n  'en-au': enau,\n  'en-ca': enca,\n  'en-gb': engb,\n  'en-ie': enie,\n  'en-nz': ennz,\n  'eo': eo,\n  'es-do': esdo,\n  'es-us': esus,\n  'es': es,\n  'et': et,\n  'eu': eu,\n  'fa': fa,\n  'fi': fi,\n  'fo': fo,\n  'fr-ca': frca,\n  'fr-ch': frch,\n  'fr': fr,\n  'fy': fy,\n  'gd': gd,\n  'gl': gl,\n  'gom-latn': gomlatn,\n  'gu': gu,\n  'he': he,\n  'hi': hi,\n  'hr': hr,\n  'hu': hu,\n  'hy-am': hyam,\n  'id': id,\n  'is': is,\n  'it': it,\n  'ja': ja,\n  'jv': jv,\n  'ka': ka,\n  'kk': kk,\n  'km': km,\n  'kn': kn,\n  'ko': ko,\n  'ky': ky,\n  'lb': lb,\n  'lo': lo,\n  'lt': lt,\n  'lv': lv,\n  'me': me,\n  'mi': mi,\n  'mk': mk,\n  'ml': ml,\n  'mr': mr,\n  'ms-my': msmy,\n  'ms': ms,\n  'my': my,\n  'nb': nb,\n  'ne': ne,\n  'nl-be': nlbe,\n  'nl': nl,\n  'nn': nn,\n  'pa-in': pain,\n  'pl': pl,\n  'pt-br': ptbr,\n  'pt': pt,\n  'ro': ro,\n  'ru': ru,\n  'sd': sd,\n  'se': se,\n  'si': si,\n  'sk': sk,\n  'sl': sl,\n  'sq': sq,\n  'sr-cyrl': srcyrl,\n  'sr': sr,\n  'ss': ss,\n  'sv': sv,\n  'sw': sw,\n  'ta': ta,\n  'te': te,\n  'tet': tet,\n  'th': th,\n  'tl-ph': tlph,\n  'tlh': tlh,\n  'tr': tr,\n  'tzl': tzl,\n  'tzm-latn': tzmlatn,\n  'tzm': tzm,\n  'uk': uk,\n  'ur': ur,\n  'uz-latn': uzlatn,\n  'uz': uz,\n  'vi': vi,\n  'x-pseudo': xpseudo,\n  'yo': yo,\n  'zh-cn': zhcn,\n  'zh-hk': zhhk,\n  'zh-tw': zhtw\n};","//! now.js locale configuration\n//! locale : Central Atlas Tamazight Latin [tzm-latn]\n//! author : Abdel Said : https://github.com/abdelsaid\n/* jshint -W100 */\n\nexport default {\n  months: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),\n  monthsShort: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),\n  weekdays: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n  weekdaysShort: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n  weekdaysMin: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[asdkh g] LT',\n    nextDay: '[aska g] LT',\n    nextWeek: 'dddd [g] LT',\n    lastDay: '[assant g] LT',\n    lastWeek: 'dddd [g] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'dadkh s yan %s',\n    past: 'yan %s',\n    s: 'imik',\n    m: 'minuḍ',\n    mm: '%d minuḍ',\n    h: 'saɛa',\n    hh: '%d tassaɛin',\n    d: 'ass',\n    dd: '%d ossan',\n    M: 'ayowr',\n    MM: '%d iyyirn',\n    y: 'asgas',\n    yy: '%d isgasn',\n  },\n  week: {\n    dow: 6, // Saturday is the first day of the week.\n    doy: 12, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Central Atlas Tamazight [tzm]\n//! author : Abdel Said : https://github.com/abdelsaid\n/* jshint -W100 */\n\nexport default {\n  months: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),\n  monthsShort: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),\n  weekdays: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n  weekdaysShort: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n  weekdaysMin: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',\n    nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',\n    nextWeek: 'dddd [ⴴ] LT',\n    lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',\n    lastWeek: 'dddd [ⴴ] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',\n    past: 'ⵢⴰⵏ %s',\n    s: 'ⵉⵎⵉⴽ',\n    m: 'ⵎⵉⵏⵓⴺ',\n    mm: '%d ⵎⵉⵏⵓⴺ',\n    h: 'ⵙⴰⵄⴰ',\n    hh: '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',\n    d: 'ⴰⵙⵙ',\n    dd: '%d oⵙⵙⴰⵏ',\n    M: 'ⴰⵢoⵓⵔ',\n    MM: '%d ⵉⵢⵢⵉⵔⵏ',\n    y: 'ⴰⵙⴳⴰⵙ',\n    yy: '%d ⵉⵙⴳⴰⵙⵏ',\n  },\n  week: {\n    dow: 6, // Saturday is the first day of the week.\n    doy: 12, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Uzbek Latin [uz-latn]\n//! author : Rasulbek Mirzayev : github.com/Rasulbeeek\n/* jshint -W100 */\n\nexport default {\n  months: 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split('_'),\n  monthsShort: 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),\n  weekdays: 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split('_'),\n  weekdaysShort: 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),\n  weekdaysMin: 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'D MMMM YYYY, dddd HH:mm',\n  },\n  calendar: {\n    sameDay: '[Bugun soat] LT [da]',\n    nextDay: '[Ertaga] LT [da]',\n    nextWeek: 'dddd [kuni soat] LT [da]',\n    lastDay: '[Kecha soat] LT [da]',\n    lastWeek: '[O\\'tgan] dddd [kuni soat] LT [da]',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'Yaqin %s ichida',\n    past: 'Bir necha %s oldin',\n    s: 'soniya',\n    m: 'bir daqiqa',\n    mm: '%d daqiqa',\n    h: 'bir soat',\n    hh: '%d soat',\n    d: 'bir kun',\n    dd: '%d kun',\n    M: 'bir oy',\n    MM: '%d oy',\n    y: 'bir yil',\n    yy: '%d yil',\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 1st is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Uzbek [uz]\n//! author : Sardor Muminov : https://github.com/muminoff\n/* jshint -W100 */\n\nexport default {\n  months: 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),\n  monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),\n  weekdays: 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),\n  weekdaysShort: 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),\n  weekdaysMin: 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'D MMMM YYYY, dddd HH:mm',\n  },\n  calendar: {\n    sameDay: '[Бугун соат] LT [да]',\n    nextDay: '[Эртага] LT [да]',\n    nextWeek: 'dddd [куни соат] LT [да]',\n    lastDay: '[Кеча соат] LT [да]',\n    lastWeek: '[Утган] dddd [куни соат] LT [да]',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'Якин %s ичида',\n    past: 'Бир неча %s олдин',\n    s: 'фурсат',\n    m: 'бир дакика',\n    mm: '%d дакика',\n    h: 'бир соат',\n    hh: '%d соат',\n    d: 'бир кун',\n    dd: '%d кун',\n    M: 'бир ой',\n    MM: '%d ой',\n    y: 'бир йил',\n    yy: '%d йил',\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Vietnamese [vi]\n//! author : Bang Nguyen : https://github.com/bangnk\n/* jshint -W100 */\n\nexport default {\n  months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),\n  monthsShort: 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),\n  weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n  weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n  weekdaysParseExact: true,\n  meridiemParse: /sa|ch/i,\n  isPM(input) {\n    return /^ch$/i.test(input);\n  },\n  meridiem(hours, minutes, isLower) {\n    if (hours < 12) {\n      return isLower ? 'sa' : 'SA';\n    }\n    return isLower ? 'ch' : 'CH';\n  },\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM [năm] YYYY',\n    LLL: 'D MMMM [năm] YYYY HH:mm',\n    LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',\n    l: 'DD/M/YYYY',\n    ll: 'D MMM YYYY',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd, D MMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[Hôm nay lúc] LT',\n    nextDay: '[Ngày mai lúc] LT',\n    nextWeek: 'dddd [tuần tới lúc] LT',\n    lastDay: '[Hôm qua lúc] LT',\n    lastWeek: 'dddd [tuần rồi lúc] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: '%s tới',\n    past: '%s trước',\n    s: 'vài giây',\n    m: 'một phút',\n    mm: '%d phút',\n    h: 'một giờ',\n    hh: '%d giờ',\n    d: 'một ngày',\n    dd: '%d ngày',\n    M: 'một tháng',\n    MM: '%d tháng',\n    y: 'một năm',\n    yy: '%d năm',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}/,\n  ordinal(number) {\n    return number;\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Pseudo [x-pseudo]\n//! author : Andrew Hood : https://github.com/andrewhood125\n/* jshint -W100 */\n\nexport default {\n  months: 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),\n  monthsShort: 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),\n  weekdaysShort: 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),\n  weekdaysMin: 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm',\n  },\n  calendar: {\n    sameDay: '[T~ódá~ý át] LT',\n    nextDay: '[T~ómó~rró~w át] LT',\n    nextWeek: 'dddd [át] LT',\n    lastDay: '[Ý~ést~érdá~ý át] LT',\n    lastWeek: '[L~ást] dddd [át] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'í~ñ %s',\n    past: '%s á~gó',\n    s: 'á ~féw ~sécó~ñds',\n    m: 'á ~míñ~úté',\n    mm: '%d m~íñú~tés',\n    h: 'á~ñ hó~úr',\n    hh: '%d h~óúrs',\n    d: 'á ~dáý',\n    dd: '%d d~áýs',\n    M: 'á ~móñ~th',\n    MM: '%d m~óñt~hs',\n    y: 'á ~ýéár',\n    yy: '%d ý~éárs',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n  ordinal(number) {\n    const b = number % 10;\n    const output = (~~(number % 100 / 10) === 1) ? 'th' :\n      (b === 1) ? 'st' :\n        (b === 2) ? 'nd' :\n          (b === 3) ? 'rd' : 'th';\n    return number + output;\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Yoruba Nigeria [yo]\n//! author : Atolagbe Abisoye : https://github.com/andela-batolagbe\n/* jshint -W100 */\n\nexport default {\n  months: 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'),\n  monthsShort: 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),\n  weekdays: 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),\n  weekdaysShort: 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),\n  weekdaysMin: 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY h:mm A',\n    LLLL: 'dddd, D MMMM YYYY h:mm A',\n  },\n  calendar: {\n    sameDay: '[Ònì ni] LT',\n    nextDay: '[Ọ̀la ni] LT',\n    nextWeek: 'dddd [Ọsẹ̀ tón\\'bọ] [ni] LT',\n    lastDay: '[Àna ni] LT',\n    lastWeek: 'dddd [Ọsẹ̀ tólọ́] [ni] LT',\n    sameElse: 'L',\n  },\n  relativeTime: {\n    future: 'ní %s',\n    past: '%s kọjá',\n    s: 'ìsẹjú aayá die',\n    m: 'ìsẹjú kan',\n    mm: 'ìsẹjú %d',\n    h: 'wákati kan',\n    hh: 'wákati %d',\n    d: 'ọjọ́ kan',\n    dd: 'ọjọ́ %d',\n    M: 'osù kan',\n    MM: 'osù %d',\n    y: 'ọdún kan',\n    yy: 'ọdún %d',\n  },\n  dayOfMonthOrdinalParse: /ọjọ́\\s\\d{1,2}/,\n  ordinal: 'ọjọ́ %d',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Chinese (China) [zh-cn]\n//! author : suupic : https://github.com/suupic\n//! author : Zeno Zeng : https://github.com/zenozeng\n/* jshint -W100 */\n\nexport default {\n  months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n  monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n  weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n  weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY年MMMD日',\n    LL: 'YYYY年MMMD日',\n    LLL: 'YYYY年MMMD日Ah点mm分',\n    LLLL: 'YYYY年MMMD日ddddAh点mm分',\n    l: 'YYYY年MMMD日',\n    ll: 'YYYY年MMMD日',\n    lll: 'YYYY年MMMD日 HH:mm',\n    llll: 'YYYY年MMMD日dddd HH:mm',\n  },\n  meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === '凌晨' || meridiem === '早上' ||\n      meridiem === '上午') {\n      return hour;\n    } else if (meridiem === '下午' || meridiem === '晚上') {\n      return hour + 12;\n    }\n    // '中午'\n    return hour >= 11 ? hour : hour + 12;\n  },\n  meridiem(hour, minute, isLower) {\n    const hm = hour * 100 + minute;\n    if (hm < 600) {\n      return '凌晨';\n    } else if (hm < 900) {\n      return '早上';\n    } else if (hm < 1130) {\n      return '上午';\n    } else if (hm < 1230) {\n      return '中午';\n    } else if (hm < 1800) {\n      return '下午';\n    }\n    return '晚上';\n  },\n  calendar: {\n    sameDay: '[今天]LT',\n    nextDay: '[明天]LT',\n    nextWeek: '[下]ddddLT',\n    lastDay: '[昨天]LT',\n    lastWeek: '[上]ddddLT',\n    sameElse: 'L',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(日|月|周)/,\n  ordinal(number, period) {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return `${number}日`;\n      case 'M':\n        return `${number}月`;\n      case 'w':\n      case 'W':\n        return `${number}周`;\n      default:\n        return number;\n    }\n  },\n  relativeTime: {\n    future: '%s内',\n    past: '%s前',\n    s: '几秒',\n    m: '1 分钟',\n    mm: '%d 分钟',\n    h: '1 小时',\n    hh: '%d 小时',\n    d: '1 天',\n    dd: '%d 天',\n    M: '1 个月',\n    MM: '%d 个月',\n    y: '1 年',\n    yy: '%d 年',\n  },\n  week: {\n    // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n    dow: 1, // Monday is the first day of the week.\n    doy: 4, // The week that contains Jan 4th is the first week of the year.\n  },\n};\n","//! now.js locale configuration\n//! locale : Chinese (Hong Kong) [zh-hk]\n//! author : Ben : https://github.com/ben-lin\n//! author : Chris Lam : https://github.com/hehachris\n//! author : Konstantin : https://github.com/skfd\n/* jshint -W100 */\n\nexport default {\n  months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n  monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n  weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n  weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY年MMMD日',\n    LL: 'YYYY年MMMD日',\n    LLL: 'YYYY年MMMD日 HH:mm',\n    LLLL: 'YYYY年MMMD日dddd HH:mm',\n    l: 'YYYY年MMMD日',\n    ll: 'YYYY年MMMD日',\n    lll: 'YYYY年MMMD日 HH:mm',\n    llll: 'YYYY年MMMD日dddd HH:mm',\n  },\n  meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n      return hour;\n    } else if (meridiem === '中午') {\n      return hour >= 11 ? hour : hour + 12;\n    } else if (meridiem === '下午' || meridiem === '晚上') {\n      return hour + 12;\n    }\n  },\n  meridiem(hour, minute, isLower) {\n    const hm = hour * 100 + minute;\n    if (hm < 600) {\n      return '凌晨';\n    } else if (hm < 900) {\n      return '早上';\n    } else if (hm < 1130) {\n      return '上午';\n    } else if (hm < 1230) {\n      return '中午';\n    } else if (hm < 1800) {\n      return '下午';\n    }\n    return '晚上';\n  },\n  calendar: {\n    sameDay: '[今天]LT',\n    nextDay: '[明天]LT',\n    nextWeek: '[下]ddddLT',\n    lastDay: '[昨天]LT',\n    lastWeek: '[上]ddddLT',\n    sameElse: 'L',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n  ordinal(number, period) {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return `${number}日`;\n      case 'M':\n        return `${number}月`;\n      case 'w':\n      case 'W':\n        return `${number}週`;\n      default:\n        return number;\n    }\n  },\n  relativeTime: {\n    future: '%s內',\n    past: '%s前',\n    s: '幾秒',\n    m: '1 分鐘',\n    mm: '%d 分鐘',\n    h: '1 小時',\n    hh: '%d 小時',\n    d: '1 天',\n    dd: '%d 天',\n    M: '1 個月',\n    MM: '%d 個月',\n    y: '1 年',\n    yy: '%d 年',\n  },\n};\n","//! now.js locale configuration\n//! locale : Chinese (Taiwan) [zh-tw]\n//! author : Ben : https://github.com/ben-lin\n//! author : Chris Lam : https://github.com/hehachris\n/* jshint -W100 */\n\nexport default {\n  months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n  monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n  weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n  weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY年MMMD日',\n    LL: 'YYYY年MMMD日',\n    LLL: 'YYYY年MMMD日 HH:mm',\n    LLLL: 'YYYY年MMMD日dddd HH:mm',\n    l: 'YYYY年MMMD日',\n    ll: 'YYYY年MMMD日',\n    lll: 'YYYY年MMMD日 HH:mm',\n    llll: 'YYYY年MMMD日dddd HH:mm',\n  },\n  meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n      return hour;\n    } else if (meridiem === '中午') {\n      return hour >= 11 ? hour : hour + 12;\n    } else if (meridiem === '下午' || meridiem === '晚上') {\n      return hour + 12;\n    }\n  },\n  meridiem(hour, minute, isLower) {\n    const hm = hour * 100 + minute;\n    if (hm < 600) {\n      return '凌晨';\n    } else if (hm < 900) {\n      return '早上';\n    } else if (hm < 1130) {\n      return '上午';\n    } else if (hm < 1230) {\n      return '中午';\n    } else if (hm < 1800) {\n      return '下午';\n    }\n    return '晚上';\n  },\n  calendar: {\n    sameDay: '[今天]LT',\n    nextDay: '[明天]LT',\n    nextWeek: '[下]ddddLT',\n    lastDay: '[昨天]LT',\n    lastWeek: '[上]ddddLT',\n    sameElse: 'L',\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n  ordinal(number, period) {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return `${number}日`;\n      case 'M':\n        return `${number}月`;\n      case 'w':\n      case 'W':\n        return `${number}週`;\n      default:\n        return number;\n    }\n  },\n  relativeTime: {\n    future: '%s內',\n    past: '%s前',\n    s: '幾秒',\n    m: '1 分鐘',\n    mm: '%d 分鐘',\n    h: '1 小時',\n    hh: '%d 小時',\n    d: '1 天',\n    dd: '%d 天',\n    M: '1 個月',\n    MM: '%d 個月',\n    y: '1 年',\n    yy: '%d 年',\n  },\n};\n","import {\n  invalidDateError,\n  invalidDateRegExp,\n  compare,\n  slice,\n  isDate,\n  isUndefined,\n  isFunction,\n  isString,\n  isNumber,\n  toInt,\n  minus,\n  nativeDatetoISOString,\n  getSetGlobalLocale as locale,\n  getLocale as localeData,\n  listLocales as locales,\n  defineLocale,\n  updateLocale,\n  defaultFormat,\n  defaultFormatUtc,\n  matchOffset,\n  matchShortOffset,\n  isLeapYear,\n  getSetWeekYearHelper,\n  weekOfYear,\n  weeksInYear,\n  parseWeekday,\n  parseIsoWeekday,\n} from './utils/index.js';\n\nimport format from './Format.js';\n\nconst metaSecond = 1000;\nconst metaMinute = 60 * metaSecond;\nconst metaHour = 60 * metaMinute;\nconst metaDay = 24 * metaHour;\nconst days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nconst chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\nconst nativeGet = function(unit) {\n  const getName = this._isUTC ? `getUTC${unit}` : `get${unit}`;\n  return this.date[getName]();\n};\n\nconst nativeSet = function(unit, val) {\n  val = parseInt(val);\n  const setName = this._isUTC ? `setUTC${unit}` : `set${unit}`;\n  if (isNumber(val)) {\n    this.date[setName](val);\n  }\n  return this;\n};\n\nfunction offsetFromString(matcher, string) {\n  const matches = (string || '').match(matcher);\n\n  if (matches === null) {\n    return null;\n  }\n\n  const chunk = matches[matches.length - 1] || [];\n  const parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n  const minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n  return minutes === 0 ?\n    0 :\n    parts[0] === '+' ? minutes : -minutes;\n}\n\nfunction initLocale() {\n  Now.defineLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function(number) {\n      const b = number % 10;\n      const output = (toInt(number % 100 / 10) === 1) ? 'th' :\n        (b === 1) ? 'st' :\n        (b === 2) ? 'nd' :\n        (b === 3) ? 'rd' : 'th';\n      return number + output;\n    }\n  });\n}\n\nclass Now {\n  constructor(...args) {\n    this.mondayFirst = false;\n    this.now = new Date(...args);\n    if (invalidDateRegExp.test(this.now)) {\n      throw new TypeError(invalidDateError);\n    }\n    this._format = format;\n    this._isUTC = false;\n    this.now.parse = this.parse;\n    this.initDate();\n    this.initIsDate();\n  }\n\n  static defineLocale(name, config) {\n    return defineLocale(name, config);\n  }\n\n  static updateLocale(name, config) {\n    return updateLocale(name, config);\n  }\n\n  static locales() {\n    return locales();\n  }\n\n  localeData(key) {\n    return localeData(key);\n  }\n\n  locale(obj) {\n    locale(obj);\n    return this;\n  }\n\n  initDate() {\n    let index = 0;\n    const len = days.length;\n\n    while (index < len) {\n      const lower = days[index].toLowerCase();\n      this[lower] = this.dateIterator(index);\n      index += 1;\n    }\n  }\n\n  initIsDate() {\n    let index = 0;\n    const len = days.length;\n\n    while (index < len) {\n      this[`is${days[index]}`] = this.isDateIterator(index);\n      index += 1;\n    }\n  }\n\n  dateIterator(index) {\n    const that = this;\n    return () => {\n      const weekDay = that.now.getDay();\n      that.mondayFirst = false;\n      if (weekDay === 0) {\n        // today is sunday, so get before sunday\n        let offset = index;\n        if (index === 0) {\n          offset = 7;\n        }\n        return that.computeBeginningOfWeek().addDays(-(7 - offset)).date;\n      }\n      // today is not sunday, so get after sunday\n      let offset = index;\n      if (index === 0) {\n        offset = 7;\n      }\n      return that.computeBeginningOfWeek().addDays(offset).date;\n    };\n  }\n\n  isDateIterator(index) {\n    const that = this;\n    return () => that.now.getDay() === index;\n  }\n\n  get value() {\n    return +this.now;\n  }\n\n  get date() {\n    return this.now;\n  }\n\n  UTC(...args) {\n    return this.clone(Date.UTC(args));\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n  year(val) {\n    return (+val === 0 || val) ? nativeSet.call(this, 'FullYear', val) : nativeGet.call(this, 'FullYear');\n  }\n\n  quarter() {\n    return Math.ceil((this.month() + 1) / 3);\n  }\n\n  month(val) {\n    return (+val === 0 || val) ? nativeSet.call(this, 'Month', val) : nativeGet.call(this, 'Month');\n  }\n\n  week(val) {\n    const week = this.localeData().week(this);\n    return (+val === 0 || val) ? this.addDays((val - week) * 7) : week;\n  }\n\n  isoWeek(val) {\n    const week = weekOfYear(this, 1, 4).week;\n    return (+val === 0 || val) ? this.addDays((val - week) * 7) : week;\n  }\n\n  day(val) {\n    return (+val === 0 || val) ? nativeSet.call(this, 'Date', val) : nativeGet.call(this, 'Date');\n  }\n\n  weekDay(val) {\n    const weekDay = this._isUTC ? this.date.getUTCDay() : this.date.getDay();\n    if (+val === 0 || val) {\n      val = parseWeekday(val, this.localeData());\n      return this.addDays(val - weekDay);\n    } else {\n      return weekDay;\n    }\n  }\n\n  localeWeekDay(val) {\n    const localeWeekDay = (this.weekDay() + 7 - this.localeData()._week.dow) % 7;\n    return (+val === 0 || val) ? this.addDays(val - localeWeekDay) : localeWeekDay;\n  }\n\n  isoWeekDay(val) {\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n    if (+val === 0 || val) {\n      const isoWeekDay = parseIsoWeekday(val, this.localeData());\n      return this.day(this.day() === 0 ? isoWeekDay - 7 : isoWeekDay);\n    } else {\n      return this.weekDay() || 7;\n    }\n  }\n\n  hour(val) {\n    return (+val === 0 || val) ? nativeSet.call(this, 'Hours', val) : nativeGet.call(this, 'Hours');\n  }\n\n  minute(val) {\n    return (+val === 0 || val) ? nativeSet.call(this, 'Minutes', val) : nativeGet.call(this, 'Minutes');\n  }\n\n  second(val) {\n    return (+val === 0 || val) ? nativeSet.call(this, 'Seconds', val) : nativeGet.call(this, 'Seconds');\n  }\n\n  milliSecond(val) {\n    return (+val === 0 || val) ? nativeSet.call(this, 'Milliseconds', val) : nativeGet.call(this, 'Milliseconds');\n  }\n\n  weeksInYear() {\n    const weekInfo = this.localeData()._week;\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  isoWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  weekYear(val) {\n    return getSetWeekYearHelper.call(this,\n      val,\n      this.week(),\n      this.localeWeekDay(),\n      this.localeData()._week.dow,\n      this.localeData()._week.doy\n    )\n  }\n\n  isoWeekYear(val) {\n    return getSetWeekYearHelper.call(this,\n      val,\n      this.isoWeek(),\n      this.isoWeekDay(),\n      1,\n      4\n    )\n  }\n\n  unixr() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  get firstDayMonday() {\n    return this.mondayFirst;\n  }\n\n  set firstDayMonday(value) {\n    this.mondayFirst = value;\n  }\n\n  addMilliSeconds(value) {\n    this.date.setMilliseconds(this.date.getMilliseconds() + value);\n    return this;\n  }\n\n  addSeconds(value) {\n    this.date.setSeconds(this.date.getSeconds() + value);\n    return this;\n  }\n\n  addMinutes(value) {\n    this.date.setMinutes(this.date.getMinutes() + value);\n    return this;\n  }\n\n  addHours(value) {\n    this.date.setHours(this.date.getHours() + value);\n    return this;\n  }\n\n  addDays(value) {\n    this.date.setDate(this.date.getDate() + value);\n    return this;\n  }\n\n  addWeeks(value) {\n    return this.date.addDays(7 * value);\n  }\n\n  addMonths(value) {\n    this.date.setMonth(this.date.getMonth() + value);\n    return this;\n  }\n\n  addYears(value) {\n    this.date.setFullYear(this.date.getFullYear() + value);\n    return this;\n  }\n\n  clone(val) {\n    return val ? new Now(val) : new Now(this.date);\n  }\n\n  truncate(name) {\n    const context = this.date;\n    switch (name) {\n      case 'year':\n        context.setMonth(0);\n        context.setDate(1);\n        context.setHours(0);\n        context.setMinutes(0);\n        context.setSeconds(0);\n        context.setMilliseconds(0);\n        return this;\n      case 'month':\n        context.setDate(1);\n        context.setHours(0);\n        context.setMinutes(0);\n        context.setSeconds(0);\n        context.setMilliseconds(0);\n        return this;\n      case 'day':\n        context.setHours(0);\n        context.setMinutes(0);\n        context.setSeconds(0);\n        context.setMilliseconds(0);\n        return this;\n      case 'hour':\n        context.setMinutes(0);\n        context.setSeconds(0);\n        context.setMilliseconds(0);\n        return this;\n      case 'minute':\n        context.setSeconds(0);\n        context.setMilliseconds(0);\n        return this;\n      default:\n        return this;\n    }\n  }\n\n  parse(ifMiliSecond) {\n    let context;\n    if (this instanceof Now) {\n      context = this.date;\n    } else {\n      context = this;\n    }\n    const year = context.getFullYear();\n    let month = context.getMonth() + 1;\n    let date = context.getDate();\n    let hour = context.getHours();\n    let minute = context.getMinutes();\n    let second = context.getSeconds();\n    const milliSecond = context.getMilliseconds();\n    month = month < 10 ? `0${month}` : month;\n    date = date < 10 ? `0${date}` : date;\n    hour = hour < 10 ? `0${hour}` : hour;\n    minute = minute < 10 ? `0${minute}` : minute;\n    second = second < 10 ? `0${second}` : second;\n    if (ifMiliSecond) {\n      return `${year}-${month}-${date} ${hour}:${minute}:${second}.${milliSecond}`;\n    }\n    return `${year}-${month}-${date} ${hour}:${minute}:${second}`;\n  }\n\n  format(obj) {\n    obj || (obj = this.isUtc() ? defaultFormatUtc : defaultFormat);\n    const output = this._format.formatMoment(this, obj);\n    return output;\n  }\n\n  computeBeginningOfMinute() {\n    return this.clone().truncate('minute');\n  }\n\n  computeBeginningOfHour() {\n    return this.clone().truncate('hour');\n  }\n\n  computeBeginningOfDay() {\n    return this.clone().truncate('day');\n  }\n\n  computeBeginningOfWeek() {\n    const clone = this.clone();\n    clone.firstDayMonday = this.firstDayMonday;\n    let weekDay = clone.date.getDay();\n    if (clone.firstDayMonday) {\n      if (weekDay === 0) {\n        weekDay = 7;\n      }\n      weekDay -= 1;\n    }\n    clone.addDays(-weekDay);\n    return clone.truncate('day');\n  }\n\n  computeBeginningOfMonth() {\n    return this.clone().truncate('month');\n  }\n\n  computeBeginningOfQuarter() {\n    const clone = this.clone().computeBeginningOfMonth();\n    const offset = clone.date.getMonth() % 3;\n    return clone.addMonths(-offset);\n  }\n\n  computeBeginningOfYear() {\n    return this.clone().truncate('year');\n  }\n\n  beginningOfMinute() {\n    return this.computeBeginningOfMinute().date;\n  }\n\n  beginningOfHour() {\n    return this.computeBeginningOfHour().date;\n  }\n\n  beginningOfDay() {\n    return this.computeBeginningOfDay().date;\n  }\n\n  beginningOfWeek() {\n    return this.computeBeginningOfWeek().date;\n  }\n\n  beginningOfMonth() {\n    return this.computeBeginningOfMonth().date;\n  }\n\n  beginningOfQuarter() {\n    return this.computeBeginningOfQuarter().date;\n  }\n\n  beginningOfYear() {\n    return this.computeBeginningOfYear().date;\n  }\n\n  endOfMinute() {\n    return this.clone().computeBeginningOfMinute().addMilliSeconds(metaMinute - 1).date;\n  }\n\n  endOfHour() {\n    return this.clone().computeBeginningOfHour().addMilliSeconds(metaHour - 1).date;\n  }\n\n  endOfDay() {\n    return this.clone().computeBeginningOfDay().addMilliSeconds(metaDay - 1).date;\n  }\n\n  endOfWeek() {\n    const clone = this.clone();\n    clone.firstDayMonday = this.firstDayMonday;\n    return clone.computeBeginningOfWeek().addMilliSeconds((7 * metaDay) - 1).date;\n  }\n\n  endOfMonth() {\n    return this.clone().computeBeginningOfMonth().addMonths(1).addMilliSeconds(-1).date;\n  }\n\n  endOfQuarter() {\n    return this.clone().computeBeginningOfQuarter().addMonths(3).addMilliSeconds(-1).date;\n  }\n\n  endOfYear() {\n    return this.clone().computeBeginningOfYear().addYears(1).addMilliSeconds(-1).date;\n  }\n\n  dayOfYear() {\n    return Math.round((this.beginningOfDay() - this.beginningOfYear()) / metaDay) + 1;\n  }\n\n  toJSON() {\n    return this.toISOString();\n  }\n\n  toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  toISOString() {\n    const year = this.year();\n    if (year < 0 || year > 9999) {\n      return this.format('YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n    }\n    if (nativeDatetoISOString && isFunction(nativeDatetoISOString)) {\n      return this.date.toISOString();\n    }\n    return this.format('YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n  }\n\n  isLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  isBefore(obj) {\n    return compare(this.date, obj) === -1;\n  }\n\n  isAfter(obj) {\n    return compare(this.date, obj) === 1;\n  }\n\n  isEqual(obj) {\n    return compare(this.date, obj) === 0;\n  }\n\n  toArray() {\n    return [this.year(), this.month(), this.day(), this.hour(), this.minute(), this.second(), this.milliSecond()];\n  }\n\n  toObject() {\n    return {\n      year: this.year(),\n      month: this.month(),\n      day: this.day(),\n      hour: this.hour(),\n      minute: this.minute(),\n      second: this.second(),\n      milliSecond: this.milliSecond()\n    };\n  }\n\n  min(...args) {\n    let result = Infinity;\n    let compares = slice.call(args);\n    let index = 0;\n    const len = compares.length;\n    if (len === 0) {\n      throw new Error('min require at least one argument');\n    }\n    const some = compares.some(value => !isDate(value));\n    if (some) {\n      throw new TypeError('min require Date type');\n    }\n    compares = [this.date].concat(compares);\n    while (index < len + 1) {\n      if (+compares[index] < result) {\n        result = compares[index];\n      }\n      index += 1;\n    }\n    return result;\n  }\n\n  max(...args) {\n    let result = -Infinity;\n    let compares = slice.call(args);\n    let index = 0;\n    const len = compares.length;\n    if (len === 0) {\n      throw new Error('max require at least one argument');\n    }\n    const some = compares.some(value => !isDate(value));\n    if (some) {\n      throw new TypeError('max require Date type');\n    }\n    compares = [this.date].concat(compares);\n    while (index < len + 1) {\n      if (+compares[index] > result) {\n        result = compares[index];\n      }\n      index += 1;\n    }\n    return result;\n  }\n\n  between(date1, date2) {\n    if (isUndefined(date1) || isUndefined(date2)) {\n      throw new Error('arguments must be defined');\n    }\n    if (!(isDate(date1) && isDate(date2))) {\n      throw new TypeError('arguments must be Date type');\n    }\n    return this.after(date1) && this.before(date2);\n  }\n\n  // return the duration this.date - date.\n  sub(date, ...args) {\n    if (args.length > 0) {\n      return minus(date, args[0]);\n    }\n    return minus(this.date, date);\n  }\n\n  // return the time elapsed by now\n  elapse() {\n    const now = new Date();\n    return minus(now, this.date);\n  }\n\n  // return the time elapsed since date\n  since(date, ...args) {\n    if (args.length > 0) {\n      return this.sub(args[0], date);\n    }\n    const now = new Date();\n    return this.sub(now, date);\n  }\n\n  getDateOffset() {\n    return -Math.round(this.date.getTimezoneOffset() / 15) * 15;\n  }\n\n  utcOffset(input, keepLocalTime, keepMinutes) {\n    const offset = this._offset || 0;\n    let localAdjust;\n    let minutes = input;\n\n    if (!isUndefined(minutes)) {\n      if (isString(minutes)) {\n        minutes = offsetFromString(matchShortOffset, minutes);\n        if (minutes === null) {\n          return this;\n        }\n      } else if (isNumber(minutes) && (Math.abs(minutes) < 16 && !keepMinutes)) {\n        minutes = minutes * 60;\n      }\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = this.getDateOffset();\n      }\n      this._offset = minutes;\n      this._isUTC = true;\n      if (localAdjust != null) {\n        this.addMinutes(localAdjust);\n      }\n      if (offset !== minutes) {\n        if (!keepLocalTime) {\n          this.addMinutes(minutes - offset);\n        }\n      }\n      return this;\n    } else {\n      return this._isUTC ? offset : this.getDateOffset();\n    }\n  }\n\n  utc(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  local(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.addMinutes(-this.getDateOffset());\n      }\n    }\n    return this;\n  }\n\n\n  // parseZone() {\n  //   if (this._tzm != null) {\n  //     this.utcOffset(this._tzm, false, true);\n  //   }\n  //   if (isString(this._i)) {\n  //     const tZone = offsetFromString(matchOffset, this._i);\n  //     if (tZone != null) {\n  //       this.utcOffset(tZone);\n  //     } else {\n  //       this.utcOffset(0, true);\n  //     }\n  //   }\n  //   return this;\n  // }\n\n  isDST() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() ||\n      this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  isLocal() {\n    return !this._isUTC;\n  }\n\n  isUtcOffset() {\n    return this._isUTC;\n  }\n\n  isUtc() {\n    return this._isUTC && this._offset === 0;\n  }\n\n  isUTC() {\n    return this.isUtc();\n  }\n}\n\ninitLocale();\n\nexport default Now;\n"],"names":["relativeTimeWithPlural","number","withoutSuffix","key","word","num","forms","split","plural","relativeTimeWithMutation","text","mutationTable","undefined","charAt","substring","softMutation","mutation","lastNumber","translate","result","n","isFuture","processRelativeTime","format","numbersFuture","numbersPast","verbalNumber","week","weekEndings","this","day","eifelerRegelAppliesToNumber","parseInt","isNaN","lastDigit","translateSingular","special","units","relativeTimeWithSingular","relativeTimeMr","string","output","replace","separator","numberNoun","hundred","Math","floor","ten","one","numbersNouns","numberAsNoun","processHoursFunction","str","hours","isDate","value","Date","toString","call","isString","isNumber","isUndefined","isFunction","Function","isArray","nativeIsArray","isObject","Object","prototype","has","obj","hasOwnProperty","toInt","isFinite","ceil","absFloor","compare","date1","date2","Error","TypeError","minus","compareArrays","array1","array2","dontConvert","l1","length","l2","len","min","lenthDiff","abs","diffs","i","extend","a","b","valueOf","hooks","hookCallback","apply","arguments","deprecateSimple","name","msg","deprecationHandler","deprecations","suppressDeprecationWarnings","console","warn","zeroFill","targetLength","forceSign","absNumber","zeroToFill","pow","max","substr","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","mom","createUTC","push","monthsShort","months","sort","regexEscape","_monthsRegex","RegExp","join","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","computeWeekdaysParse","minPieces","minp","shortp","longp","weekdaysMin","weekdaysShort","weekdays","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","mergeConfigs","parentConfig","childConfig","res","prop","normalizeLocale","toLowerCase","loadLocale","oldLocale","locales","globalLocale","_abbr","i18ns","getSetGlobalLocale","values","data","getLocale","defineLocale","config","baseConfig","abbr","_config","parentLocale","localeFamilies","Locale","forEach","x","locale","_locale","names","j","next","slice","chooseLocale","getSetWeekYearHelper","input","weekday","dow","doy","weeksTarget","weekOfYear","year","weeksInYear","weekYear","dayOfYearData","dayOfYearFromWeeks","date","createUTCDate","dayOfYear","getUTCFullYear","month","getUTCMonth","getUTCDate","hFormat","hour","kFormat","addWeekYearFormatToken","token","getter","addFormatToken","meridiem","lowercase","localeData","minute","offset","utcOffset","sign","MONTHS_IN_FORMAT","set","now","_calendar","_longDateFormat","formatUpper","toUpperCase","val","_invaliDate","_ordinal","_relativeTime","diff","context","_months","isFormat","test","m","_monthsShort","monthName","strict","regex","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","indexOf","isStrict","defaultMonthsRegex","defaultMonthsShortRegex","_week","_weekdays","weekDay","_weekdaysShort","_weekdaysMin","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","minutes","isLower","defaultLocaleMonths","defaultLocaleMonthsShort","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","symbolMap","pluralForm","plurals","pluralize","u","f","match","numberMap","suffixes","period","last2Digits","exec","momentToFormat","_monthsGenitiveEl","_monthsNominativeEl","_calendarEl","monthsShortDot","monthsParse","monthsRegex","monthsShortWithDots","monthsShortWithoutDots","s","isUpper","translator","wordKey","words","correctGrammaticalCase","monthsNominative","monthsSubjective","days","af","ardz","arkw","arly","arma","arsa","artn","ar","az","be","bg","bm","bn","bo","br","bs","ca","cs","cv","cy","da","deat","dech","de","dv","el","enau","enca","engb","enie","ennz","eo","esdo","esus","es","et","eu","fa","fi","fo","frca","frch","fr","fy","gd","gl","gomlatn","gu","he","hi","hr","hu","hyam","id","is","it","ja","jv","ka","kk","km","kn","ko","ky","lb","lo","lt","lv","me","mi","mk","ml","mr","msmy","ms","my","nb","ne","nlbe","nl","nn","pain","pl","ptbr","pt","ro","ru","sd","se","si","sk","sl","sq","srcyrl","sr","ss","sv","sw","ta","te","tet","th","tlph","time","nominative","hm","ArrayProto","Array","nativeIndexOf","matchWord","nativeDatetoISOString","toISOString","invalidDateError","invalidDateRegExp","matchShortOffset","keys","isLeapYear","o","listLocales","daysInYear","args","UTC","firstWeekOffset","fwd","getUTCDay","resYear","resDayOfYear","weekOffset","resWeek","weekOffsetNext","formattingTokens","localFormattingTokens","removeFormattingTokens","formatFunctions","formatTokenFunctions","initFormat","y","isoWeekYear","second","milliSecond","padded","ordinal","callback","func","array","expandFormat","makeFormatFunction","replaceLongDateFormatTokens","longDateFormat","lastIndex","chunkOffset","nativeGet","unit","getName","_isUTC","nativeSet","setName","Now","mondayFirst","_format","parse","initDate","initIsDate","index","dateIterator","isDateIterator","that","getDay","computeBeginningOfWeek","addDays","clone","weekdaysParse","parseWeekday","localeWeekDay","isoWeekDay","parseIsoWeekday","weekInfo","isoWeek","setMilliseconds","getMilliseconds","setSeconds","getSeconds","setMinutes","getMinutes","setHours","getHours","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","ifMiliSecond","isUtc","formatMoment","truncate","firstDayMonday","computeBeginningOfMonth","addMonths","computeBeginningOfMinute","computeBeginningOfHour","computeBeginningOfDay","computeBeginningOfQuarter","computeBeginningOfYear","addMilliSeconds","metaMinute","addYears","round","beginningOfDay","beginningOfYear","Infinity","compares","some","concat","after","before","sub","getTimezoneOffset","keepLocalTime","keepMinutes","_offset","localAdjust","getDateOffset","matcher","matches","parts","offsetFromString","addMinutes","updateLocale"],"mappings":"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MAAM,iBACtC,uBAAuBA,MAAM,wBAEpC,YACC,aACF,gBACC,kBACC,yBACC,8CAGG,yBACA,6BACC,wBACD,2BACC,iCACA,0BAGF,aACF,cACH,cACA,gBACC,gBACD,cACC,aACD,eACC,aACD,gBACC,eACD,aACC,gCAEkB,oBACf,gBAEF,MACA,eCxCC,uFAAuFA,MAAM,iBACxF,iEAAiEA,MAAM,uBAClE,WACR,sDAAsDA,MAAM,mBACvD,qCAAqCA,MAAM,iBAC7C,uBAAuBA,MAAM,yBACtB,qBAEd,YACC,aACF,gBACC,kBACC,yBACC,4CAGG,6BACA,yBACC,sBACD,uBACC,+BACA,0BAGF,eACF,cACH,sBACA,gBACC,eACD,eACC,cACD,aACC,aACD,aACC,YACD,WACC,iCAEkB,iCAChBN,EAAQuR,UACNA,eAGD,QACA,QACA,QACA,UACA,WACIvR,GAAqB,IAAXA,EAAe,KAAO,SAGpC,QACA,WACIA,GAAqB,IAAXA,EAAe,KAAO,mBCrDrC,uFAAuFM,MAAM,iBACxF,iEAAiEA,MAAM,uBAClE,WACR,sDAAsDA,MAAM,mBACvD,qCAAqCA,MAAM,iBAC7C,uBAAuBA,MAAM,yBACtB,qBAEd,YACC,aACF,gBACC,kBACC,yBACC,4CAGG,6BACA,yBACC,sBACD,uBACC,+BACA,0BAGF,eACF,cACH,sBACA,gBACC,eACD,eACC,cACD,aACC,aACD,aACC,YACD,WACC,iCAEkB,iCAChBN,EAAQuR,UACNA,eAGD,QACA,QACA,QACA,UACA,WACIvR,GAAqB,IAAXA,EAAe,KAAO,SAGpC,QACA,WACIA,GAAqB,IAAXA,EAAe,KAAO,iBAItC,MACA,eC1DC,uFAAuFM,MAAM,iBACxF,iEAAiEA,MAAM,uBAClE,WACR,sDAAsDA,MAAM,mBACvD,qCAAqCA,MAAM,iBAC7C,uBAAuBA,MAAM,yBACtB,qBAEd,YACC,aACF,gBACC,kBACC,yBACC,4CAGG,6BACA,yBACC,sBACD,uBACC,+BACA,0BAGF,eACF,cACH,sBACA,gBACC,eACD,eACC,cACD,aACC,aACD,aACC,YACD,WACC,iCAEkB,g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AiDA,MAAM,wBAE9D,YACC,aACF,gBACC,kBACC,yBACC,6CAGG,4BACA,2BACC,yBACD,8BACC,uCACA,0BAGF,aACF,UACH,mBACA,aACC,YACD,aACC,YACD,aACC,YACD,WACC,UACD,cACC,sBAGC,MACA,ICvCHwQ,MACD,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KAGCO,QACC,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,gBAIG,6FAA6F/Q,MAAM,iBAC9F,+EAA+EA,MAAM,uBAChF,WACR,0DAA0DA,MAAM,mBAC3D,qCAAqCA,MAAM,iBAC7C,wBAAwBA,MAAM,wBAErC,aACC,cACF,gBACC,kBACC,2BACC,+CAGG,oBACA,qBACC,mBACD,uBACC,6BACA,0BAGF,eACF,aACH,kBACA,gBACC,aACD,eACC,YACD,cACC,WACD,iBACC,cACD,eACC,6BAEGiC,UACAA,EAAOE,QAAQ,gBAAiB,mBAAS4O,GAAUD,0BAEjD7O,UACFA,EAAOE,QAAQ,MAAO,mBAASqO,GAAUM,oBAEnC,sDACFvE,EAAMM,UACJ,KAATN,MACK,GAEQ,WAAbM,EACKN,EAAO,EAAIA,EAAOA,EAAO,GACV,aAAbM,EACFN,EACe,aAAbM,EACFN,GAAQ,GAAKA,EAAOA,EAAO,GACZ,SAAbM,EACFN,EAAO,QADT,qBAIAA,EAAMS,EAAQmD,UACjB5D,EAAO,EACF,SACEA,EAAO,GACT,WACEA,EAAO,GACT,WACEA,EAAO,GACT,OAEF,iCAEe,gCAChB7M,UACIA,mBAGL,MACA,eCrGC,yCAAyCM,MAAM,iBAC1C,yCAAyCA,MAAM,cAClD,8BAA8BA,MAAM,mBAC/B,gBAAgBA,MAAM,iBACxB,gBAAgBA,MAAM,wBAE7B,aACC,cACF,gBACC,oBACC,4BACC,8BACH,gBACC,oBACC,4BACC,+CAGG,gBACA,iBACC,kBACD,iBACC,uBACA,0BAGF,YACF,SACH,SACC,QACD,QACC,QACD,UACC,SACD,QACC,QACD,SACC,QACD,SACC,8BAEkB,kCAChBN,EAAQuR,UACNA,OACD,QACA,QACA,aA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,QACI,iCACJ,OACA,OACA,OACA,QACI,uCAGH,0BAGF,gBACF,YACH,oBACA,YACC,cACD,SACC,YACD,SACC,YACD,WACC,cACD,YACC,oCAEkB,+CAChB7B,OACAiC,EAAYjC,EAAS,GACrBwR,EAAcxR,EAAS,WACd,IAAXA,EACQA,QACe,IAAhBwR,EACCxR,QACDwR,EAAc,IAAMA,EAAc,GACjCxR,QACa,IAAdiC,EACCjC,QACa,IAAdiC,EACCjC,QACa,IAAdiC,GAAiC,IAAdA,EAClBjC,QAEFA,mBAGL,MACA,eCrEC,yFAAyFM,MAAM,iBAC1F,yEAAyEA,MAAM,uBAC1E,WACR,wEAAwEA,MAAM,mBACzE,2CAA2CA,MAAM,iBACnD,wBAAwBA,MAAM,wBAErC,iBACC,kBACF,gBACC,kBACC,+BACC,mDAGG,qBACA,qBACC,mBACD,uBACC,6BACA,0BAGF,kBACF,aACH,kBACA,kBACC,gBACD,kBACC,gBACD,eACC,aACD,cACC,YACD,cACC,yBAES,sEACFuM,EAAMM,UACJ,KAATN,MACK,GAES,WAAbM,GAAyBN,GAAQ,GACvB,iBAAbM,GACa,eAAbA,EACON,EAAO,GAETA,qBAEAA,EAAMS,EAAQmD,UACjB5D,EAAO,EACF,SACEA,EAAO,GACT,SACEA,EAAO,GACT,eACEA,EAAO,GACT,aAEF,WpE3DLiE,MACD,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KAGCO,QACC,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,gBAkFG,wFAAwF/Q,MAAM,iBACzF,gFAAgFA,MAAM,uBACjF,WACR,uDAAuDA,MAAM,mBACxD,kCAAkCA,MAAM,iBAC1C,qBAAqBA,MAAM,wBAElC,mBACC,oBACF,gBACC,kBACC,iCACC,qDAGG,kBACA,sBACC,mBACD,oBACC,4BACA,0BAGF,eACF,aACHgC,IACAA,KACCA,IACDA,KACCA,IACDA,KACCA,IACDA,KACCA,IACDA,KACCA,qBAEGC,UACAA,EAAOE,QAAQ,gBAAiB,mBAAS4O,GAAUD,0BAEjD7O,UACFA,EAAOE,QAAQ,M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tC,uBAAuBA,MAAM,wBAEpC,WACC,YACF,gBACC,kBACC,wBACC,4CAGG,sBACA,yBACC,uBACD,wBACC,gCACA,0BAGF,gBACF,eACH,mBACA,cACCP,IACD,WACCA,IACD,UACCA,IACD,YACCA,IACD,WACCA,aAGC,MACA,ICrCHgS,IAAe,QAAS,QAAS,QAAS,QAAS,WAAY,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,4BAO/G,oFAAoFzR,MAAM,gBACtF,kFAAkFA,MAAM,0BAI5F,gEAAgEA,MAAM,gBAClE,gEAAgEA,MAAM,2BAGtE,gEAAgEA,MAAM,YAC1E,gEAAgEA,MAAM,cACpE,gEAEG,uBAAuBA,MAAM,iBAC/B,uBAAuBA,MAAM,oCAEzByR,oBACCA,eAGL,4NAGK,6NAGC,+IAGK,gHAElB,YACC,aACF,gBACC,qBACC,6BACC,iDAGG,yBACA,wBACA,iCACAnE,MACHA,EAAIlM,SAAWE,KAAKF,cAcH,IAAfE,KAAKC,MACA,mBAEF,yBAhBCD,KAAKC,YACN,QACI,iCACJ,OACA,OACA,QACI,iCACJ,OACA,OACA,QACI,gDASN+L,MACHA,EAAIlM,SAAWE,KAAKF,cAcH,IAAfE,KAAKC,MACA,mBAEF,yBAhBCD,KAAKC,YACN,QACI,+BACJ,OACA,OACA,QACI,+BACJ,OACA,OACA,QACI,qCASL,0BAGF,gBACF,aACH,qBACA9B,KACCA,IACD,SACCA,IACD,UACCA,IACD,WACCA,IACD,SACCA,iBAES,sCACV2L,0BACqB+C,KAAK/C,sBAEtBmB,EAAMS,EAAQmD,UACjB5D,EAAO,EACF,OACEA,EAAO,GACT,OACEA,EAAO,GACT,MAEF,iCAEe,oCAChB7M,EAAQuR,UACNA,OACD,QACA,QACA,aACOvR,WACP,WACOA,YACP,QACA,WACOA,sBAEHA,cAIN,MACA,I6EhKHgI,IACJ,QACA,UACA,OACA,QACA,MACA,MACA,SACA,OACA,UACA,SACA,QACA,SAEI2K,IACJ,MACA,OACA,QACA,OACA,OACA,MACA,kCAKa3K,YACH2K,iBACKA,eACFA,sBAEP,YACC,aACF,gBACC,kBACC,yB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AEF,oBAGF,MACA,eCnEC,4FAA4FvM,MAAM,iBAC7F,kDAAkDA,MAAM,cAC3D,kDAAkDA,MAAM,mBACnD,iCAAiCA,MAAM,iBACzC,yBAAyBA,MAAM,wBAEtC,YACC,aACF,gBACC,kBACC,yBACC,6CAGG,wBACA,yBACC,wBACD,6BACC,wCACA,0BAGF,cACF,aACH,iBACA,gBACC,eACD,eACC,aACD,eACC,aACD,eACC,aACD,eACC,mCAEkB,wCAChBN,OACAiG,EAAIjG,EAAS,UAKZA,GAJmC,MAAvBA,EAAS,IAAM,IAAa,KACtC,IAANiG,EAAW,KACH,IAANA,EAAW,KACH,IAANA,EAAW,KAAO,iBAIpB,MACA,eChDC,oGAAoG3F,MAAM,iBACrG,iEAAiEA,MAAM,uBAClE,WACR,iDAAiDA,MAAM,mBAClD,8CAA8CA,MAAM,iBACtD,yBAAyBA,MAAM,yBACxB,qBAEd,WACC,YACF,gBACC,kBACC,6BACC,kDAEO,sCACVoL,SACc,eAAVA,qBAEAmB,EAAMS,EAAQmD,UACjB5D,EAAO,GACF,aAEF,gCAGE,2BACA,8BACC,6BACD,iCACC,sCACA,0BAGF,cACF,cACH,iBACA,YACC,YACD,eACC,eACD,WACC,WACD,aACC,aACD,UACC,qBC9CE,0FAA0FvM,MAAM,iBAC3F,kDAAkDA,MAAM,cAC3D,yDAAyDA,MAAM,mBAC1D,8BAA8BA,MAAM,iBACtC,wBAAwBA,MAAM,wBAErC,YACC,aACF,eACC,mBACC,0BACC,+CAGG,4BACA,yBACC,kCACD,wBACC,qCACA,0BAGF,qBACF,qBACH,kBACA,kBACC,cACD,gBACC,YACD,gBACC,YACD,iBACC,aACD,gBACC,kCAEkB,2BAChBN,UACCA,aAGF,MACA,IvF3CHiD,GAAe,iDAAiD3C,MAAM,KwFCtEgR,MACD,UACA,UACA,WACC,WACA,UACD,SACA,UACC,UACA,SACD,UACA,YACE,UACF,SACA,WACC,WACA,WACA,WACA,SClBAtJ,IACJ,QACA,QACA,OACA,QACA,MACA,MACA,SACA,OACA,QACA,SACA,QACA,SAGI2K,IACJ,QACA,MACA,OACA,MACA,SACA,OACA,eC6FMC,WACGC,WACAC,WACAC,WACAC,WACAC,WACAC,MACHC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,WACGC,WACAC,MACHC,MACAC,MACAC,WACGC,WACAC,WACAC,WACAC,WACAC,MACHC,WACGC,WACAC,MACHC,MACAC,MACAC,MACAC,MACAC,MACAC,WACGC,WACAC,MACHC,MACAC,MACAC,MACAC,cACMC,MACNC,MACAC,MACAC,MACAC,MACAC,WACGC,MACHC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,WACGC,MACHC,MACAC,MACAC,MACAC,WACGC,MACHC,MACAC,WACGC,MACHC,WACGC,MACHC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,aACKC,MACLC,MACAC,MACAC,MACAC,MACAC,MACAC,OACCC,MACDC,WACGC,e1F9JD,kMAAkM5Y,MAAM,iBACnM,0HAA0HA,MAAM,uBAC3H,WACR,2DAA2DA,MAAM,mBAC5D,2DAA2DA,MAAM,iBACnE,2DAA2DA,MAAM,wBAExE,YACC,aACF,gBACC,kBACC,yBACC,6CAGG,sBACA,uBACC,cACD,uBACC,eACA,0BA9Ed,SAAyBkC,OACnB2W,EAAO3W,YACwB,IAA3BA,EAAO8M,QAAQ,OAClB6J,EAAK5N,MAAM,GAAI,UACU,IAA3B/I,EAAO8M,QAAQ,OACX6J,EAAK5N,MAAM,GAAI,UACU,IAA3B/I,EAAO8M,QAAQ,OACX6J,EAAK5N,MAAM,GAAI,SACf4N,eAIX,SAAuB3W,OACjB2W,EAAO3W,YACwB,IAA3BA,EAAO8M,QAAQ,OAClB6J,EAAK5N,MAAM,GAAI,UACU,IAA3B/I,EAAO8M,QAAQ,OACX6J,EAAK5N,MAAM,GAAI,UACU,IAA3B/I,EAAO8M,QAAQ,OACX6J,EAAK5N,MAAM,GAAI,SACf4N,YA+DJ,YACA,aACClY,IA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"}